

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Jul 05 07:52:26 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F886
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK3,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	nvBANK3,global,class=BANK3,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    12                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,noexec
    13                           	psect	inittext,global,class=CODE,delta=2
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	maintext,global,class=CODE,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text10,local,class=CODE,merge=1,delta=2
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2
    35                           	psect	text16,local,class=CODE,merge=1,delta=2
    36                           	psect	text17,local,class=CODE,merge=1,delta=2
    37                           	psect	text18,local,class=CODE,merge=1,delta=2
    38                           	psect	text19,local,class=CODE,merge=1,delta=2
    39                           	psect	text20,local,class=CODE,merge=1,delta=2
    40                           	psect	text21,local,class=CODE,merge=1,delta=2
    41                           	psect	text22,local,class=CODE,merge=1,delta=2
    42                           	psect	text23,local,class=CODE,merge=1,delta=2
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2,group=1
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2
    48                           	psect	text29,local,class=CODE,merge=1,delta=2
    49                           	psect	text30,local,class=CODE,merge=1,delta=2
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=3
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=3
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=3
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=3
    55                           	psect	text36,local,class=CODE,merge=1,delta=2,group=3
    56                           	psect	text37,local,class=CODE,merge=1,delta=2
    57                           	psect	text38,local,class=CODE,merge=1,delta=2,group=1
    58                           	psect	text39,local,class=CODE,merge=1,delta=2
    59                           	psect	text40,local,class=CODE,merge=1,delta=2,group=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text42,local,class=CODE,merge=1,delta=2,group=3
    62                           	psect	text43,local,class=CODE,merge=1,delta=2,group=3
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text45,local,class=CODE,merge=1,delta=2,group=1
    66                           	psect	text46,local,class=CODE,merge=1,delta=2,group=1
    67                           	psect	functab,global,class=ENTRY,delta=2
    68                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    69                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    70                           	dabs	1,0x7E,2
    71     0000                     
    72                           ; Generated 12/10/2023 GMT
    73                           ; 
    74                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    75                           ; All rights reserved.
    76                           ; 
    77                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    78                           ; 
    79                           ; Redistribution and use in source and binary forms, with or without modification, are
    80                           ; permitted provided that the following conditions are met:
    81                           ; 
    82                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    83                           ;        conditions and the following disclaimer.
    84                           ; 
    85                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    86                           ;        of conditions and the following disclaimer in the documentation and/or other
    87                           ;        materials provided with the distribution. Publication is not required when
    88                           ;        this file is used in an embedded application.
    89                           ; 
    90                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    91                           ;        software without specific prior written permission.
    92                           ; 
    93                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    94                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    95                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    96                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    97                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    98                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    99                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   100                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   101                           ; 
   102                           ; 
   103                           ; Code-generator required, PIC16F886 Definitions
   104                           ; 
   105                           ; SFR Addresses
   106     0000                     	;# 
   107     0001                     	;# 
   108     0002                     	;# 
   109     0003                     	;# 
   110     0004                     	;# 
   111     0005                     	;# 
   112     0006                     	;# 
   113     0007                     	;# 
   114     0009                     	;# 
   115     000A                     	;# 
   116     000B                     	;# 
   117     000C                     	;# 
   118     000D                     	;# 
   119     000E                     	;# 
   120     000E                     	;# 
   121     000F                     	;# 
   122     0010                     	;# 
   123     0011                     	;# 
   124     0012                     	;# 
   125     0013                     	;# 
   126     0014                     	;# 
   127     0015                     	;# 
   128     0015                     	;# 
   129     0016                     	;# 
   130     0017                     	;# 
   131     0018                     	;# 
   132     0019                     	;# 
   133     001A                     	;# 
   134     001B                     	;# 
   135     001B                     	;# 
   136     001C                     	;# 
   137     001D                     	;# 
   138     001E                     	;# 
   139     001F                     	;# 
   140     0081                     	;# 
   141     0085                     	;# 
   142     0086                     	;# 
   143     0087                     	;# 
   144     0089                     	;# 
   145     008C                     	;# 
   146     008D                     	;# 
   147     008E                     	;# 
   148     008F                     	;# 
   149     0090                     	;# 
   150     0091                     	;# 
   151     0092                     	;# 
   152     0093                     	;# 
   153     0093                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0095                     	;# 
   157     0096                     	;# 
   158     0097                     	;# 
   159     0098                     	;# 
   160     0099                     	;# 
   161     009A                     	;# 
   162     009B                     	;# 
   163     009C                     	;# 
   164     009D                     	;# 
   165     009E                     	;# 
   166     009F                     	;# 
   167     0105                     	;# 
   168     0107                     	;# 
   169     0108                     	;# 
   170     0109                     	;# 
   171     010C                     	;# 
   172     010C                     	;# 
   173     010D                     	;# 
   174     010E                     	;# 
   175     010F                     	;# 
   176     0185                     	;# 
   177     0187                     	;# 
   178     0188                     	;# 
   179     0189                     	;# 
   180     018C                     	;# 
   181     018D                     	;# 
   182     0000                     	;# 
   183     0001                     	;# 
   184     0002                     	;# 
   185     0003                     	;# 
   186     0004                     	;# 
   187     0005                     	;# 
   188     0006                     	;# 
   189     0007                     	;# 
   190     0009                     	;# 
   191     000A                     	;# 
   192     000B                     	;# 
   193     000C                     	;# 
   194     000D                     	;# 
   195     000E                     	;# 
   196     000E                     	;# 
   197     000F                     	;# 
   198     0010                     	;# 
   199     0011                     	;# 
   200     0012                     	;# 
   201     0013                     	;# 
   202     0014                     	;# 
   203     0015                     	;# 
   204     0015                     	;# 
   205     0016                     	;# 
   206     0017                     	;# 
   207     0018                     	;# 
   208     0019                     	;# 
   209     001A                     	;# 
   210     001B                     	;# 
   211     001B                     	;# 
   212     001C                     	;# 
   213     001D                     	;# 
   214     001E                     	;# 
   215     001F                     	;# 
   216     0081                     	;# 
   217     0085                     	;# 
   218     0086                     	;# 
   219     0087                     	;# 
   220     0089                     	;# 
   221     008C                     	;# 
   222     008D                     	;# 
   223     008E                     	;# 
   224     008F                     	;# 
   225     0090                     	;# 
   226     0091                     	;# 
   227     0092                     	;# 
   228     0093                     	;# 
   229     0093                     	;# 
   230     0093                     	;# 
   231     0094                     	;# 
   232     0095                     	;# 
   233     0096                     	;# 
   234     0097                     	;# 
   235     0098                     	;# 
   236     0099                     	;# 
   237     009A                     	;# 
   238     009B                     	;# 
   239     009C                     	;# 
   240     009D                     	;# 
   241     009E                     	;# 
   242     009F                     	;# 
   243     0105                     	;# 
   244     0107                     	;# 
   245     0108                     	;# 
   246     0109                     	;# 
   247     010C                     	;# 
   248     010C                     	;# 
   249     010D                     	;# 
   250     010E                     	;# 
   251     010F                     	;# 
   252     0185                     	;# 
   253     0187                     	;# 
   254     0188                     	;# 
   255     0189                     	;# 
   256     018C                     	;# 
   257     018D                     	;# 
   258     0000                     	;# 
   259     0001                     	;# 
   260     0002                     	;# 
   261     0003                     	;# 
   262     0004                     	;# 
   263     0005                     	;# 
   264     0006                     	;# 
   265     0007                     	;# 
   266     0009                     	;# 
   267     000A                     	;# 
   268     000B                     	;# 
   269     000C                     	;# 
   270     000D                     	;# 
   271     000E                     	;# 
   272     000E                     	;# 
   273     000F                     	;# 
   274     0010                     	;# 
   275     0011                     	;# 
   276     0012                     	;# 
   277     0013                     	;# 
   278     0014                     	;# 
   279     0015                     	;# 
   280     0015                     	;# 
   281     0016                     	;# 
   282     0017                     	;# 
   283     0018                     	;# 
   284     0019                     	;# 
   285     001A                     	;# 
   286     001B                     	;# 
   287     001B                     	;# 
   288     001C                     	;# 
   289     001D                     	;# 
   290     001E                     	;# 
   291     001F                     	;# 
   292     0081                     	;# 
   293     0085                     	;# 
   294     0086                     	;# 
   295     0087                     	;# 
   296     0089                     	;# 
   297     008C                     	;# 
   298     008D                     	;# 
   299     008E                     	;# 
   300     008F                     	;# 
   301     0090                     	;# 
   302     0091                     	;# 
   303     0092                     	;# 
   304     0093                     	;# 
   305     0093                     	;# 
   306     0093                     	;# 
   307     0094                     	;# 
   308     0095                     	;# 
   309     0096                     	;# 
   310     0097                     	;# 
   311     0098                     	;# 
   312     0099                     	;# 
   313     009A                     	;# 
   314     009B                     	;# 
   315     009C                     	;# 
   316     009D                     	;# 
   317     009E                     	;# 
   318     009F                     	;# 
   319     0105                     	;# 
   320     0107                     	;# 
   321     0108                     	;# 
   322     0109                     	;# 
   323     010C                     	;# 
   324     010C                     	;# 
   325     010D                     	;# 
   326     010E                     	;# 
   327     010F                     	;# 
   328     0185                     	;# 
   329     0187                     	;# 
   330     0188                     	;# 
   331     0189                     	;# 
   332     018C                     	;# 
   333     018D                     	;# 
   334     0000                     	;# 
   335     0001                     	;# 
   336     0002                     	;# 
   337     0003                     	;# 
   338     0004                     	;# 
   339     0005                     	;# 
   340     0006                     	;# 
   341     0007                     	;# 
   342     0009                     	;# 
   343     000A                     	;# 
   344     000B                     	;# 
   345     000C                     	;# 
   346     000D                     	;# 
   347     000E                     	;# 
   348     000E                     	;# 
   349     000F                     	;# 
   350     0010                     	;# 
   351     0011                     	;# 
   352     0012                     	;# 
   353     0013                     	;# 
   354     0014                     	;# 
   355     0015                     	;# 
   356     0015                     	;# 
   357     0016                     	;# 
   358     0017                     	;# 
   359     0018                     	;# 
   360     0019                     	;# 
   361     001A                     	;# 
   362     001B                     	;# 
   363     001B                     	;# 
   364     001C                     	;# 
   365     001D                     	;# 
   366     001E                     	;# 
   367     001F                     	;# 
   368     0081                     	;# 
   369     0085                     	;# 
   370     0086                     	;# 
   371     0087                     	;# 
   372     0089                     	;# 
   373     008C                     	;# 
   374     008D                     	;# 
   375     008E                     	;# 
   376     008F                     	;# 
   377     0090                     	;# 
   378     0091                     	;# 
   379     0092                     	;# 
   380     0093                     	;# 
   381     0093                     	;# 
   382     0093                     	;# 
   383     0094                     	;# 
   384     0095                     	;# 
   385     0096                     	;# 
   386     0097                     	;# 
   387     0098                     	;# 
   388     0099                     	;# 
   389     009A                     	;# 
   390     009B                     	;# 
   391     009C                     	;# 
   392     009D                     	;# 
   393     009E                     	;# 
   394     009F                     	;# 
   395     0105                     	;# 
   396     0107                     	;# 
   397     0108                     	;# 
   398     0109                     	;# 
   399     010C                     	;# 
   400     010C                     	;# 
   401     010D                     	;# 
   402     010E                     	;# 
   403     010F                     	;# 
   404     0185                     	;# 
   405     0187                     	;# 
   406     0188                     	;# 
   407     0189                     	;# 
   408     018C                     	;# 
   409     018D                     	;# 
   410     0000                     	;# 
   411     0001                     	;# 
   412     0002                     	;# 
   413     0003                     	;# 
   414     0004                     	;# 
   415     0005                     	;# 
   416     0006                     	;# 
   417     0007                     	;# 
   418     0009                     	;# 
   419     000A                     	;# 
   420     000B                     	;# 
   421     000C                     	;# 
   422     000D                     	;# 
   423     000E                     	;# 
   424     000E                     	;# 
   425     000F                     	;# 
   426     0010                     	;# 
   427     0011                     	;# 
   428     0012                     	;# 
   429     0013                     	;# 
   430     0014                     	;# 
   431     0015                     	;# 
   432     0015                     	;# 
   433     0016                     	;# 
   434     0017                     	;# 
   435     0018                     	;# 
   436     0019                     	;# 
   437     001A                     	;# 
   438     001B                     	;# 
   439     001B                     	;# 
   440     001C                     	;# 
   441     001D                     	;# 
   442     001E                     	;# 
   443     001F                     	;# 
   444     0081                     	;# 
   445     0085                     	;# 
   446     0086                     	;# 
   447     0087                     	;# 
   448     0089                     	;# 
   449     008C                     	;# 
   450     008D                     	;# 
   451     008E                     	;# 
   452     008F                     	;# 
   453     0090                     	;# 
   454     0091                     	;# 
   455     0092                     	;# 
   456     0093                     	;# 
   457     0093                     	;# 
   458     0093                     	;# 
   459     0094                     	;# 
   460     0095                     	;# 
   461     0096                     	;# 
   462     0097                     	;# 
   463     0098                     	;# 
   464     0099                     	;# 
   465     009A                     	;# 
   466     009B                     	;# 
   467     009C                     	;# 
   468     009D                     	;# 
   469     009E                     	;# 
   470     009F                     	;# 
   471     0105                     	;# 
   472     0107                     	;# 
   473     0108                     	;# 
   474     0109                     	;# 
   475     010C                     	;# 
   476     010C                     	;# 
   477     010D                     	;# 
   478     010E                     	;# 
   479     010F                     	;# 
   480     0185                     	;# 
   481     0187                     	;# 
   482     0188                     	;# 
   483     0189                     	;# 
   484     018C                     	;# 
   485     018D                     	;# 
   486     0000                     	;# 
   487     0001                     	;# 
   488     0002                     	;# 
   489     0003                     	;# 
   490     0004                     	;# 
   491     0005                     	;# 
   492     0006                     	;# 
   493     0007                     	;# 
   494     0009                     	;# 
   495     000A                     	;# 
   496     000B                     	;# 
   497     000C                     	;# 
   498     000D                     	;# 
   499     000E                     	;# 
   500     000E                     	;# 
   501     000F                     	;# 
   502     0010                     	;# 
   503     0011                     	;# 
   504     0012                     	;# 
   505     0013                     	;# 
   506     0014                     	;# 
   507     0015                     	;# 
   508     0015                     	;# 
   509     0016                     	;# 
   510     0017                     	;# 
   511     0018                     	;# 
   512     0019                     	;# 
   513     001A                     	;# 
   514     001B                     	;# 
   515     001B                     	;# 
   516     001C                     	;# 
   517     001D                     	;# 
   518     001E                     	;# 
   519     001F                     	;# 
   520     0081                     	;# 
   521     0085                     	;# 
   522     0086                     	;# 
   523     0087                     	;# 
   524     0089                     	;# 
   525     008C                     	;# 
   526     008D                     	;# 
   527     008E                     	;# 
   528     008F                     	;# 
   529     0090                     	;# 
   530     0091                     	;# 
   531     0092                     	;# 
   532     0093                     	;# 
   533     0093                     	;# 
   534     0093                     	;# 
   535     0094                     	;# 
   536     0095                     	;# 
   537     0096                     	;# 
   538     0097                     	;# 
   539     0098                     	;# 
   540     0099                     	;# 
   541     009A                     	;# 
   542     009B                     	;# 
   543     009C                     	;# 
   544     009D                     	;# 
   545     009E                     	;# 
   546     009F                     	;# 
   547     0105                     	;# 
   548     0107                     	;# 
   549     0108                     	;# 
   550     0109                     	;# 
   551     010C                     	;# 
   552     010C                     	;# 
   553     010D                     	;# 
   554     010E                     	;# 
   555     010F                     	;# 
   556     0185                     	;# 
   557     0187                     	;# 
   558     0188                     	;# 
   559     0189                     	;# 
   560     018C                     	;# 
   561     018D                     	;# 
   562     0000                     	;# 
   563     0001                     	;# 
   564     0002                     	;# 
   565     0003                     	;# 
   566     0004                     	;# 
   567     0005                     	;# 
   568     0006                     	;# 
   569     0007                     	;# 
   570     0009                     	;# 
   571     000A                     	;# 
   572     000B                     	;# 
   573     000C                     	;# 
   574     000D                     	;# 
   575     000E                     	;# 
   576     000E                     	;# 
   577     000F                     	;# 
   578     0010                     	;# 
   579     0011                     	;# 
   580     0012                     	;# 
   581     0013                     	;# 
   582     0014                     	;# 
   583     0015                     	;# 
   584     0015                     	;# 
   585     0016                     	;# 
   586     0017                     	;# 
   587     0018                     	;# 
   588     0019                     	;# 
   589     001A                     	;# 
   590     001B                     	;# 
   591     001B                     	;# 
   592     001C                     	;# 
   593     001D                     	;# 
   594     001E                     	;# 
   595     001F                     	;# 
   596     0081                     	;# 
   597     0085                     	;# 
   598     0086                     	;# 
   599     0087                     	;# 
   600     0089                     	;# 
   601     008C                     	;# 
   602     008D                     	;# 
   603     008E                     	;# 
   604     008F                     	;# 
   605     0090                     	;# 
   606     0091                     	;# 
   607     0092                     	;# 
   608     0093                     	;# 
   609     0093                     	;# 
   610     0093                     	;# 
   611     0094                     	;# 
   612     0095                     	;# 
   613     0096                     	;# 
   614     0097                     	;# 
   615     0098                     	;# 
   616     0099                     	;# 
   617     009A                     	;# 
   618     009B                     	;# 
   619     009C                     	;# 
   620     009D                     	;# 
   621     009E                     	;# 
   622     009F                     	;# 
   623     0105                     	;# 
   624     0107                     	;# 
   625     0108                     	;# 
   626     0109                     	;# 
   627     010C                     	;# 
   628     010C                     	;# 
   629     010D                     	;# 
   630     010E                     	;# 
   631     010F                     	;# 
   632     0185                     	;# 
   633     0187                     	;# 
   634     0188                     	;# 
   635     0189                     	;# 
   636     018C                     	;# 
   637     018D                     	;# 
   638     0000                     	;# 
   639     0001                     	;# 
   640     0002                     	;# 
   641     0003                     	;# 
   642     0004                     	;# 
   643     0005                     	;# 
   644     0006                     	;# 
   645     0007                     	;# 
   646     0009                     	;# 
   647     000A                     	;# 
   648     000B                     	;# 
   649     000C                     	;# 
   650     000D                     	;# 
   651     000E                     	;# 
   652     000E                     	;# 
   653     000F                     	;# 
   654     0010                     	;# 
   655     0011                     	;# 
   656     0012                     	;# 
   657     0013                     	;# 
   658     0014                     	;# 
   659     0015                     	;# 
   660     0015                     	;# 
   661     0016                     	;# 
   662     0017                     	;# 
   663     0018                     	;# 
   664     0019                     	;# 
   665     001A                     	;# 
   666     001B                     	;# 
   667     001B                     	;# 
   668     001C                     	;# 
   669     001D                     	;# 
   670     001E                     	;# 
   671     001F                     	;# 
   672     0081                     	;# 
   673     0085                     	;# 
   674     0086                     	;# 
   675     0087                     	;# 
   676     0089                     	;# 
   677     008C                     	;# 
   678     008D                     	;# 
   679     008E                     	;# 
   680     008F                     	;# 
   681     0090                     	;# 
   682     0091                     	;# 
   683     0092                     	;# 
   684     0093                     	;# 
   685     0093                     	;# 
   686     0093                     	;# 
   687     0094                     	;# 
   688     0095                     	;# 
   689     0096                     	;# 
   690     0097                     	;# 
   691     0098                     	;# 
   692     0099                     	;# 
   693     009A                     	;# 
   694     009B                     	;# 
   695     009C                     	;# 
   696     009D                     	;# 
   697     009E                     	;# 
   698     009F                     	;# 
   699     0105                     	;# 
   700     0107                     	;# 
   701     0108                     	;# 
   702     0109                     	;# 
   703     010C                     	;# 
   704     010C                     	;# 
   705     010D                     	;# 
   706     010E                     	;# 
   707     010F                     	;# 
   708     0185                     	;# 
   709     0187                     	;# 
   710     0188                     	;# 
   711     0189                     	;# 
   712     018C                     	;# 
   713     018D                     	;# 
   714     0000                     	;# 
   715     0001                     	;# 
   716     0002                     	;# 
   717     0003                     	;# 
   718     0004                     	;# 
   719     0005                     	;# 
   720     0006                     	;# 
   721     0007                     	;# 
   722     0009                     	;# 
   723     000A                     	;# 
   724     000B                     	;# 
   725     000C                     	;# 
   726     000D                     	;# 
   727     000E                     	;# 
   728     000E                     	;# 
   729     000F                     	;# 
   730     0010                     	;# 
   731     0011                     	;# 
   732     0012                     	;# 
   733     0013                     	;# 
   734     0014                     	;# 
   735     0015                     	;# 
   736     0015                     	;# 
   737     0016                     	;# 
   738     0017                     	;# 
   739     0018                     	;# 
   740     0019                     	;# 
   741     001A                     	;# 
   742     001B                     	;# 
   743     001B                     	;# 
   744     001C                     	;# 
   745     001D                     	;# 
   746     001E                     	;# 
   747     001F                     	;# 
   748     0081                     	;# 
   749     0085                     	;# 
   750     0086                     	;# 
   751     0087                     	;# 
   752     0089                     	;# 
   753     008C                     	;# 
   754     008D                     	;# 
   755     008E                     	;# 
   756     008F                     	;# 
   757     0090                     	;# 
   758     0091                     	;# 
   759     0092                     	;# 
   760     0093                     	;# 
   761     0093                     	;# 
   762     0093                     	;# 
   763     0094                     	;# 
   764     0095                     	;# 
   765     0096                     	;# 
   766     0097                     	;# 
   767     0098                     	;# 
   768     0099                     	;# 
   769     009A                     	;# 
   770     009B                     	;# 
   771     009C                     	;# 
   772     009D                     	;# 
   773     009E                     	;# 
   774     009F                     	;# 
   775     0105                     	;# 
   776     0107                     	;# 
   777     0108                     	;# 
   778     0109                     	;# 
   779     010C                     	;# 
   780     010C                     	;# 
   781     010D                     	;# 
   782     010E                     	;# 
   783     010F                     	;# 
   784     0185                     	;# 
   785     0187                     	;# 
   786     0188                     	;# 
   787     0189                     	;# 
   788     018C                     	;# 
   789     018D                     	;# 
   790     0000                     	;# 
   791     0001                     	;# 
   792     0002                     	;# 
   793     0003                     	;# 
   794     0004                     	;# 
   795     0005                     	;# 
   796     0006                     	;# 
   797     0007                     	;# 
   798     0009                     	;# 
   799     000A                     	;# 
   800     000B                     	;# 
   801     000C                     	;# 
   802     000D                     	;# 
   803     000E                     	;# 
   804     000E                     	;# 
   805     000F                     	;# 
   806     0010                     	;# 
   807     0011                     	;# 
   808     0012                     	;# 
   809     0013                     	;# 
   810     0014                     	;# 
   811     0015                     	;# 
   812     0015                     	;# 
   813     0016                     	;# 
   814     0017                     	;# 
   815     0018                     	;# 
   816     0019                     	;# 
   817     001A                     	;# 
   818     001B                     	;# 
   819     001B                     	;# 
   820     001C                     	;# 
   821     001D                     	;# 
   822     001E                     	;# 
   823     001F                     	;# 
   824     0081                     	;# 
   825     0085                     	;# 
   826     0086                     	;# 
   827     0087                     	;# 
   828     0089                     	;# 
   829     008C                     	;# 
   830     008D                     	;# 
   831     008E                     	;# 
   832     008F                     	;# 
   833     0090                     	;# 
   834     0091                     	;# 
   835     0092                     	;# 
   836     0093                     	;# 
   837     0093                     	;# 
   838     0093                     	;# 
   839     0094                     	;# 
   840     0095                     	;# 
   841     0096                     	;# 
   842     0097                     	;# 
   843     0098                     	;# 
   844     0099                     	;# 
   845     009A                     	;# 
   846     009B                     	;# 
   847     009C                     	;# 
   848     009D                     	;# 
   849     009E                     	;# 
   850     009F                     	;# 
   851     0105                     	;# 
   852     0107                     	;# 
   853     0108                     	;# 
   854     0109                     	;# 
   855     010C                     	;# 
   856     010C                     	;# 
   857     010D                     	;# 
   858     010E                     	;# 
   859     010F                     	;# 
   860     0185                     	;# 
   861     0187                     	;# 
   862     0188                     	;# 
   863     0189                     	;# 
   864     018C                     	;# 
   865     018D                     	;# 
   866                           
   867                           	psect	idataBANK3
   868     16AF                     __pidataBANK3:
   869                           
   870                           ;initializer for _PID_PERIOD
   871     16AF  3406               	retlw	6
   872     16B0  3400               	retlw	0
   873     16B1  3400               	retlw	0
   874     16B2  3400               	retlw	0
   875                           
   876                           ;initializer for _half_PID_PERIOD
   877     16B3  3403               	retlw	3
   878     16B4  3400               	retlw	0
   879     16B5  3400               	retlw	0
   880     16B6  3400               	retlw	0
   881                           
   882                           	psect	strings
   883     1000                     __pstrings:
   884     1000                     stringtab:
   885     1000                     __stringtab:
   886     1000                     stringcode:	
   887                           ;	String table - string pointers are 1 byte each
   888                           
   889     1000                     stringdir:
   890     1000  3010               	movlw	high stringdir
   891     1001  008A               	movwf	10
   892     1002  0804               	movf	4,w
   893     1003  0A84               	incf	4,f
   894     1004  0782               	addwf	2,f
   895     1005                     __stringbase:
   896     1005  3400               	retlw	0
   897     1006                     __end_of__stringtab:
   898     1006                     _enc_states:
   899     1006  3400               	retlw	0
   900     1007  3401               	retlw	1
   901     1008  34FF               	retlw	255
   902     1009  3400               	retlw	0
   903     100A  34FF               	retlw	255
   904     100B  3400               	retlw	0
   905     100C  3400               	retlw	0
   906     100D  3401               	retlw	1
   907     100E  3401               	retlw	1
   908     100F  3400               	retlw	0
   909     1010  3400               	retlw	0
   910     1011  34FF               	retlw	255
   911     1012  3400               	retlw	0
   912     1013  34FF               	retlw	255
   913     1014  3401               	retlw	1
   914     1015  3400               	retlw	0
   915     1016                     __end_of_enc_states:
   916     1016                     STR_1:
   917     1016  3425               	retlw	37	;'%'
   918     1017  3464               	retlw	100	;'d'
   919     1018  342E               	retlw	46	;'.'
   920     1019  3425               	retlw	37	;'%'
   921     101A  3464               	retlw	100	;'d'
   922     101B  3400               	retlw	0
   923                           
   924                           	psect	nvBANK3
   925     01CB                     __pnvBANK3:
   926     01CB                     _kIntegral:
   927     01CB                     	ds	4
   928     01CF                     _kProportional:
   929     01CF                     	ds	4
   930     0012                     _T2CON	set	18
   931     001D                     _CCP2CON	set	29
   932     0017                     _CCP1CON	set	23
   933     001B                     _CCPR2L	set	27
   934     0015                     _CCPR1L	set	21
   935     0019                     _TXREG	set	25
   936     001A                     _RCREG	set	26
   937     0006                     _PORTB	set	6
   938     0001                     _TMR0	set	1
   939     0005                     _PORTAbits	set	5
   940     0005                     _PORTA	set	5
   941     000B                     _INTCONbits	set	11
   942     0061                     _TMR2IF	set	97
   943     00BD                     _CCP1X	set	189
   944     00BC                     _CCP1Y	set	188
   945     00ED                     _DC2B1	set	237
   946     00EC                     _DC2B0	set	236
   947     00ED                     _CCP2X	set	237
   948     00EC                     _CCP2Y	set	236
   949     00BD                     _DC1B1	set	189
   950     00BC                     _DC1B0	set	188
   951     0035                     _RB5	set	53
   952     0065                     _RCIF	set	101
   953     0064                     _TXIF	set	100
   954     00C2                     _FERR	set	194
   955     00C1                     _OERR	set	193
   956     00C6                     _RX9	set	198
   957     00C5                     _SREN	set	197
   958     00C4                     _CREN	set	196
   959     00C7                     _SPEN	set	199
   960     0058                     _RBIF	set	88
   961     005A                     _T0IF	set	90
   962     005D                     _T0IE	set	93
   963     005B                     _RBIE	set	91
   964     002C                     _RA4	set	44
   965     0092                     _PR2	set	146
   966     009A                     _SPBRGH	set	154
   967     0099                     _SPBRG	set	153
   968     0095                     _WPUB	set	149
   969     0081                     _OPTION_REG	set	129
   970     0087                     _TRISC	set	135
   971     0096                     _IOCB	set	150
   972     0086                     _TRISB	set	134
   973     0085                     _TRISA	set	133
   974     04C5                     _TXEN	set	1221
   975     04C6                     _TX9	set	1222
   976     0465                     _RCIE	set	1125
   977     0464                     _TXIE	set	1124
   978     04C4                     _SYNC	set	1220
   979     04C2                     _BRGH	set	1218
   980     0189                     _ANSELH	set	393
   981     0188                     _ANSEL	set	392
   982     0C3B                     _BRG16	set	3131
   983                           
   984                           	psect	cinit
   985     0015                     start_initialization:	
   986                           ; #config settings
   987                           
   988     0015                     __initialization:
   989                           
   990                           ; Initialize objects allocated to BANK3
   991     0015  1783               	bsf	3,7	;select IRP bank2
   992     0016  30DB               	movlw	low (__pdataBANK3+8)
   993     0017  00FD               	movwf	btemp+-1
   994     0018  3016               	movlw	high __pidataBANK3
   995     0019  00FE               	movwf	btemp
   996     001A  30AF               	movlw	low __pidataBANK3
   997     001B  00FF               	movwf	btemp+1
   998     001C  30D3               	movlw	low __pdataBANK3
   999     001D  0084               	movwf	4
  1000     001E  160A  118A  2716  120A  118A  	fcall	init_ram0
  1001                           
  1002                           ; Clear objects allocated to BANK3
  1003     0023  3090               	movlw	low __pbssBANK3
  1004     0024  0084               	movwf	4
  1005     0025  30CB               	movlw	low (__pbssBANK3+59)
  1006     0026  160A  118A  26A7  120A  118A  	fcall	clear_ram0
  1007                           
  1008                           ; Clear objects allocated to BANK1
  1009     002B  1383               	bcf	3,7	;select IRP bank0
  1010     002C  30A0               	movlw	low __pbssBANK1
  1011     002D  0084               	movwf	4
  1012     002E  30D2               	movlw	low (__pbssBANK1+50)
  1013     002F  160A  118A  26A7  120A  118A  	fcall	clear_ram0
  1014                           
  1015                           ; Clear objects allocated to BANK0
  1016     0034  3064               	movlw	low __pbssBANK0
  1017     0035  0084               	movwf	4
  1018     0036  306C               	movlw	low (__pbssBANK0+8)
  1019     0037  160A  118A  26A7  120A  118A  	fcall	clear_ram0
  1020                           
  1021                           ; Clear objects allocated to COMMON
  1022     003C  01FD               	clrf	__pbssCOMMON& (0+127)
  1023     003D                     end_of_initialization:	
  1024                           ;End of C runtime variable initialization code
  1025                           
  1026     003D                     __end_of__initialization:
  1027     003D  0183               	clrf	3
  1028     003E  120A  158A  2800   	ljmp	_main	;jump to C main() function
  1029                           
  1030                           	psect	bssCOMMON
  1031     007D                     __pbssCOMMON:
  1032     007D                     pos_UpdatePosition@prev_state:
  1033     007D                     	ds	1
  1034                           
  1035                           	psect	bssBANK0
  1036     0064                     __pbssBANK0:
  1037     0064                     _excitation:
  1038     0064                     	ds	2
  1039     0066                     _tsk_task:
  1040     0066                     	ds	1
  1041     0067                     _dummy:
  1042     0067                     	ds	1
  1043     0068                     _pro_ptr:
  1044     0068                     	ds	1
  1045     0069                     _pro_status:
  1046     0069                     	ds	1
  1047     006A                     _pro_myAddress:
  1048     006A                     	ds	1
  1049     006B                     _delayus_variable:
  1050     006B                     	ds	1
  1051                           
  1052                           	psect	bssBANK1
  1053     00A0                     __pbssBANK1:
  1054     00A0                     _pos_currentPosition:
  1055     00A0                     	ds	4
  1056     00A4                     _value:
  1057     00A4                     	ds	4
  1058     00A8                     _tsk_timeStamp:
  1059     00A8                     	ds	4
  1060     00AC                     _previousPosition:
  1061     00AC                     	ds	4
  1062     00B0                     _error:
  1063     00B0                     	ds	4
  1064     00B4                     _activation:
  1065     00B4                     	ds	4
  1066     00B8                     _kDerivative:
  1067     00B8                     	ds	4
  1068     00BC                     _previousError:
  1069     00BC                     	ds	4
  1070     00C0                     _integralError:
  1071     00C0                     	ds	4
  1072     00C4                     _integralErrorScaled:
  1073     00C4                     	ds	4
  1074     00C8                     _setPoint:
  1075     00C8                     	ds	4
  1076     00CC                     _currentPosition:
  1077     00CC                     	ds	4
  1078     00D0                     isr@interruptCounter:
  1079     00D0                     	ds	2
  1080                           
  1081                           	psect	bssBANK3
  1082     0190                     __pbssBANK3:
  1083     0190                     _tsk_tasks:
  1084     0190                     	ds	21
  1085     01A5                     _pro_incoming:
  1086     01A5                     	ds	12
  1087     01B1                     _completeMessage:
  1088     01B1                     	ds	11
  1089     01BC                     _tsk_elapsedTime:
  1090     01BC                     	ds	4
  1091     01C0                     _message:
  1092     01C0                     	ds	11
  1093                           
  1094                           	psect	dataBANK3
  1095     01D3                     __pdataBANK3:
  1096     01D3                     _PID_PERIOD:
  1097     01D3                     	ds	4
  1098     01D7                     _half_PID_PERIOD:
  1099     01D7                     	ds	4
  1100                           
  1101                           	psect	inittext
  1102     1712                     init_fetch0:	
  1103                           ;	Called with low address in FSR and high address in W
  1104                           
  1105     1712  087E               	movf	btemp,w
  1106     1713  008A               	movwf	10
  1107     1714  087F               	movf	btemp+1,w
  1108     1715  0082               	movwf	2
  1109     1716                     init_ram0:	
  1110                           ;Called with:
  1111                           ;	high address of idata address in btemp 
  1112                           ;	low address of idata address in btemp+1 
  1113                           ;	low address of data in FSR
  1114                           ;	high address + 1 of data in btemp-1
  1115                           
  1116     1716  160A  118A  2712  160A  118A  	fcall	init_fetch0
  1117     171B  0080               	movwf	0
  1118     171C  0A84               	incf	4,f
  1119     171D  0804               	movf	4,w
  1120     171E  067D               	xorwf	btemp+-1,w
  1121     171F  1903               	btfsc	3,2
  1122     1720  3400               	retlw	0
  1123     1721  0AFF               	incf	btemp+1,f
  1124     1722  1903               	btfsc	3,2
  1125     1723  0AFE               	incf	btemp,f
  1126     1724  2F16               	goto	init_ram0
  1127                           
  1128                           	psect	clrtext
  1129     16A7                     clear_ram0:	
  1130                           ;	Called with FSR containing the base address, and
  1131                           ;	W with the last address+1
  1132                           
  1133     16A7  0064               	clrwdt	;clear the watchdog before getting into this loop
  1134     16A8                     clrloop0:
  1135     16A8  0180               	clrf	0	;clear RAM location pointed to by FSR
  1136     16A9  0A84               	incf	4,f	;increment pointer
  1137     16AA  0604               	xorwf	4,w	;XOR with final address
  1138     16AB  1903               	btfsc	3,2	;have we reached the end yet?
  1139     16AC  3400               	retlw	0	;all done for this memory range, return
  1140     16AD  0604               	xorwf	4,w	;XOR again to restore value
  1141     16AE  2EA8               	goto	clrloop0	;do the next byte
  1142                           
  1143                           	psect	cstackBANK3
  1144     01DB                     __pcstackBANK3:
  1145     01DB                     ??_executeTasks:
  1146                           
  1147                           ; 1 bytes @ 0x0
  1148     01DB                     	ds	8
  1149                           
  1150                           	psect	cstackBANK1
  1151     00D2                     __pcstackBANK1:
  1152     00D2                     convertToReal@signal:
  1153                           
  1154                           ; 4 bytes @ 0x0
  1155     00D2                     	ds	4
  1156     00D6                     convertToReal@decimal:
  1157                           
  1158                           ; 1 bytes @ 0x4
  1159     00D6                     	ds	1
  1160     00D7                     convertToReal@temp:
  1161                           
  1162                           ; 4 bytes @ 0x5
  1163     00D7                     	ds	4
  1164     00DB                     convertToReal@potDez:
  1165                           
  1166                           ; 4 bytes @ 0x9
  1167     00DB                     	ds	4
  1168     00DF                     convertToReal@value:
  1169                           
  1170                           ; 4 bytes @ 0xD
  1171     00DF                     	ds	4
  1172     00E3                     convertToReal@chars:
  1173                           
  1174                           ; 1 bytes @ 0x11
  1175     00E3                     	ds	1
  1176     00E4                     convertToReal@i:
  1177                           
  1178                           ; 1 bytes @ 0x12
  1179     00E4                     	ds	1
  1180     00E5                     ??_protocol_task:
  1181                           
  1182                           ; 1 bytes @ 0x13
  1183     00E5                     	ds	4
  1184                           
  1185                           	psect	cstackCOMMON
  1186     0070                     __pcstackCOMMON:
  1187     0070                     ?_initTasks:
  1188     0070                     ?_executeTasks:	
  1189                           ; 1 bytes @ 0x0
  1190                           
  1191     0070                     ?_chkchr:	
  1192                           ; 1 bytes @ 0x0
  1193                           
  1194     0070                     ?_clear_usart_errors:	
  1195                           ; 1 bytes @ 0x0
  1196                           
  1197     0070                     ?_ser_init:	
  1198                           ; 1 bytes @ 0x0
  1199                           
  1200     0070                     ?_mot_init:	
  1201                           ; 1 bytes @ 0x0
  1202                           
  1203     0070                     ?_pos_init:	
  1204                           ; 1 bytes @ 0x0
  1205                           
  1206     0070                     ?_pid_pid:	
  1207                           ; 1 bytes @ 0x0
  1208                           
  1209     0070                     ?_pid_clearError:	
  1210                           ; 1 bytes @ 0x0
  1211                           
  1212     0070                     ?_pid_init:	
  1213                           ; 1 bytes @ 0x0
  1214                           
  1215     0070                     ?_pic_init:	
  1216                           ; 1 bytes @ 0x0
  1217                           
  1218     0070                     ?_isr:	
  1219                           ; 1 bytes @ 0x0
  1220                           
  1221     0070                     ?_sys_init:	
  1222                           ; 1 bytes @ 0x0
  1223                           
  1224     0070                     ?_main:	
  1225                           ; 1 bytes @ 0x0
  1226                           
  1227     0070                     ?_cleanupBuffer:	
  1228                           ; 1 bytes @ 0x0
  1229                           
  1230     0070                     ?_framingError:	
  1231                           ; 1 bytes @ 0x0
  1232                           
  1233     0070                     ?_addToIncomingBuffer:	
  1234                           ; 1 bytes @ 0x0
  1235                           
  1236     0070                     ?_toMsgType:	
  1237                           ; 1 bytes @ 0x0
  1238                           
  1239     0070                     ?_pro_init:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242     0070                     ?_pro_setMyId:	
  1243                           ; 1 bytes @ 0x0
  1244                           
  1245     0070                     ?_pid_task:	
  1246                           ; 1 bytes @ 0x0
  1247                           
  1248     0070                     ?_protocol_task:	
  1249                           ; 1 bytes @ 0x0
  1250                           
  1251     0070                     ?_led_task:	
  1252                           ; 1 bytes @ 0x0
  1253                           
  1254     0070                     ?_pos_encoderStatus:	
  1255                           ; 1 bytes @ 0x0
  1256                           
  1257     0070                     pos_encoderStatus@curr:	
  1258                           ; 1 bytes @ 0x0
  1259                           
  1260                           
  1261                           ; 1 bytes @ 0x0
  1262     0070                     	ds	1
  1263     0071                     ??_pos_encoderStatus:
  1264                           
  1265                           ; 1 bytes @ 0x1
  1266     0071                     	ds	2
  1267     0073                     pos_encoderStatus@prev:
  1268                           
  1269                           ; 1 bytes @ 0x3
  1270     0073                     	ds	1
  1271     0074                     ?_pos_UpdatePosition:
  1272     0074                     pos_UpdatePosition@init:	
  1273                           ; 1 bytes @ 0x4
  1274                           
  1275                           
  1276                           ; 1 bytes @ 0x4
  1277     0074                     	ds	1
  1278     0075                     pos_UpdatePosition@dir:
  1279                           
  1280                           ; 1 bytes @ 0x5
  1281     0075                     	ds	1
  1282     0076                     ??_pos_UpdatePosition:
  1283                           
  1284                           ; 1 bytes @ 0x6
  1285     0076                     	ds	4
  1286     007A                     pos_UpdatePosition@port:
  1287                           
  1288                           ; 1 bytes @ 0xA
  1289     007A                     	ds	1
  1290     007B                     pos_UpdatePosition@curr_state:
  1291                           
  1292                           ; 1 bytes @ 0xB
  1293     007B                     	ds	1
  1294     007C                     isr@portB:
  1295                           
  1296                           ; 1 bytes @ 0xC
  1297     007C                     	ds	1
  1298                           
  1299                           	psect	cstackBANK0
  1300     0020                     __pcstackBANK0:
  1301     0020                     ??_isr:
  1302                           
  1303                           ; 1 bytes @ 0x0
  1304     0020                     	ds	4
  1305     0024                     ?_mot_setExcitation:
  1306     0024                     ??_chkchr:	
  1307                           ; 1 bytes @ 0x4
  1308                           
  1309     0024                     ?_putch:	
  1310                           ; 1 bytes @ 0x4
  1311                           
  1312     0024                     ??_clear_usart_errors:	
  1313                           ; 1 bytes @ 0x4
  1314                           
  1315     0024                     ??_ser_init:	
  1316                           ; 1 bytes @ 0x4
  1317                           
  1318     0024                     ?_pos_setCurrentPosition:	
  1319                           ; 1 bytes @ 0x4
  1320                           
  1321     0024                     ??_mot_init:	
  1322                           ; 1 bytes @ 0x4
  1323                           
  1324     0024                     ??_pos_init:	
  1325                           ; 1 bytes @ 0x4
  1326                           
  1327     0024                     ?_pid_setPoint:	
  1328                           ; 1 bytes @ 0x4
  1329                           
  1330     0024                     ?_pid_setDerivativeGain:	
  1331                           ; 1 bytes @ 0x4
  1332                           
  1333     0024                     ?_pid_setIntegralGain:	
  1334                           ; 1 bytes @ 0x4
  1335                           
  1336     0024                     ?_pid_setProportionalGain:	
  1337                           ; 1 bytes @ 0x4
  1338                           
  1339     0024                     ??_pid_clearError:	
  1340                           ; 1 bytes @ 0x4
  1341                           
  1342     0024                     ??_pid_init:	
  1343                           ; 1 bytes @ 0x4
  1344                           
  1345     0024                     ??_pic_init:	
  1346                           ; 1 bytes @ 0x4
  1347                           
  1348     0024                     ??_cleanupBuffer:	
  1349                           ; 1 bytes @ 0x4
  1350                           
  1351     0024                     ??_addToIncomingBuffer:	
  1352                           ; 1 bytes @ 0x4
  1353                           
  1354     0024                     ??_toMsgType:	
  1355                           ; 1 bytes @ 0x4
  1356                           
  1357     0024                     ??_pro_setMyId:	
  1358                           ; 1 bytes @ 0x4
  1359                           
  1360     0024                     ??_led_task:	
  1361                           ; 1 bytes @ 0x4
  1362                           
  1363     0024                     ?___bmul:	
  1364                           ; 1 bytes @ 0x4
  1365                           
  1366     0024                     ?_pid_scaleExcitation:	
  1367                           ; 1 bytes @ 0x4
  1368                           
  1369     0024                     ?_isValidCmd:	
  1370                           ; 2 bytes @ 0x4
  1371                           
  1372     0024                     ?_isValid:	
  1373                           ; 2 bytes @ 0x4
  1374                           
  1375     0024                     ?___ftpack:	
  1376                           ; 2 bytes @ 0x4
  1377                           
  1378     0024                     ?_pos_getCurrentPosition:	
  1379                           ; 3 bytes @ 0x4
  1380                           
  1381     0024                     ?___aldiv:	
  1382                           ; 4 bytes @ 0x4
  1383                           
  1384     0024                     cleanupBuffer@i:	
  1385                           ; 4 bytes @ 0x4
  1386                           
  1387     0024                     addToIncomingBuffer@aChar:	
  1388                           ; 1 bytes @ 0x4
  1389                           
  1390     0024                     toMsgType@aChar:	
  1391                           ; 1 bytes @ 0x4
  1392                           
  1393     0024                     pro_setMyId@id:	
  1394                           ; 1 bytes @ 0x4
  1395                           
  1396     0024                     putch@c:	
  1397                           ; 1 bytes @ 0x4
  1398                           
  1399     0024                     ___bmul@multiplicand:	
  1400                           ; 1 bytes @ 0x4
  1401                           
  1402     0024                     mot_setExcitation@excitation:	
  1403                           ; 1 bytes @ 0x4
  1404                           
  1405     0024                     ___ftpack@arg:	
  1406                           ; 2 bytes @ 0x4
  1407                           
  1408     0024                     pid_scaleExcitation@activation:	
  1409                           ; 3 bytes @ 0x4
  1410                           
  1411     0024                     pid_setPoint@position:	
  1412                           ; 4 bytes @ 0x4
  1413                           
  1414     0024                     pid_setDerivativeGain@gain:	
  1415                           ; 4 bytes @ 0x4
  1416                           
  1417     0024                     pid_setIntegralGain@gain:	
  1418                           ; 4 bytes @ 0x4
  1419                           
  1420     0024                     pid_setProportionalGain@gain:	
  1421                           ; 4 bytes @ 0x4
  1422                           
  1423     0024                     pos_setCurrentPosition@pos:	
  1424                           ; 4 bytes @ 0x4
  1425                           
  1426     0024                     ___aldiv@divisor:	
  1427                           ; 4 bytes @ 0x4
  1428                           
  1429                           
  1430                           ; 4 bytes @ 0x4
  1431     0024                     	ds	1
  1432     0025                     ??_putch:
  1433     0025                     ??_framingError:	
  1434                           ; 1 bytes @ 0x5
  1435                           
  1436     0025                     ??_pro_init:	
  1437                           ; 1 bytes @ 0x5
  1438                           
  1439     0025                     ??___bmul:	
  1440                           ; 1 bytes @ 0x5
  1441                           
  1442     0025                     ___bmul@product:	
  1443                           ; 1 bytes @ 0x5
  1444                           
  1445                           
  1446                           ; 1 bytes @ 0x5
  1447     0025                     	ds	1
  1448     0026                     ??_mot_setExcitation:
  1449     0026                     ??_isValidCmd:	
  1450                           ; 1 bytes @ 0x6
  1451                           
  1452     0026                     ??_isValid:	
  1453                           ; 1 bytes @ 0x6
  1454                           
  1455     0026                     isValidCmd@aChar:	
  1456                           ; 1 bytes @ 0x6
  1457                           
  1458     0026                     isValid@aChar:	
  1459                           ; 1 bytes @ 0x6
  1460                           
  1461     0026                     ___bmul@multiplier:	
  1462                           ; 1 bytes @ 0x6
  1463                           
  1464                           
  1465                           ; 1 bytes @ 0x6
  1466     0026                     	ds	1
  1467     0027                     ?_createTask:
  1468     0027                     ?_pro_getMessage:	
  1469                           ; 1 bytes @ 0x7
  1470                           
  1471     0027                     ___ftpack@exp:	
  1472                           ; 11 bytes @ 0x7
  1473                           
  1474     0027                     createTask@taskID:	
  1475                           ; 1 bytes @ 0x7
  1476                           
  1477                           
  1478                           ; 2 bytes @ 0x7
  1479     0027                     	ds	1
  1480     0028                     ??_pos_getCurrentPosition:
  1481     0028                     ??_pos_setCurrentPosition:	
  1482                           ; 1 bytes @ 0x8
  1483                           
  1484     0028                     ??_pid_scaleExcitation:	
  1485                           ; 1 bytes @ 0x8
  1486                           
  1487     0028                     ??_pid_setPoint:	
  1488                           ; 1 bytes @ 0x8
  1489                           
  1490     0028                     ??_pid_setDerivativeGain:	
  1491                           ; 1 bytes @ 0x8
  1492                           
  1493     0028                     ??_pid_setIntegralGain:	
  1494                           ; 1 bytes @ 0x8
  1495                           
  1496     0028                     ??_pid_setProportionalGain:	
  1497                           ; 1 bytes @ 0x8
  1498                           
  1499     0028                     ___ftpack@sign:	
  1500                           ; 1 bytes @ 0x8
  1501                           
  1502     0028                     mot_setExcitation@value:	
  1503                           ; 1 bytes @ 0x8
  1504                           
  1505     0028                     ___aldiv@dividend:	
  1506                           ; 2 bytes @ 0x8
  1507                           
  1508                           
  1509                           ; 4 bytes @ 0x8
  1510     0028                     	ds	1
  1511     0029                     ??___ftpack:
  1512     0029                     createTask@t:	
  1513                           ; 1 bytes @ 0x9
  1514                           
  1515                           
  1516                           ; 1 bytes @ 0x9
  1517     0029                     	ds	1
  1518     002A                     createTask@scheduleInterval:
  1519                           
  1520                           ; 2 bytes @ 0xA
  1521     002A                     	ds	2
  1522     002C                     ??_initTasks:
  1523     002C                     ??_createTask:	
  1524                           ; 1 bytes @ 0xC
  1525                           
  1526     002C                     ??_sys_init:	
  1527                           ; 1 bytes @ 0xC
  1528                           
  1529     002C                     ??___aldiv:	
  1530                           ; 1 bytes @ 0xC
  1531                           
  1532     002C                     ?___altoft:	
  1533                           ; 1 bytes @ 0xC
  1534                           
  1535     002C                     ___altoft@c:	
  1536                           ; 3 bytes @ 0xC
  1537                           
  1538                           
  1539                           ; 4 bytes @ 0xC
  1540     002C                     	ds	1
  1541     002D                     ___aldiv@counter:
  1542                           
  1543                           ; 1 bytes @ 0xD
  1544     002D                     	ds	1
  1545     002E                     ___aldiv@sign:
  1546                           
  1547                           ; 1 bytes @ 0xE
  1548     002E                     	ds	1
  1549     002F                     ___aldiv@quotient:
  1550                           
  1551                           ; 4 bytes @ 0xF
  1552     002F                     	ds	1
  1553     0030                     ??___altoft:
  1554     0030                     ___altoft@exp:	
  1555                           ; 1 bytes @ 0x10
  1556                           
  1557                           
  1558                           ; 1 bytes @ 0x10
  1559     0030                     	ds	1
  1560     0031                     ___altoft@sign:
  1561                           
  1562                           ; 1 bytes @ 0x11
  1563     0031                     	ds	1
  1564     0032                     ??_pro_getMessage:
  1565     0032                     ?___ftmul:	
  1566                           ; 1 bytes @ 0x12
  1567                           
  1568     0032                     ___ftmul@f1:	
  1569                           ; 3 bytes @ 0x12
  1570                           
  1571                           
  1572                           ; 3 bytes @ 0x12
  1573     0032                     	ds	1
  1574     0033                     ?___lmul:
  1575     0033                     ___lmul@multiplier:	
  1576                           ; 4 bytes @ 0x13
  1577                           
  1578                           
  1579                           ; 4 bytes @ 0x13
  1580     0033                     	ds	2
  1581     0035                     ___ftmul@f2:
  1582                           
  1583                           ; 3 bytes @ 0x15
  1584     0035                     	ds	1
  1585     0036                     pro_getMessage@i:
  1586                           
  1587                           ; 1 bytes @ 0x16
  1588     0036                     	ds	1
  1589     0037                     pro_getMessage@aChar:
  1590     0037                     ___lmul@multiplicand:	
  1591                           ; 1 bytes @ 0x17
  1592                           
  1593                           
  1594                           ; 4 bytes @ 0x17
  1595     0037                     	ds	1
  1596     0038                     ??___ftmul:
  1597                           
  1598                           ; 1 bytes @ 0x18
  1599     0038                     	ds	3
  1600     003B                     ??___lmul:
  1601     003B                     ___ftmul@exp:	
  1602                           ; 1 bytes @ 0x1B
  1603                           
  1604                           
  1605                           ; 1 bytes @ 0x1B
  1606     003B                     	ds	1
  1607     003C                     ___ftmul@f3_as_product:
  1608     003C                     ___lmul@product:	
  1609                           ; 3 bytes @ 0x1C
  1610                           
  1611                           
  1612                           ; 4 bytes @ 0x1C
  1613     003C                     	ds	3
  1614     003F                     ___ftmul@cntr:
  1615                           
  1616                           ; 1 bytes @ 0x1F
  1617     003F                     	ds	1
  1618     0040                     ??_pid_pid:
  1619     0040                     ___ftmul@sign:	
  1620                           ; 1 bytes @ 0x20
  1621                           
  1622                           
  1623                           ; 1 bytes @ 0x20
  1624     0040                     	ds	1
  1625     0041                     ?___ftadd:
  1626     0041                     ___ftadd@f1:	
  1627                           ; 3 bytes @ 0x21
  1628                           
  1629                           
  1630                           ; 3 bytes @ 0x21
  1631     0041                     	ds	3
  1632     0044                     ___ftadd@f2:
  1633                           
  1634                           ; 3 bytes @ 0x24
  1635     0044                     	ds	3
  1636     0047                     ??___ftadd:
  1637                           
  1638                           ; 1 bytes @ 0x27
  1639     0047                     	ds	1
  1640     0048                     _pid_pid$1134:
  1641                           
  1642                           ; 4 bytes @ 0x28
  1643     0048                     	ds	2
  1644     004A                     ___ftadd@sign:
  1645                           
  1646                           ; 1 bytes @ 0x2A
  1647     004A                     	ds	1
  1648     004B                     ___ftadd@exp2:
  1649                           
  1650                           ; 1 bytes @ 0x2B
  1651     004B                     	ds	1
  1652     004C                     ??_pid_task:
  1653     004C                     ___ftadd@exp1:	
  1654                           ; 1 bytes @ 0x2C
  1655                           
  1656                           
  1657                           ; 1 bytes @ 0x2C
  1658     004C                     	ds	1
  1659     004D                     ?___fttol:
  1660     004D                     ___fttol@f1:	
  1661                           ; 4 bytes @ 0x2D
  1662                           
  1663                           
  1664                           ; 3 bytes @ 0x2D
  1665     004D                     	ds	4
  1666     0051                     ??___fttol:
  1667                           
  1668                           ; 1 bytes @ 0x31
  1669     0051                     	ds	3
  1670     0054                     ___fttol@sign1:
  1671                           
  1672                           ; 1 bytes @ 0x34
  1673     0054                     	ds	1
  1674     0055                     ___fttol@lval:
  1675                           
  1676                           ; 4 bytes @ 0x35
  1677     0055                     	ds	4
  1678     0059                     ___fttol@exp1:
  1679                           
  1680                           ; 1 bytes @ 0x39
  1681     0059                     	ds	1
  1682     005A                     ?_convertToReal:
  1683                           
  1684                           ; 4 bytes @ 0x3A
  1685     005A                     	ds	4
  1686     005E                     ??_convertToReal:
  1687                           
  1688                           ; 1 bytes @ 0x3E
  1689     005E                     	ds	5
  1690     0063                     executeTasks@i:
  1691                           
  1692                           ; 1 bytes @ 0x43
  1693     0063                     	ds	1
  1694     0064                     ??_main:
  1695                           
  1696                           	psect	maintext
  1697     0800                     __pmaintext:	
  1698                           ; 1 bytes @ 0x44
  1699 ;;
  1700 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1701 ;;
  1702 ;; *************** function _main *****************
  1703 ;; Defined at:
  1704 ;;		line 119 in file "position_controller_main.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;		None
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;		None
  1709 ;; Return value:  Size  Location     Type
  1710 ;;                  1    wreg      void 
  1711 ;; Registers used:
  1712 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1713 ;; Tracked objects:
  1714 ;;		On entry : B00/0
  1715 ;;		On exit  : 0/0
  1716 ;;		Unchanged: 0/0
  1717 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1718 ;;      Params:         0       0       0       0       0
  1719 ;;      Locals:         0       0       0       0       0
  1720 ;;      Temps:          0       0       0       0       0
  1721 ;;      Totals:         0       0       0       0       0
  1722 ;;Total ram usage:        0 bytes
  1723 ;; Hardware stack levels required when called: 9
  1724 ;; This function calls:
  1725 ;;		_executeTasks
  1726 ;;		_sys_init
  1727 ;; This function is called by:
  1728 ;;		Startup code after reset
  1729 ;; This function uses a non-reentrant model
  1730 ;;
  1731                           
  1732     0800                     _main:	
  1733                           ;psect for function _main
  1734                           
  1735     0800                     l3188:	
  1736                           ;incstack = 0
  1737 ;; hardware stack exceeded
  1738                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1739                           
  1740                           
  1741                           ;position_controller_main.c: 120:    sys_init();
  1742     0800  160A  118A  26D5  120A  158A  	fcall	_sys_init
  1743     0805                     l3190:
  1744                           
  1745                           ;position_controller_main.c: 121:    (INTCONbits.GIE = 1);
  1746     0805  178B               	bsf	11,7	;volatile
  1747     0806                     l171:	
  1748                           ;position_controller_main.c: 122:    while(1) {
  1749                           
  1750                           
  1751                           ;position_controller_main.c: 123:      executeTasks();
  1752     0806  120A  158A  2584  120A  158A  	fcall	_executeTasks
  1753     080B  2806               	goto	l171
  1754     080C  120A  118A  2812   	ljmp	start
  1755     080F                     __end_of_main:
  1756                           
  1757                           	psect	text1
  1758     16D5                     __ptext1:	
  1759 ;; *************** function _sys_init *****************
  1760 ;; Defined at:
  1761 ;;		line 110 in file "position_controller_main.c"
  1762 ;; Parameters:    Size  Location     Type
  1763 ;;		None
  1764 ;; Auto vars:     Size  Location     Type
  1765 ;;		None
  1766 ;; Return value:  Size  Location     Type
  1767 ;;                  1    wreg      void 
  1768 ;; Registers used:
  1769 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1770 ;; Tracked objects:
  1771 ;;		On entry : 0/0
  1772 ;;		On exit  : 0/0
  1773 ;;		Unchanged: 0/0
  1774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1775 ;;      Params:         0       0       0       0       0
  1776 ;;      Locals:         0       0       0       0       0
  1777 ;;      Temps:          0       0       0       0       0
  1778 ;;      Totals:         0       0       0       0       0
  1779 ;;Total ram usage:        0 bytes
  1780 ;; Hardware stack levels used: 1
  1781 ;; Hardware stack levels required when called: 7
  1782 ;; This function calls:
  1783 ;;		_initTasks
  1784 ;;		_pic_init
  1785 ;; This function is called by:
  1786 ;;		_main
  1787 ;; This function uses a non-reentrant model
  1788 ;;
  1789                           
  1790     16D5                     _sys_init:	
  1791                           ;psect for function _sys_init
  1792                           
  1793     16D5                     l3170:	
  1794                           ;incstack = 0
  1795                           ; Regs used in _sys_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1796                           
  1797                           
  1798                           ;position_controller_main.c: 111:    pic_init();
  1799     16D5  120A  158A  20E4  160A  118A  	fcall	_pic_init
  1800     16DA                     l3172:
  1801                           
  1802                           ;position_controller_main.c: 112:    initTasks();
  1803     16DA  120A  158A  220E  160A  118A  	fcall	_initTasks
  1804     16DF                     l166:
  1805     16DF  0008               	return
  1806     16E0                     __end_of_sys_init:
  1807                           
  1808                           	psect	text2
  1809     08E4                     __ptext2:	
  1810 ;; *************** function _pic_init *****************
  1811 ;; Defined at:
  1812 ;;		line 49 in file "position_controller_main.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;		None
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;		None
  1817 ;; Return value:  Size  Location     Type
  1818 ;;                  1    wreg      void 
  1819 ;; Registers used:
  1820 ;;		wreg, status,2, status,0, btemp+1
  1821 ;; Tracked objects:
  1822 ;;		On entry : 0/0
  1823 ;;		On exit  : 0/0
  1824 ;;		Unchanged: 0/0
  1825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1826 ;;      Params:         0       0       0       0       0
  1827 ;;      Locals:         0       0       0       0       0
  1828 ;;      Temps:          0       0       0       0       0
  1829 ;;      Totals:         0       0       0       0       0
  1830 ;;Total ram usage:        0 bytes
  1831 ;; Hardware stack levels used: 1
  1832 ;; Hardware stack levels required when called: 4
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_sys_init
  1837 ;; This function uses a non-reentrant model
  1838 ;;
  1839                           
  1840     08E4                     _pic_init:	
  1841                           ;psect for function _pic_init
  1842                           
  1843     08E4                     l2824:	
  1844                           ;incstack = 0
  1845                           ; Regs used in _pic_init: [wreg+status,2+status,0+btemp+1]
  1846                           
  1847     08E4  30CF               	movlw	207
  1848     08E5  00FF               	movwf	btemp+1
  1849     08E6  087F               	movf	btemp+1,w
  1850     08E7  1683               	bsf	3,5	;RP0=1, select bank1
  1851     08E8  1303               	bcf	3,6	;RP1=0, select bank1
  1852     08E9  0585               	andwf	5,f	;volatile
  1853     08EA  30E1               	movlw	225
  1854     08EB  00FF               	movwf	btemp+1
  1855     08EC  087F               	movf	btemp+1,w
  1856     08ED  1683               	bsf	3,5	;RP0=1, select bank3
  1857     08EE  1703               	bsf	3,6	;RP1=1, select bank3
  1858     08EF  0588               	andwf	8,f	;volatile
  1859     08F0  30CF               	movlw	207
  1860     08F1  00FF               	movwf	btemp+1
  1861     08F2  087F               	movf	btemp+1,w
  1862     08F3  1283               	bcf	3,5	;RP0=0, select bank0
  1863     08F4  1303               	bcf	3,6	;RP1=0, select bank0
  1864     08F5  0585               	andwf	5,f	;volatile
  1865     08F6                     l2826:
  1866     08F6  1685               	bsf	5,5	;volatile
  1867     08F7                     l2828:
  1868     08F7  305F               	movlw	95
  1869     08F8  1683               	bsf	3,5	;RP0=1, select bank1
  1870     08F9  1303               	bcf	3,6	;RP1=0, select bank1
  1871     08FA  0086               	movwf	6	;volatile
  1872     08FB                     l2830:
  1873     08FB  1683               	bsf	3,5	;RP0=1, select bank3
  1874     08FC  1703               	bsf	3,6	;RP1=1, select bank3
  1875     08FD  0189               	clrf	9	;volatile
  1876     08FE                     l2832:
  1877     08FE  3058               	movlw	88
  1878     08FF  1683               	bsf	3,5	;RP0=1, select bank1
  1879     0900  1303               	bcf	3,6	;RP1=0, select bank1
  1880     0901  0096               	movwf	22	;volatile
  1881     0902                     l2834:
  1882     0902  158B               	bsf	11,3	;volatile
  1883     0903                     l2836:
  1884     0903  309E               	movlw	158
  1885     0904  0087               	movwf	7	;volatile
  1886     0905                     l2838:
  1887                           
  1888                           ;position_controller_main.c: 71:   TMR0 = (0xff - 39);
  1889     0905  30D8               	movlw	216
  1890     0906  1283               	bcf	3,5	;RP0=0, select bank0
  1891     0907  1303               	bcf	3,6	;RP1=0, select bank0
  1892     0908  0081               	movwf	1	;volatile
  1893     0909                     l2840:
  1894                           
  1895                           ;position_controller_main.c: 72:   OPTION_REG = 0b01000110;
  1896     0909  3046               	movlw	70
  1897     090A  1683               	bsf	3,5	;RP0=1, select bank1
  1898     090B  1303               	bcf	3,6	;RP1=0, select bank1
  1899     090C  0081               	movwf	1	;volatile
  1900     090D                     l2842:
  1901                           
  1902                           ;position_controller_main.c: 73:   WPUB = 0b01000000;
  1903     090D  3040               	movlw	64
  1904     090E  0095               	movwf	21	;volatile
  1905     090F                     l2844:
  1906                           
  1907                           ;position_controller_main.c: 75:   T0IE = 1;
  1908     090F  168B               	bsf	11,5	;volatile
  1909     0910                     l153:
  1910     0910  0008               	return
  1911     0911                     __end_of_pic_init:
  1912                           
  1913                           	psect	text3
  1914     0A0E                     __ptext3:	
  1915 ;; *************** function _initTasks *****************
  1916 ;; Defined at:
  1917 ;;		line 80 in file "tasks.c"
  1918 ;; Parameters:    Size  Location     Type
  1919 ;;		None
  1920 ;; Auto vars:     Size  Location     Type
  1921 ;;		None
  1922 ;; Return value:  Size  Location     Type
  1923 ;;                  1    wreg      void 
  1924 ;; Registers used:
  1925 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1926 ;; Tracked objects:
  1927 ;;		On entry : 0/0
  1928 ;;		On exit  : 0/0
  1929 ;;		Unchanged: 0/0
  1930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1931 ;;      Params:         0       0       0       0       0
  1932 ;;      Locals:         0       0       0       0       0
  1933 ;;      Temps:          0       0       0       0       0
  1934 ;;      Totals:         0       0       0       0       0
  1935 ;;Total ram usage:        0 bytes
  1936 ;; Hardware stack levels used: 1
  1937 ;; Hardware stack levels required when called: 6
  1938 ;; This function calls:
  1939 ;;		_createTask
  1940 ;;		_mot_init
  1941 ;;		_pid_init
  1942 ;;		_pos_init
  1943 ;;		_pro_init
  1944 ;;		_pro_setMyId
  1945 ;; This function is called by:
  1946 ;;		_sys_init
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950     0A0E                     _initTasks:	
  1951                           ;psect for function _initTasks
  1952                           
  1953     0A0E                     l3128:	
  1954                           ;incstack = 0
  1955                           ; Regs used in _initTasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1956                           
  1957                           
  1958                           ;tasks.c: 82:    pid_init();
  1959     0A0E  120A  158A  2111  120A  158A  	fcall	_pid_init
  1960     0A13                     l3130:
  1961                           
  1962                           ;tasks.c: 83:    mot_init();
  1963     0A13  120A  158A  206C  120A  158A  	fcall	_mot_init
  1964     0A18                     l3132:
  1965                           
  1966                           ;tasks.c: 84:    pos_init();
  1967     0A18  160A  118A  26CA  120A  158A  	fcall	_pos_init
  1968     0A1D                     l3134:
  1969                           
  1970                           ;tasks.c: 85:    pro_init();
  1971     0A1D  160A  118A  26EE  120A  158A  	fcall	_pro_init
  1972     0A22                     l3136:
  1973                           
  1974                           ;tasks.c: 86:    pro_setMyId('a');
  1975     0A22  3061               	movlw	97
  1976     0A23  160A  118A  26A1  120A  158A  	fcall	_pro_setMyId
  1977     0A28                     l3138:
  1978                           
  1979                           ;tasks.c: 89:    createTask(0, &pid_task, 6);
  1980     0A28  3000               	movlw	0
  1981     0A29  1283               	bcf	3,5	;RP0=0, select bank0
  1982     0A2A  1303               	bcf	3,6	;RP1=0, select bank0
  1983     0A2B  00A7               	movwf	createTask@taskID
  1984     0A2C  00A8               	movwf	createTask@taskID+1
  1985     0A2D  3007               	movlw	(low (fp__pid_task-fpbase))& (0+255)
  1986     0A2E  00A9               	movwf	createTask@t
  1987     0A2F  3006               	movlw	6
  1988     0A30  00AA               	movwf	createTask@scheduleInterval
  1989     0A31  3000               	movlw	0
  1990     0A32  00AB               	movwf	createTask@scheduleInterval+1
  1991     0A33  120A  158A  214A  120A  158A  	fcall	_createTask
  1992     0A38                     l3140:
  1993                           
  1994                           ;tasks.c: 90:    createTask(1, &protocol_task, 1);
  1995     0A38  3001               	movlw	1
  1996     0A39  1283               	bcf	3,5	;RP0=0, select bank0
  1997     0A3A  1303               	bcf	3,6	;RP1=0, select bank0
  1998     0A3B  00A7               	movwf	createTask@taskID
  1999     0A3C  3000               	movlw	0
  2000     0A3D  00A8               	movwf	createTask@taskID+1
  2001     0A3E  3004               	movlw	(low (fp__protocol_task-fpbase))& (0+255)
  2002     0A3F  00A9               	movwf	createTask@t
  2003     0A40  3001               	movlw	1
  2004     0A41  00AA               	movwf	createTask@scheduleInterval
  2005     0A42  3000               	movlw	0
  2006     0A43  00AB               	movwf	createTask@scheduleInterval+1
  2007     0A44  120A  158A  214A  120A  158A  	fcall	_createTask
  2008     0A49                     l3142:
  2009                           
  2010                           ;tasks.c: 91:    createTask(2, &led_task, 2000);
  2011     0A49  3002               	movlw	2
  2012     0A4A  1283               	bcf	3,5	;RP0=0, select bank0
  2013     0A4B  1303               	bcf	3,6	;RP1=0, select bank0
  2014     0A4C  00A7               	movwf	createTask@taskID
  2015     0A4D  3000               	movlw	0
  2016     0A4E  00A8               	movwf	createTask@taskID+1
  2017     0A4F  300A               	movlw	(low (fp__led_task-fpbase))& (0+255)
  2018     0A50  00A9               	movwf	createTask@t
  2019     0A51  30D0               	movlw	208
  2020     0A52  00AA               	movwf	createTask@scheduleInterval
  2021     0A53  3007               	movlw	7
  2022     0A54  00AB               	movwf	createTask@scheduleInterval+1
  2023     0A55  120A  158A  214A  120A  158A  	fcall	_createTask
  2024     0A5A                     l419:
  2025     0A5A  0008               	return
  2026     0A5B                     __end_of_initTasks:
  2027                           
  2028                           	psect	text4
  2029     16A1                     __ptext4:	
  2030 ;; *************** function _pro_setMyId *****************
  2031 ;; Defined at:
  2032 ;;		line 183 in file "protocol.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  id              1    wreg     unsigned char 
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  id              1    4[BANK0 ] unsigned char 
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2046 ;;      Params:         0       0       0       0       0
  2047 ;;      Locals:         0       1       0       0       0
  2048 ;;      Temps:          0       0       0       0       0
  2049 ;;      Totals:         0       1       0       0       0
  2050 ;;Total ram usage:        1 bytes
  2051 ;; Hardware stack levels used: 1
  2052 ;; Hardware stack levels required when called: 4
  2053 ;; This function calls:
  2054 ;;		Nothing
  2055 ;; This function is called by:
  2056 ;;		_initTasks
  2057 ;; This function uses a non-reentrant model
  2058 ;;
  2059                           
  2060     16A1                     _pro_setMyId:	
  2061                           ;psect for function _pro_setMyId
  2062                           
  2063                           
  2064                           ;incstack = 0
  2065                           ; Regs used in _pro_setMyId: [wreg]
  2066                           ;pro_setMyId@id stored from wreg
  2067     16A1  1283               	bcf	3,5	;RP0=0, select bank0
  2068     16A2  1303               	bcf	3,6	;RP1=0, select bank0
  2069     16A3  00A4               	movwf	pro_setMyId@id
  2070     16A4                     l2740:
  2071                           
  2072                           ;protocol.c: 184:   pro_myAddress = id;
  2073     16A4  0824               	movf	pro_setMyId@id,w
  2074     16A5  00EA               	movwf	_pro_myAddress
  2075     16A6                     l255:
  2076     16A6  0008               	return
  2077     16A7                     __end_of_pro_setMyId:
  2078                           
  2079                           	psect	text5
  2080     16EE                     __ptext5:	
  2081 ;; *************** function _pro_init *****************
  2082 ;; Defined at:
  2083 ;;		line 173 in file "protocol.c"
  2084 ;; Parameters:    Size  Location     Type
  2085 ;;		None
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;		None
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2097 ;;      Params:         0       0       0       0       0
  2098 ;;      Locals:         0       0       0       0       0
  2099 ;;      Temps:          0       0       0       0       0
  2100 ;;      Totals:         0       0       0       0       0
  2101 ;;Total ram usage:        0 bytes
  2102 ;; Hardware stack levels used: 1
  2103 ;; Hardware stack levels required when called: 5
  2104 ;; This function calls:
  2105 ;;		_cleanupBuffer
  2106 ;;		_ser_init
  2107 ;; This function is called by:
  2108 ;;		_initTasks
  2109 ;; This function uses a non-reentrant model
  2110 ;;
  2111                           
  2112     16EE                     _pro_init:	
  2113                           ;psect for function _pro_init
  2114                           
  2115     16EE                     l2734:	
  2116                           ;incstack = 0
  2117                           ; Regs used in _pro_init: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2118                           
  2119                           
  2120                           ;protocol.c: 174:    pro_status = 0;
  2121     16EE  1283               	bcf	3,5	;RP0=0, select bank0
  2122     16EF  1303               	bcf	3,6	;RP1=0, select bank0
  2123     16F0  01E9               	clrf	_pro_status
  2124                           
  2125                           ;protocol.c: 175:    completeMessage.messageType = 0;
  2126     16F1  1683               	bsf	3,5	;RP0=1, select bank3
  2127     16F2  1703               	bsf	3,6	;RP1=1, select bank3
  2128     16F3  01B1               	clrf	_completeMessage^(0+384)
  2129     16F4                     l2736:
  2130                           
  2131                           ;protocol.c: 176:    cleanupBuffer();
  2132     16F4  120A  158A  200F  160A  118A  	fcall	_cleanupBuffer
  2133     16F9                     l2738:
  2134                           
  2135                           ;protocol.c: 177:    ser_init();
  2136     16F9  120A  158A  202D  160A  118A  	fcall	_ser_init
  2137     16FE                     l252:
  2138     16FE  0008               	return
  2139     16FF                     __end_of_pro_init:
  2140                           
  2141                           	psect	text6
  2142     082D                     __ptext6:	
  2143 ;; *************** function _ser_init *****************
  2144 ;; Defined at:
  2145 ;;		line 29 in file "serial.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;		None
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;		None
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         0       0       0       0       0
  2163 ;;Total ram usage:        0 bytes
  2164 ;; Hardware stack levels used: 1
  2165 ;; Hardware stack levels required when called: 4
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_pro_init
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173     082D                     _ser_init:	
  2174                           ;psect for function _ser_init
  2175                           
  2176     082D                     l2324:	
  2177                           ;incstack = 0
  2178                           ; Regs used in _ser_init: [wreg+status,2]
  2179                           
  2180                           
  2181                           ;serial.c: 68:  SPBRG=((20000000/(4UL * 115200) -1));
  2182     082D  302A               	movlw	42
  2183     082E  1683               	bsf	3,5	;RP0=1, select bank1
  2184     082F  1303               	bcf	3,6	;RP1=0, select bank1
  2185     0830  0099               	movwf	25	;volatile
  2186     0831                     l2326:
  2187                           
  2188                           ;serial.c: 69:  BRGH=1;
  2189     0831  1518               	bsf	24,2	;volatile
  2190     0832                     l2328:
  2191                           
  2192                           ;serial.c: 70:   BRG16 = 1;
  2193     0832  1683               	bsf	3,5	;RP0=1, select bank3
  2194     0833  1703               	bsf	3,6	;RP1=1, select bank3
  2195     0834  1587               	bsf	7,3	;volatile
  2196     0835                     l2330:
  2197                           
  2198                           ;serial.c: 71:   SPBRGH = 0;
  2199     0835  1683               	bsf	3,5	;RP0=1, select bank1
  2200     0836  1303               	bcf	3,6	;RP1=0, select bank1
  2201     0837  019A               	clrf	26	;volatile
  2202     0838                     l2332:
  2203                           
  2204                           ;serial.c: 72:  SYNC=0;
  2205     0838  1218               	bcf	24,4	;volatile
  2206     0839                     l2334:
  2207                           
  2208                           ;serial.c: 73:  SPEN=1;
  2209     0839  1283               	bcf	3,5	;RP0=0, select bank0
  2210     083A  1303               	bcf	3,6	;RP1=0, select bank0
  2211     083B  1798               	bsf	24,7	;volatile
  2212     083C                     l2336:
  2213                           
  2214                           ;serial.c: 74:  CREN=1;
  2215     083C  1618               	bsf	24,4	;volatile
  2216     083D                     l2338:
  2217                           
  2218                           ;serial.c: 75:  SREN=0;
  2219     083D  1298               	bcf	24,5	;volatile
  2220     083E                     l2340:
  2221                           
  2222                           ;serial.c: 76:  TXIE=0;
  2223     083E  1683               	bsf	3,5	;RP0=1, select bank1
  2224     083F  1303               	bcf	3,6	;RP1=0, select bank1
  2225     0840  120C               	bcf	12,4	;volatile
  2226     0841                     l2342:
  2227                           
  2228                           ;serial.c: 77:  RCIE=0;
  2229     0841  128C               	bcf	12,5	;volatile
  2230     0842                     l2344:
  2231                           
  2232                           ;serial.c: 78:  TX9=0;
  2233     0842  1318               	bcf	24,6	;volatile
  2234     0843                     l2346:
  2235                           
  2236                           ;serial.c: 79:  RX9=0;
  2237     0843  1283               	bcf	3,5	;RP0=0, select bank0
  2238     0844  1303               	bcf	3,6	;RP1=0, select bank0
  2239     0845  1318               	bcf	24,6	;volatile
  2240     0846                     l2348:
  2241                           
  2242                           ;serial.c: 80:  TXEN=0;
  2243     0846  1683               	bsf	3,5	;RP0=1, select bank1
  2244     0847  1303               	bcf	3,6	;RP1=0, select bank1
  2245     0848  1298               	bcf	24,5	;volatile
  2246     0849                     l2350:
  2247                           
  2248                           ;serial.c: 81:  TXEN=1;
  2249     0849  1698               	bsf	24,5	;volatile
  2250     084A                     l296:
  2251     084A  0008               	return
  2252     084B                     __end_of_ser_init:
  2253                           
  2254                           	psect	text7
  2255     16CA                     __ptext7:	
  2256 ;; *************** function _pos_init *****************
  2257 ;; Defined at:
  2258 ;;		line 11 in file "/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c"
  2259 ;; Parameters:    Size  Location     Type
  2260 ;;		None
  2261 ;; Auto vars:     Size  Location     Type
  2262 ;;		None
  2263 ;; Return value:  Size  Location     Type
  2264 ;;                  1    wreg      void 
  2265 ;; Registers used:
  2266 ;;		wreg
  2267 ;; Tracked objects:
  2268 ;;		On entry : 0/0
  2269 ;;		On exit  : 0/0
  2270 ;;		Unchanged: 0/0
  2271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2272 ;;      Params:         0       0       0       0       0
  2273 ;;      Locals:         0       0       0       0       0
  2274 ;;      Temps:          0       0       0       0       0
  2275 ;;      Totals:         0       0       0       0       0
  2276 ;;Total ram usage:        0 bytes
  2277 ;; Hardware stack levels used: 1
  2278 ;; Hardware stack levels required when called: 4
  2279 ;; This function calls:
  2280 ;;		Nothing
  2281 ;; This function is called by:
  2282 ;;		_initTasks
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286     16CA                     _pos_init:	
  2287                           ;psect for function _pos_init
  2288                           
  2289     16CA                     l2820:	
  2290                           ;incstack = 0
  2291                           ; Regs used in _pos_init: [wreg]
  2292                           
  2293                           
  2294                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 29:   pos_cu
      +                          rrentPosition = 0;
  2295     16CA  3000               	movlw	0
  2296     16CB  1683               	bsf	3,5	;RP0=1, select bank1
  2297     16CC  1303               	bcf	3,6	;RP1=0, select bank1
  2298     16CD  00A3               	movwf	(_pos_currentPosition+3)^(0+128)	;volatile
  2299     16CE  3000               	movlw	0
  2300     16CF  00A2               	movwf	(_pos_currentPosition+2)^(0+128)	;volatile
  2301     16D0  3000               	movlw	0
  2302     16D1  00A1               	movwf	(_pos_currentPosition+1)^(0+128)	;volatile
  2303     16D2  3000               	movlw	0
  2304     16D3  00A0               	movwf	_pos_currentPosition^(0+128)	;volatile
  2305     16D4                     l546:
  2306     16D4  0008               	return
  2307     16D5                     __end_of_pos_init:
  2308                           
  2309                           	psect	text8
  2310     0911                     __ptext8:	
  2311 ;; *************** function _pid_init *****************
  2312 ;; Defined at:
  2313 ;;		line 104 in file "pid.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;                  1    wreg      void 
  2320 ;; Registers used:
  2321 ;;		wreg
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       0       0       0       0
  2330 ;;      Totals:         0       0       0       0       0
  2331 ;;Total ram usage:        0 bytes
  2332 ;; Hardware stack levels used: 1
  2333 ;; Hardware stack levels required when called: 4
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_initTasks
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341     0911                     _pid_init:	
  2342                           ;psect for function _pid_init
  2343                           
  2344     0911                     l2660:	
  2345                           ;incstack = 0
  2346                           ; Regs used in _pid_init: [wreg]
  2347                           
  2348                           
  2349                           ;pid.c: 105:    integralError = 0.0f;
  2350     0911  3000               	movlw	0
  2351     0912  1683               	bsf	3,5	;RP0=1, select bank1
  2352     0913  1303               	bcf	3,6	;RP1=0, select bank1
  2353     0914  00C3               	movwf	(_integralError+3)^(0+128)
  2354     0915  3000               	movlw	0
  2355     0916  00C2               	movwf	(_integralError+2)^(0+128)
  2356     0917  3000               	movlw	0
  2357     0918  00C1               	movwf	(_integralError+1)^(0+128)
  2358     0919  3000               	movlw	0
  2359     091A  00C0               	movwf	_integralError^(0+128)
  2360                           
  2361                           ;pid.c: 106:    previousError = 0.0f;
  2362     091B  3000               	movlw	0
  2363     091C  00BF               	movwf	(_previousError+3)^(0+128)
  2364     091D  3000               	movlw	0
  2365     091E  00BE               	movwf	(_previousError+2)^(0+128)
  2366     091F  3000               	movlw	0
  2367     0920  00BD               	movwf	(_previousError+1)^(0+128)
  2368     0921  3000               	movlw	0
  2369     0922  00BC               	movwf	_previousError^(0+128)
  2370                           
  2371                           ;pid.c: 107:    currentPosition = 0.0f;
  2372     0923  3000               	movlw	0
  2373     0924  00CF               	movwf	(_currentPosition+3)^(0+128)
  2374     0925  3000               	movlw	0
  2375     0926  00CE               	movwf	(_currentPosition+2)^(0+128)
  2376     0927  3000               	movlw	0
  2377     0928  00CD               	movwf	(_currentPosition+1)^(0+128)
  2378     0929  3000               	movlw	0
  2379     092A  00CC               	movwf	_currentPosition^(0+128)
  2380                           
  2381                           ;pid.c: 108:    kProportional = 20.0f;
  2382     092B  3000               	movlw	0
  2383     092C  1683               	bsf	3,5	;RP0=1, select bank3
  2384     092D  1703               	bsf	3,6	;RP1=1, select bank3
  2385     092E  00D2               	movwf	(_kProportional+3)^(0+384)
  2386     092F  3000               	movlw	0
  2387     0930  00D1               	movwf	(_kProportional+2)^(0+384)
  2388     0931  3000               	movlw	0
  2389     0932  00D0               	movwf	(_kProportional+1)^(0+384)
  2390     0933  3014               	movlw	20
  2391     0934  00CF               	movwf	_kProportional^(0+384)
  2392                           
  2393                           ;pid.c: 109:    kDerivative = 0.0f;
  2394     0935  3000               	movlw	0
  2395     0936  1683               	bsf	3,5	;RP0=1, select bank1
  2396     0937  1303               	bcf	3,6	;RP1=0, select bank1
  2397     0938  00BB               	movwf	(_kDerivative+3)^(0+128)
  2398     0939  3000               	movlw	0
  2399     093A  00BA               	movwf	(_kDerivative+2)^(0+128)
  2400     093B  3000               	movlw	0
  2401     093C  00B9               	movwf	(_kDerivative+1)^(0+128)
  2402     093D  3000               	movlw	0
  2403     093E  00B8               	movwf	_kDerivative^(0+128)
  2404                           
  2405                           ;pid.c: 110:    kIntegral = 5.0f;
  2406     093F  3000               	movlw	0
  2407     0940  1683               	bsf	3,5	;RP0=1, select bank3
  2408     0941  1703               	bsf	3,6	;RP1=1, select bank3
  2409     0942  00CE               	movwf	(_kIntegral+3)^(0+384)
  2410     0943  3000               	movlw	0
  2411     0944  00CD               	movwf	(_kIntegral+2)^(0+384)
  2412     0945  3000               	movlw	0
  2413     0946  00CC               	movwf	(_kIntegral+1)^(0+384)
  2414     0947  3005               	movlw	5
  2415     0948  00CB               	movwf	_kIntegral^(0+384)
  2416     0949                     l108:
  2417     0949  0008               	return
  2418     094A                     __end_of_pid_init:
  2419                           
  2420                           	psect	text9
  2421     086C                     __ptext9:	
  2422 ;; *************** function _mot_init *****************
  2423 ;; Defined at:
  2424 ;;		line 49 in file "motor.c"
  2425 ;; Parameters:    Size  Location     Type
  2426 ;;		None
  2427 ;; Auto vars:     Size  Location     Type
  2428 ;;		None
  2429 ;; Return value:  Size  Location     Type
  2430 ;;                  1    wreg      void 
  2431 ;; Registers used:
  2432 ;;		wreg, status,2, status,0, btemp+1
  2433 ;; Tracked objects:
  2434 ;;		On entry : 0/0
  2435 ;;		On exit  : 0/0
  2436 ;;		Unchanged: 0/0
  2437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2438 ;;      Params:         0       0       0       0       0
  2439 ;;      Locals:         0       0       0       0       0
  2440 ;;      Temps:          0       0       0       0       0
  2441 ;;      Totals:         0       0       0       0       0
  2442 ;;Total ram usage:        0 bytes
  2443 ;; Hardware stack levels used: 1
  2444 ;; Hardware stack levels required when called: 4
  2445 ;; This function calls:
  2446 ;;		Nothing
  2447 ;; This function is called by:
  2448 ;;		_initTasks
  2449 ;; This function uses a non-reentrant model
  2450 ;;
  2451                           
  2452     086C                     _mot_init:	
  2453                           ;psect for function _mot_init
  2454                           
  2455     086C                     l2794:	
  2456                           ;incstack = 0
  2457                           ; Regs used in _mot_init: [wreg+status,2+status,0+btemp+1]
  2458                           
  2459                           
  2460                           ;motor.c: 50:   TRISC |= 0b00000110;
  2461     086C  3006               	movlw	6
  2462     086D  00FF               	movwf	btemp+1
  2463     086E  087F               	movf	btemp+1,w
  2464     086F  1683               	bsf	3,5	;RP0=1, select bank1
  2465     0870  1303               	bcf	3,6	;RP1=0, select bank1
  2466     0871  0487               	iorwf	7,f	;volatile
  2467     0872                     l2796:
  2468                           
  2469                           ;motor.c: 51:   PR2 = 255;
  2470     0872  30FF               	movlw	255
  2471     0873  0092               	movwf	18	;volatile
  2472     0874                     l2798:
  2473                           
  2474                           ;motor.c: 52:   CCP1CON = 0b00001100;
  2475     0874  300C               	movlw	12
  2476     0875  1283               	bcf	3,5	;RP0=0, select bank0
  2477     0876  1303               	bcf	3,6	;RP1=0, select bank0
  2478     0877  0097               	movwf	23	;volatile
  2479     0878                     l2800:
  2480                           
  2481                           ;motor.c: 53:   CCP2CON = 0b00001100;
  2482     0878  300C               	movlw	12
  2483     0879  009D               	movwf	29	;volatile
  2484     087A                     l2802:
  2485                           
  2486                           ;motor.c: 54:   CCPR1L = 0;
  2487     087A  0195               	clrf	21	;volatile
  2488     087B                     l2804:
  2489                           
  2490                           ;motor.c: 55:   DC1B0 = 0;
  2491     087B  1217               	bcf	23,4	;volatile
  2492     087C                     l2806:
  2493                           
  2494                           ;motor.c: 56:   DC1B1 = 0;
  2495     087C  1297               	bcf	23,5	;volatile
  2496     087D                     l2808:
  2497                           
  2498                           ;motor.c: 57:   CCPR2L = 0;
  2499     087D  019B               	clrf	27	;volatile
  2500     087E                     l2810:
  2501                           
  2502                           ;motor.c: 58:   DC2B0 = 0;
  2503     087E  121D               	bcf	29,4	;volatile
  2504     087F                     l2812:
  2505                           
  2506                           ;motor.c: 59:   DC2B1 = 0;
  2507     087F  129D               	bcf	29,5	;volatile
  2508     0880                     l2814:
  2509                           
  2510                           ;motor.c: 60:   TMR2IF = 0;
  2511     0880  108C               	bcf	12,1	;volatile
  2512     0881                     l2816:
  2513                           
  2514                           ;motor.c: 61:   T2CON = 4;
  2515     0881  3004               	movlw	4
  2516     0882  0092               	movwf	18	;volatile
  2517     0883                     l611:	
  2518                           ;motor.c: 62:   while(!TMR2IF);
  2519                           
  2520     0883  1C8C               	btfss	12,1	;volatile
  2521     0884  2886               	goto	u3211
  2522     0885  2887               	goto	u3210
  2523     0886                     u3211:
  2524     0886  2883               	goto	l611
  2525     0887                     u3210:
  2526     0887                     l2818:
  2527                           
  2528                           ;motor.c: 63:   TRISC &= 0b11111001;
  2529     0887  30F9               	movlw	249
  2530     0888  00FF               	movwf	btemp+1
  2531     0889  087F               	movf	btemp+1,w
  2532     088A  1683               	bsf	3,5	;RP0=1, select bank1
  2533     088B  1303               	bcf	3,6	;RP1=0, select bank1
  2534     088C  0587               	andwf	7,f	;volatile
  2535     088D                     l614:
  2536     088D  0008               	return
  2537     088E                     __end_of_mot_init:
  2538                           
  2539                           	psect	text10
  2540     094A                     __ptext10:	
  2541 ;; *************** function _createTask *****************
  2542 ;; Defined at:
  2543 ;;		line 19 in file "multitasking.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;  taskID          2    7[BANK0 ] int 
  2546 ;;  t               1    9[BANK0 ] PTR FTN()void 
  2547 ;;		 -> led_task(1), protocol_task(1), pid_task(1), 
  2548 ;;  scheduleInte    2   10[BANK0 ] int 
  2549 ;; Auto vars:     Size  Location     Type
  2550 ;;		None
  2551 ;; Return value:  Size  Location     Type
  2552 ;;                  1    wreg      void 
  2553 ;; Registers used:
  2554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2555 ;; Tracked objects:
  2556 ;;		On entry : 0/0
  2557 ;;		On exit  : 0/0
  2558 ;;		Unchanged: 0/0
  2559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2560 ;;      Params:         0       5       0       0       0
  2561 ;;      Locals:         0       0       0       0       0
  2562 ;;      Temps:          0       0       0       0       0
  2563 ;;      Totals:         0       5       0       0       0
  2564 ;;Total ram usage:        5 bytes
  2565 ;; Hardware stack levels used: 1
  2566 ;; Hardware stack levels required when called: 5
  2567 ;; This function calls:
  2568 ;;		___bmul
  2569 ;; This function is called by:
  2570 ;;		_initTasks
  2571 ;; This function uses a non-reentrant model
  2572 ;;
  2573                           
  2574     094A                     _createTask:	
  2575                           ;psect for function _createTask
  2576                           
  2577     094A                     l2822:	
  2578                           ;incstack = 0
  2579                           ; Regs used in _createTask: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2580                           
  2581                           
  2582                           ;multitasking.c: 20:     tsk_tasks[taskID].taskFunction = t;
  2583     094A  3007               	movlw	7
  2584     094B  1283               	bcf	3,5	;RP0=0, select bank0
  2585     094C  1303               	bcf	3,6	;RP1=0, select bank0
  2586     094D  00A4               	movwf	___bmul@multiplicand
  2587     094E  0827               	movf	createTask@taskID,w
  2588     094F  160A  118A  273A  120A  158A  	fcall	___bmul
  2589     0954  3E90               	addlw	(low (_tsk_tasks| (0+256)))& (0+255)
  2590     0955  0084               	movwf	4
  2591     0956  1283               	bcf	3,5	;RP0=0, select bank0
  2592     0957  1303               	bcf	3,6	;RP1=0, select bank0
  2593     0958  0829               	movf	createTask@t,w
  2594     0959  1783               	bsf	3,7	;select IRP bank3
  2595     095A  0080               	movwf	0
  2596                           
  2597                           ;multitasking.c: 21:     tsk_tasks[taskID].scheduleInterval = scheduleInterval;
  2598     095B  3007               	movlw	7
  2599     095C  00A4               	movwf	___bmul@multiplicand
  2600     095D  0827               	movf	createTask@taskID,w
  2601     095E  160A  118A  273A  120A  158A  	fcall	___bmul
  2602     0963  3E91               	addlw	(low ((_tsk_tasks| (0+256)+1)))& (0+255)
  2603     0964  0084               	movwf	4
  2604     0965  1283               	bcf	3,5	;RP0=0, select bank0
  2605     0966  1303               	bcf	3,6	;RP1=0, select bank0
  2606     0967  082A               	movf	createTask@scheduleInterval,w
  2607     0968  1783               	bsf	3,7	;select IRP bank3
  2608     0969  0080               	movwf	0
  2609     096A  0A84               	incf	4,f
  2610     096B  082B               	movf	createTask@scheduleInterval+1,w
  2611     096C  0080               	movwf	0
  2612                           
  2613                           ;multitasking.c: 22:     tsk_tasks[taskID].lastActivation = 0;
  2614     096D  3007               	movlw	7
  2615     096E  00A4               	movwf	___bmul@multiplicand
  2616     096F  0827               	movf	createTask@taskID,w
  2617     0970  160A  118A  273A  120A  158A  	fcall	___bmul
  2618     0975  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2619     0976  0084               	movwf	4
  2620     0977  3000               	movlw	0
  2621     0978  1783               	bsf	3,7	;select IRP bank3
  2622     0979  0080               	movwf	0
  2623     097A  0A84               	incf	4,f
  2624     097B  3000               	movlw	0
  2625     097C  0080               	movwf	0
  2626     097D  0A84               	incf	4,f
  2627     097E  3000               	movlw	0
  2628     097F  0080               	movwf	0
  2629     0980  0A84               	incf	4,f
  2630     0981  3000               	movlw	0
  2631     0982  0080               	movwf	0
  2632     0983                     l451:
  2633     0983  0008               	return
  2634     0984                     __end_of_createTask:
  2635                           
  2636                           	psect	text11
  2637     0D84                     __ptext11:	
  2638 ;; *************** function _executeTasks *****************
  2639 ;; Defined at:
  2640 ;;		line 25 in file "multitasking.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;  i               1   67[BANK0 ] unsigned char 
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2654 ;;      Params:         0       0       0       0       0
  2655 ;;      Locals:         0       1       0       0       0
  2656 ;;      Temps:          0       0       0       8       0
  2657 ;;      Totals:         0       1       0       8       0
  2658 ;;Total ram usage:        9 bytes
  2659 ;; Hardware stack levels used: 1
  2660 ;; Hardware stack levels required when called: 8
  2661 ;; This function calls:
  2662 ;;		NULL
  2663 ;;		___bmul
  2664 ;;		_led_task
  2665 ;;		_pid_task
  2666 ;;		_protocol_task
  2667 ;; This function is called by:
  2668 ;;		_main
  2669 ;; This function uses a non-reentrant model
  2670 ;;
  2671                           
  2672     0D84                     _executeTasks:	
  2673                           ;psect for function _executeTasks
  2674                           
  2675     0D84                     l3174:	
  2676                           ;incstack = 0
  2677 ;; hardware stack exceeded
  2678                           ; Regs used in _executeTasks: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2679                           
  2680                           
  2681                           ;multitasking.c: 26:     unsigned char i;;multitasking.c: 28:     for (i=0; i < 3; i++) 
      +                          {
  2682     0D84  1283               	bcf	3,5	;RP0=0, select bank0
  2683     0D85  1303               	bcf	3,6	;RP1=0, select bank0
  2684     0D86  01E3               	clrf	executeTasks@i
  2685     0D87                     l3180:
  2686                           
  2687                           ;multitasking.c: 29:        tsk_elapsedTime = tsk_timeStamp - tsk_tasks[i].lastActivatio
      +                          n;
  2688     0D87  3007               	movlw	7
  2689     0D88  00A4               	movwf	___bmul@multiplicand
  2690     0D89  0863               	movf	executeTasks@i,w
  2691     0D8A  160A  118A  273A  120A  158A  	fcall	___bmul
  2692     0D8F  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2693     0D90  0084               	movwf	4
  2694     0D91  1783               	bsf	3,7	;select IRP bank3
  2695     0D92  0800               	movf	0,w
  2696     0D93  1683               	bsf	3,5	;RP0=1, select bank3
  2697     0D94  1703               	bsf	3,6	;RP1=1, select bank3
  2698     0D95  00DB               	movwf	??_executeTasks^(0+384)
  2699     0D96  0A84               	incf	4,f
  2700     0D97  0800               	movf	0,w
  2701     0D98  00DC               	movwf	(??_executeTasks^(0+384)+1)
  2702     0D99  0A84               	incf	4,f
  2703     0D9A  0800               	movf	0,w
  2704     0D9B  00DD               	movwf	(??_executeTasks^(0+384)+2)
  2705     0D9C  0A84               	incf	4,f
  2706     0D9D  0800               	movf	0,w
  2707     0D9E  00DE               	movwf	(??_executeTasks^(0+384)+3)
  2708     0D9F  1683               	bsf	3,5	;RP0=1, select bank1
  2709     0DA0  1303               	bcf	3,6	;RP1=0, select bank1
  2710     0DA1  0828               	movf	_tsk_timeStamp^(0+128),w	;volatile
  2711     0DA2  1683               	bsf	3,5	;RP0=1, select bank3
  2712     0DA3  1703               	bsf	3,6	;RP1=1, select bank3
  2713     0DA4  00DF               	movwf	(??_executeTasks+4)^(0+384)
  2714     0DA5  1683               	bsf	3,5	;RP0=1, select bank1
  2715     0DA6  1303               	bcf	3,6	;RP1=0, select bank1
  2716     0DA7  0829               	movf	(_tsk_timeStamp+1)^(0+128),w	;volatile
  2717     0DA8  1683               	bsf	3,5	;RP0=1, select bank3
  2718     0DA9  1703               	bsf	3,6	;RP1=1, select bank3
  2719     0DAA  00E0               	movwf	((??_executeTasks+4)^(0+384)+1)
  2720     0DAB  1683               	bsf	3,5	;RP0=1, select bank1
  2721     0DAC  1303               	bcf	3,6	;RP1=0, select bank1
  2722     0DAD  082A               	movf	(_tsk_timeStamp+2)^(0+128),w	;volatile
  2723     0DAE  1683               	bsf	3,5	;RP0=1, select bank3
  2724     0DAF  1703               	bsf	3,6	;RP1=1, select bank3
  2725     0DB0  00E1               	movwf	((??_executeTasks+4)^(0+384)+2)
  2726     0DB1  1683               	bsf	3,5	;RP0=1, select bank1
  2727     0DB2  1303               	bcf	3,6	;RP1=0, select bank1
  2728     0DB3  082B               	movf	(_tsk_timeStamp+3)^(0+128),w	;volatile
  2729     0DB4  1683               	bsf	3,5	;RP0=1, select bank3
  2730     0DB5  1703               	bsf	3,6	;RP1=1, select bank3
  2731     0DB6  00E2               	movwf	((??_executeTasks+4)^(0+384)+3)
  2732     0DB7  085B               	movf	??_executeTasks^(0+384),w
  2733     0DB8  02DF               	subwf	(??_executeTasks+4)^(0+384),f
  2734     0DB9  085C               	movf	(??_executeTasks+1)^(0+384),w
  2735     0DBA  1C03               	skipc
  2736     0DBB  0F5C               	incfsz	(??_executeTasks+1)^(0+384),w
  2737     0DBC  2DBE               	goto	u3611
  2738     0DBD  2DBF               	goto	u3612
  2739     0DBE                     u3611:
  2740     0DBE  02E0               	subwf	((??_executeTasks+4)^(0+384)+1),f
  2741     0DBF                     u3612:
  2742     0DBF  085D               	movf	(??_executeTasks+2)^(0+384),w
  2743     0DC0  1C03               	skipc
  2744     0DC1  0F5D               	incfsz	(??_executeTasks+2)^(0+384),w
  2745     0DC2  2DC4               	goto	u3613
  2746     0DC3  2DC5               	goto	u3614
  2747     0DC4                     u3613:
  2748     0DC4  02E1               	subwf	((??_executeTasks+4)^(0+384)+2),f
  2749     0DC5                     u3614:
  2750     0DC5  085E               	movf	(??_executeTasks+3)^(0+384),w
  2751     0DC6  1C03               	skipc
  2752     0DC7  0F5E               	incfsz	(??_executeTasks+3)^(0+384),w
  2753     0DC8  2DCA               	goto	u3615
  2754     0DC9  2DCB               	goto	u3616
  2755     0DCA                     u3615:
  2756     0DCA  02E2               	subwf	((??_executeTasks+4)^(0+384)+3),f
  2757     0DCB                     u3616:
  2758     0DCB  0862               	movf	(??_executeTasks+7)^(0+384),w
  2759     0DCC  00BF               	movwf	(_tsk_elapsedTime+3)^(0+384)
  2760     0DCD  0861               	movf	(??_executeTasks+6)^(0+384),w
  2761     0DCE  00BE               	movwf	(_tsk_elapsedTime+2)^(0+384)
  2762     0DCF  0860               	movf	(??_executeTasks+5)^(0+384),w
  2763     0DD0  00BD               	movwf	(_tsk_elapsedTime+1)^(0+384)
  2764     0DD1  085F               	movf	(??_executeTasks+4)^(0+384),w
  2765     0DD2  00BC               	movwf	_tsk_elapsedTime^(0+384)
  2766                           
  2767                           ;multitasking.c: 30:        if (tsk_elapsedTime > tsk_tasks[i].scheduleInterval) {
  2768     0DD3  3007               	movlw	7
  2769     0DD4  1283               	bcf	3,5	;RP0=0, select bank0
  2770     0DD5  1303               	bcf	3,6	;RP1=0, select bank0
  2771     0DD6  00A4               	movwf	___bmul@multiplicand
  2772     0DD7  0863               	movf	executeTasks@i,w
  2773     0DD8  160A  118A  273A  120A  158A  	fcall	___bmul
  2774     0DDD  3E91               	addlw	(low ((_tsk_tasks| (0+256)+1)))& (0+255)
  2775     0DDE  0084               	movwf	4
  2776     0DDF  1783               	bsf	3,7	;select IRP bank3
  2777     0DE0  0800               	movf	0,w
  2778     0DE1  1683               	bsf	3,5	;RP0=1, select bank3
  2779     0DE2  1703               	bsf	3,6	;RP1=1, select bank3
  2780     0DE3  00DB               	movwf	??_executeTasks^(0+384)
  2781     0DE4  0A84               	incf	4,f
  2782     0DE5  0800               	movf	0,w
  2783     0DE6  00DC               	movwf	(??_executeTasks^(0+384)+1)
  2784     0DE7  085B               	movf	??_executeTasks^(0+384),w
  2785     0DE8  00DD               	movwf	(??_executeTasks+2)^(0+384)
  2786     0DE9  085C               	movf	(??_executeTasks+1)^(0+384),w
  2787     0DEA  00DE               	movwf	((??_executeTasks+2)^(0+384)+1)
  2788     0DEB  3000               	movlw	0
  2789     0DEC  1BDE               	btfsc	((??_executeTasks+2)^(0+384)+1),7
  2790     0DED  30FF               	movlw	255
  2791     0DEE  00DF               	movwf	((??_executeTasks+2)^(0+384)+2)
  2792     0DEF  00E0               	movwf	((??_executeTasks+2)^(0+384)+3)
  2793     0DF0  0860               	movf	(??_executeTasks+5)^(0+384),w
  2794     0DF1  3A80               	xorlw	128
  2795     0DF2  00FF               	movwf	btemp+1
  2796     0DF3  083F               	movf	(_tsk_elapsedTime+3)^(0+384),w
  2797     0DF4  3A80               	xorlw	128
  2798     0DF5  027F               	subwf	btemp+1,w
  2799     0DF6  1D03               	skipz
  2800     0DF7  2E02               	goto	u3623
  2801     0DF8  083E               	movf	(_tsk_elapsedTime+2)^(0+384),w
  2802     0DF9  025F               	subwf	(??_executeTasks+4)^(0+384),w
  2803     0DFA  1D03               	skipz
  2804     0DFB  2E02               	goto	u3623
  2805     0DFC  083D               	movf	(_tsk_elapsedTime+1)^(0+384),w
  2806     0DFD  025E               	subwf	(??_executeTasks+3)^(0+384),w
  2807     0DFE  1D03               	skipz
  2808     0DFF  2E02               	goto	u3623
  2809     0E00  083C               	movf	_tsk_elapsedTime^(0+384),w
  2810     0E01  025D               	subwf	(??_executeTasks+2)^(0+384),w
  2811     0E02                     u3623:
  2812     0E02  1803               	skipnc
  2813     0E03  2E05               	goto	u3621
  2814     0E04  2E06               	goto	u3620
  2815     0E05                     u3621:
  2816     0E05  2E37               	goto	l3184
  2817     0E06                     u3620:
  2818     0E06                     l3182:
  2819                           
  2820                           ;multitasking.c: 31:           tsk_task = tsk_tasks[i].taskFunction;
  2821     0E06  3007               	movlw	7
  2822     0E07  1283               	bcf	3,5	;RP0=0, select bank0
  2823     0E08  1303               	bcf	3,6	;RP1=0, select bank0
  2824     0E09  00A4               	movwf	___bmul@multiplicand
  2825     0E0A  0863               	movf	executeTasks@i,w
  2826     0E0B  160A  118A  273A  120A  158A  	fcall	___bmul
  2827     0E10  3E90               	addlw	(low (_tsk_tasks| (0+256)))& (0+255)
  2828     0E11  0084               	movwf	4
  2829     0E12  1783               	bsf	3,7	;select IRP bank3
  2830     0E13  0800               	movf	0,w
  2831     0E14  1283               	bcf	3,5	;RP0=0, select bank0
  2832     0E15  1303               	bcf	3,6	;RP1=0, select bank0
  2833     0E16  00E6               	movwf	_tsk_task
  2834                           
  2835                           ;multitasking.c: 32:           tsk_task();
  2836     0E17  0866               	movf	_tsk_task,w
  2837     0E18  120A  118A  2041  120A  158A  	fcall	fptable
  2838                           
  2839                           ;multitasking.c: 33:           tsk_tasks[i].lastActivation = tsk_timeStamp;
  2840     0E1D  3007               	movlw	7
  2841     0E1E  1283               	bcf	3,5	;RP0=0, select bank0
  2842     0E1F  1303               	bcf	3,6	;RP1=0, select bank0
  2843     0E20  00A4               	movwf	___bmul@multiplicand
  2844     0E21  0863               	movf	executeTasks@i,w
  2845     0E22  160A  118A  273A  120A  158A  	fcall	___bmul
  2846     0E27  3E93               	addlw	(low ((_tsk_tasks| (0+256)+3)))& (0+255)
  2847     0E28  0084               	movwf	4
  2848     0E29  1683               	bsf	3,5	;RP0=1, select bank1
  2849     0E2A  1303               	bcf	3,6	;RP1=0, select bank1
  2850     0E2B  0828               	movf	_tsk_timeStamp^(0+128),w	;volatile
  2851     0E2C  1783               	bsf	3,7	;select IRP bank3
  2852     0E2D  0080               	movwf	0
  2853     0E2E  0A84               	incf	4,f
  2854     0E2F  0829               	movf	(_tsk_timeStamp+1)^(0+128),w	;volatile
  2855     0E30  0080               	movwf	0
  2856     0E31  0A84               	incf	4,f
  2857     0E32  082A               	movf	(_tsk_timeStamp+2)^(0+128),w	;volatile
  2858     0E33  0080               	movwf	0
  2859     0E34  0A84               	incf	4,f
  2860     0E35  082B               	movf	(_tsk_timeStamp+3)^(0+128),w	;volatile
  2861     0E36  0080               	movwf	0
  2862     0E37                     l3184:
  2863                           
  2864                           ;multitasking.c: 35:     }
  2865     0E37  3001               	movlw	1
  2866     0E38  00FF               	movwf	btemp+1
  2867     0E39  087F               	movf	btemp+1,w
  2868     0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  2869     0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  2870     0E3C  07E3               	addwf	executeTasks@i,f
  2871     0E3D                     l3186:
  2872     0E3D  3003               	movlw	3
  2873     0E3E  0263               	subwf	executeTasks@i,w
  2874     0E3F  1C03               	skipc
  2875     0E40  2E42               	goto	u3631
  2876     0E41  2E43               	goto	u3630
  2877     0E42                     u3631:
  2878     0E42  2D87               	goto	l3180
  2879     0E43                     u3630:
  2880     0E43                     l457:
  2881     0E43  0008               	return
  2882     0E44                     __end_of_executeTasks:
  2883                           
  2884                           	psect	text12
  2885     1696                     __ptext12:	
  2886 ;; *************** function _led_task *****************
  2887 ;; Defined at:
  2888 ;;		line 72 in file "tasks.c"
  2889 ;; Parameters:    Size  Location     Type
  2890 ;;		None
  2891 ;; Auto vars:     Size  Location     Type
  2892 ;;		None
  2893 ;; Return value:  Size  Location     Type
  2894 ;;                  1    wreg      void 
  2895 ;; Registers used:
  2896 ;;		wreg
  2897 ;; Tracked objects:
  2898 ;;		On entry : 0/0
  2899 ;;		On exit  : 0/0
  2900 ;;		Unchanged: 0/0
  2901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2902 ;;      Params:         0       0       0       0       0
  2903 ;;      Locals:         0       0       0       0       0
  2904 ;;      Temps:          0       0       0       0       0
  2905 ;;      Totals:         0       0       0       0       0
  2906 ;;Total ram usage:        0 bytes
  2907 ;; Hardware stack levels used: 1
  2908 ;; Hardware stack levels required when called: 4
  2909 ;; This function calls:
  2910 ;;		Nothing
  2911 ;; This function is called by:
  2912 ;;		_initTasks
  2913 ;;		_executeTasks
  2914 ;; This function uses a non-reentrant model
  2915 ;;
  2916                           
  2917     1696                     _led_task:	
  2918                           ;psect for function _led_task
  2919                           
  2920     1696                     l2890:	
  2921                           ;incstack = 0
  2922                           ; Regs used in _led_task: [wreg]
  2923                           
  2924                           
  2925                           ;tasks.c: 73:   RB5 = ~RB5;
  2926     1696  3020               	movlw	32
  2927     1697  1283               	bcf	3,5	;RP0=0, select bank0
  2928     1698  1303               	bcf	3,6	;RP1=0, select bank0
  2929     1699  0686               	xorwf	6,f
  2930     169A                     l416:
  2931     169A  0008               	return
  2932     169B                     __end_of_led_task:
  2933                           
  2934                           	psect	text13
  2935     169B                     __ptext13:	
  2936 ;; *************** function _pid_task *****************
  2937 ;; Defined at:
  2938 ;;		line 33 in file "tasks.c"
  2939 ;; Parameters:    Size  Location     Type
  2940 ;;		None
  2941 ;; Auto vars:     Size  Location     Type
  2942 ;;		None
  2943 ;; Return value:  Size  Location     Type
  2944 ;;                  1    wreg      void 
  2945 ;; Registers used:
  2946 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  2947 ;; Tracked objects:
  2948 ;;		On entry : 0/0
  2949 ;;		On exit  : 0/0
  2950 ;;		Unchanged: 0/0
  2951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2952 ;;      Params:         0       0       0       0       0
  2953 ;;      Locals:         0       0       0       0       0
  2954 ;;      Temps:          0       0       0       0       0
  2955 ;;      Totals:         0       0       0       0       0
  2956 ;;Total ram usage:        0 bytes
  2957 ;; Hardware stack levels used: 1
  2958 ;; Hardware stack levels required when called: 6
  2959 ;; This function calls:
  2960 ;;		_pid_pid
  2961 ;; This function is called by:
  2962 ;;		_initTasks
  2963 ;;		_executeTasks
  2964 ;; This function uses a non-reentrant model
  2965 ;;
  2966                           
  2967     169B                     _pid_task:	
  2968                           ;psect for function _pid_task
  2969                           
  2970     169B                     l2862:	
  2971                           ;incstack = 0
  2972                           ; Regs used in _pid_task: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  2973                           
  2974                           
  2975                           ;tasks.c: 34:   pid_pid();
  2976     169B  120A  118A  2053  160A  118A  	fcall	_pid_pid
  2977     16A0                     l397:
  2978     16A0  0008               	return
  2979     16A1                     __end_of_pid_task:
  2980                           
  2981                           	psect	text14
  2982     06EB                     __ptext14:	
  2983 ;; *************** function _protocol_task *****************
  2984 ;; Defined at:
  2985 ;;		line 41 in file "tasks.c"
  2986 ;; Parameters:    Size  Location     Type
  2987 ;;		None
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;		None
  2990 ;; Return value:  Size  Location     Type
  2991 ;;                  1    wreg      void 
  2992 ;; Registers used:
  2993 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2994 ;; Tracked objects:
  2995 ;;		On entry : 0/0
  2996 ;;		On exit  : 0/0
  2997 ;;		Unchanged: 0/0
  2998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2999 ;;      Params:         0       0       0       0       0
  3000 ;;      Locals:         0       0       0       0       0
  3001 ;;      Temps:          0       0       4       0       0
  3002 ;;      Totals:         0       0       4       0       0
  3003 ;;Total ram usage:        4 bytes
  3004 ;; Hardware stack levels used: 1
  3005 ;; Hardware stack levels required when called: 7
  3006 ;; This function calls:
  3007 ;;		_convertToReal
  3008 ;;		_pid_clearError
  3009 ;;		_pid_setDerivativeGain
  3010 ;;		_pid_setIntegralGain
  3011 ;;		_pid_setPoint
  3012 ;;		_pid_setProportionalGain
  3013 ;;		_pos_setCurrentPosition
  3014 ;;		_pro_getMessage
  3015 ;; This function is called by:
  3016 ;;		_initTasks
  3017 ;;		_executeTasks
  3018 ;; This function uses a non-reentrant model
  3019 ;;
  3020                           
  3021     06EB                     _protocol_task:	
  3022                           ;psect for function _protocol_task
  3023                           
  3024     06EB                     l3144:	
  3025                           ;incstack = 0
  3026 ;; hardware stack exceeded
  3027                           ; Regs used in _protocol_task: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3028                           
  3029                           
  3030                           ;tasks.c: 43:    message = pro_getMessage();
  3031     06EB  120A  158A  271B  120A  118A  	fcall	_pro_getMessage
  3032     06F0  30C0               	movlw	_message& (0+255)
  3033     06F1  0084               	movwf	4
  3034     06F2  1283               	bcf	3,5	;RP0=0, select bank0
  3035     06F3  1303               	bcf	3,6	;RP1=0, select bank0
  3036     06F4  3027               	movlw	low ?_pro_getMessage
  3037     06F5  1683               	bsf	3,5	;RP0=1, select bank1
  3038     06F6  1303               	bcf	3,6	;RP1=0, select bank1
  3039     06F7  00E5               	movwf	??_protocol_task^(0+128)
  3040     06F8  0804               	movf	4,w
  3041     06F9  00E6               	movwf	(??_protocol_task^(0+128)+1)
  3042     06FA  300B               	movlw	11
  3043     06FB  00E7               	movwf	(??_protocol_task^(0+128)+2)
  3044     06FC                     u3590:
  3045     06FC  0865               	movf	??_protocol_task^(0+128),w
  3046     06FD  0084               	movwf	4
  3047     06FE  1383               	bcf	3,7	;select IRP bank0
  3048     06FF  0800               	movf	0,w
  3049     0700  00E8               	movwf	(??_protocol_task^(0+128)+3)
  3050     0701  0AE5               	incf	??_protocol_task^(0+128),f
  3051     0702  0866               	movf	(??_protocol_task^(0+128)+1),w
  3052     0703  0084               	movwf	4
  3053     0704  1783               	bsf	3,7	;select IRP bank3
  3054     0705  0868               	movf	(??_protocol_task^(0+128)+3),w
  3055     0706  0080               	movwf	0
  3056     0707  0AE6               	incf	(??_protocol_task^(0+128)+1),f
  3057     0708  0BE7               	decfsz	(??_protocol_task^(0+128)+2),f
  3058     0709  2EFC               	goto	u3590
  3059     070A                     l3146:
  3060                           
  3061                           ;tasks.c: 44:    if (message.messageType != 0) {
  3062     070A  1683               	bsf	3,5	;RP0=1, select bank3
  3063     070B  1703               	bsf	3,6	;RP1=1, select bank3
  3064     070C  0840               	movf	_message^(0+384),w
  3065     070D  1903               	btfsc	3,2
  3066     070E  2F10               	goto	u3601
  3067     070F  2F11               	goto	u3600
  3068     0710                     u3601:
  3069     0710  2FB5               	goto	l3162
  3070     0711                     u3600:
  3071     0711                     l3148:
  3072                           
  3073                           ;tasks.c: 45:       value = convertToReal(message.value);
  3074     0711  30C1               	movlw	(low ((_message| (0+256)+1)))& (0+255)
  3075     0712  120A  118A  2372  120A  118A  	fcall	_convertToReal
  3076     0717  1283               	bcf	3,5	;RP0=0, select bank0
  3077     0718  1303               	bcf	3,6	;RP1=0, select bank0
  3078     0719  085D               	movf	?_convertToReal+3,w
  3079     071A  1683               	bsf	3,5	;RP0=1, select bank1
  3080     071B  1303               	bcf	3,6	;RP1=0, select bank1
  3081     071C  00A7               	movwf	(_value+3)^(0+128)
  3082     071D  1283               	bcf	3,5	;RP0=0, select bank0
  3083     071E  1303               	bcf	3,6	;RP1=0, select bank0
  3084     071F  085C               	movf	?_convertToReal+2,w
  3085     0720  1683               	bsf	3,5	;RP0=1, select bank1
  3086     0721  1303               	bcf	3,6	;RP1=0, select bank1
  3087     0722  00A6               	movwf	(_value+2)^(0+128)
  3088     0723  1283               	bcf	3,5	;RP0=0, select bank0
  3089     0724  1303               	bcf	3,6	;RP1=0, select bank0
  3090     0725  085B               	movf	?_convertToReal+1,w
  3091     0726  1683               	bsf	3,5	;RP0=1, select bank1
  3092     0727  1303               	bcf	3,6	;RP1=0, select bank1
  3093     0728  00A5               	movwf	(_value+1)^(0+128)
  3094     0729  1283               	bcf	3,5	;RP0=0, select bank0
  3095     072A  1303               	bcf	3,6	;RP1=0, select bank0
  3096     072B  085A               	movf	?_convertToReal,w
  3097     072C  1683               	bsf	3,5	;RP0=1, select bank1
  3098     072D  1303               	bcf	3,6	;RP1=0, select bank1
  3099     072E  00A4               	movwf	_value^(0+128)
  3100     072F  2FB5               	goto	l3162
  3101     0730                     l3150:
  3102                           
  3103                           ;tasks.c: 51:         pid_setPoint(value);
  3104     0730  0827               	movf	(_value+3)^(0+128),w
  3105     0731  1283               	bcf	3,5	;RP0=0, select bank0
  3106     0732  1303               	bcf	3,6	;RP1=0, select bank0
  3107     0733  00A7               	movwf	pid_setPoint@position+3
  3108     0734  1683               	bsf	3,5	;RP0=1, select bank1
  3109     0735  1303               	bcf	3,6	;RP1=0, select bank1
  3110     0736  0826               	movf	(_value+2)^(0+128),w
  3111     0737  1283               	bcf	3,5	;RP0=0, select bank0
  3112     0738  1303               	bcf	3,6	;RP1=0, select bank0
  3113     0739  00A6               	movwf	pid_setPoint@position+2
  3114     073A  1683               	bsf	3,5	;RP0=1, select bank1
  3115     073B  1303               	bcf	3,6	;RP1=0, select bank1
  3116     073C  0825               	movf	(_value+1)^(0+128),w
  3117     073D  1283               	bcf	3,5	;RP0=0, select bank0
  3118     073E  1303               	bcf	3,6	;RP1=0, select bank0
  3119     073F  00A5               	movwf	pid_setPoint@position+1
  3120     0740  1683               	bsf	3,5	;RP0=1, select bank1
  3121     0741  1303               	bcf	3,6	;RP1=0, select bank1
  3122     0742  0824               	movf	_value^(0+128),w
  3123     0743  1283               	bcf	3,5	;RP0=0, select bank0
  3124     0744  1303               	bcf	3,6	;RP1=0, select bank0
  3125     0745  00A4               	movwf	pid_setPoint@position
  3126     0746  160A  118A  279C  120A  118A  	fcall	_pid_setPoint
  3127                           
  3128                           ;tasks.c: 52:         break;
  3129     074B  2FD5               	goto	l413
  3130     074C                     l3152:
  3131                           
  3132                           ;tasks.c: 54:         pos_setCurrentPosition(0);
  3133     074C  3000               	movlw	0
  3134     074D  1283               	bcf	3,5	;RP0=0, select bank0
  3135     074E  1303               	bcf	3,6	;RP1=0, select bank0
  3136     074F  00A7               	movwf	pos_setCurrentPosition@pos+3
  3137     0750  3000               	movlw	0
  3138     0751  00A6               	movwf	pos_setCurrentPosition@pos+2
  3139     0752  3000               	movlw	0
  3140     0753  00A5               	movwf	pos_setCurrentPosition@pos+1
  3141     0754  3000               	movlw	0
  3142     0755  00A4               	movwf	pos_setCurrentPosition@pos
  3143     0756  160A  118A  27CE  120A  118A  	fcall	_pos_setCurrentPosition
  3144                           
  3145                           ;tasks.c: 55:         pid_clearError();
  3146     075B  160A  118A  26FF  120A  118A  	fcall	_pid_clearError
  3147                           
  3148                           ;tasks.c: 56:         break;
  3149     0760  2FD5               	goto	l413
  3150     0761                     l3154:
  3151                           
  3152                           ;tasks.c: 58:         pid_setProportionalGain(value);
  3153     0761  0827               	movf	(_value+3)^(0+128),w
  3154     0762  1283               	bcf	3,5	;RP0=0, select bank0
  3155     0763  1303               	bcf	3,6	;RP1=0, select bank0
  3156     0764  00A7               	movwf	pid_setProportionalGain@gain+3
  3157     0765  1683               	bsf	3,5	;RP0=1, select bank1
  3158     0766  1303               	bcf	3,6	;RP1=0, select bank1
  3159     0767  0826               	movf	(_value+2)^(0+128),w
  3160     0768  1283               	bcf	3,5	;RP0=0, select bank0
  3161     0769  1303               	bcf	3,6	;RP1=0, select bank0
  3162     076A  00A6               	movwf	pid_setProportionalGain@gain+2
  3163     076B  1683               	bsf	3,5	;RP0=1, select bank1
  3164     076C  1303               	bcf	3,6	;RP1=0, select bank1
  3165     076D  0825               	movf	(_value+1)^(0+128),w
  3166     076E  1283               	bcf	3,5	;RP0=0, select bank0
  3167     076F  1303               	bcf	3,6	;RP1=0, select bank0
  3168     0770  00A5               	movwf	pid_setProportionalGain@gain+1
  3169     0771  1683               	bsf	3,5	;RP0=1, select bank1
  3170     0772  1303               	bcf	3,6	;RP1=0, select bank1
  3171     0773  0824               	movf	_value^(0+128),w
  3172     0774  1283               	bcf	3,5	;RP0=0, select bank0
  3173     0775  1303               	bcf	3,6	;RP1=0, select bank0
  3174     0776  00A4               	movwf	pid_setProportionalGain@gain
  3175     0777  160A  118A  27B5  120A  118A  	fcall	_pid_setProportionalGain
  3176                           
  3177                           ;tasks.c: 59:         break;
  3178     077C  2FD5               	goto	l413
  3179     077D                     l3156:
  3180                           
  3181                           ;tasks.c: 61:         pid_setIntegralGain(value);
  3182     077D  0827               	movf	(_value+3)^(0+128),w
  3183     077E  1283               	bcf	3,5	;RP0=0, select bank0
  3184     077F  1303               	bcf	3,6	;RP1=0, select bank0
  3185     0780  00A7               	movwf	pid_setIntegralGain@gain+3
  3186     0781  1683               	bsf	3,5	;RP0=1, select bank1
  3187     0782  1303               	bcf	3,6	;RP1=0, select bank1
  3188     0783  0826               	movf	(_value+2)^(0+128),w
  3189     0784  1283               	bcf	3,5	;RP0=0, select bank0
  3190     0785  1303               	bcf	3,6	;RP1=0, select bank0
  3191     0786  00A6               	movwf	pid_setIntegralGain@gain+2
  3192     0787  1683               	bsf	3,5	;RP0=1, select bank1
  3193     0788  1303               	bcf	3,6	;RP1=0, select bank1
  3194     0789  0825               	movf	(_value+1)^(0+128),w
  3195     078A  1283               	bcf	3,5	;RP0=0, select bank0
  3196     078B  1303               	bcf	3,6	;RP1=0, select bank0
  3197     078C  00A5               	movwf	pid_setIntegralGain@gain+1
  3198     078D  1683               	bsf	3,5	;RP0=1, select bank1
  3199     078E  1303               	bcf	3,6	;RP1=0, select bank1
  3200     078F  0824               	movf	_value^(0+128),w
  3201     0790  1283               	bcf	3,5	;RP0=0, select bank0
  3202     0791  1303               	bcf	3,6	;RP1=0, select bank0
  3203     0792  00A4               	movwf	pid_setIntegralGain@gain
  3204     0793  160A  118A  2783  120A  118A  	fcall	_pid_setIntegralGain
  3205                           
  3206                           ;tasks.c: 62:         break;
  3207     0798  2FD5               	goto	l413
  3208     0799                     l3158:
  3209                           
  3210                           ;tasks.c: 64:         pid_setDerivativeGain(value);
  3211     0799  0827               	movf	(_value+3)^(0+128),w
  3212     079A  1283               	bcf	3,5	;RP0=0, select bank0
  3213     079B  1303               	bcf	3,6	;RP1=0, select bank0
  3214     079C  00A7               	movwf	pid_setDerivativeGain@gain+3
  3215     079D  1683               	bsf	3,5	;RP0=1, select bank1
  3216     079E  1303               	bcf	3,6	;RP1=0, select bank1
  3217     079F  0826               	movf	(_value+2)^(0+128),w
  3218     07A0  1283               	bcf	3,5	;RP0=0, select bank0
  3219     07A1  1303               	bcf	3,6	;RP1=0, select bank0
  3220     07A2  00A6               	movwf	pid_setDerivativeGain@gain+2
  3221     07A3  1683               	bsf	3,5	;RP0=1, select bank1
  3222     07A4  1303               	bcf	3,6	;RP1=0, select bank1
  3223     07A5  0825               	movf	(_value+1)^(0+128),w
  3224     07A6  1283               	bcf	3,5	;RP0=0, select bank0
  3225     07A7  1303               	bcf	3,6	;RP1=0, select bank0
  3226     07A8  00A5               	movwf	pid_setDerivativeGain@gain+1
  3227     07A9  1683               	bsf	3,5	;RP0=1, select bank1
  3228     07AA  1303               	bcf	3,6	;RP1=0, select bank1
  3229     07AB  0824               	movf	_value^(0+128),w
  3230     07AC  1283               	bcf	3,5	;RP0=0, select bank0
  3231     07AD  1303               	bcf	3,6	;RP1=0, select bank0
  3232     07AE  00A4               	movwf	pid_setDerivativeGain@gain
  3233     07AF  160A  118A  276A  120A  118A  	fcall	_pid_setDerivativeGain
  3234                           
  3235                           ;tasks.c: 65:         break;
  3236     07B4  2FD5               	goto	l413
  3237     07B5                     l3162:
  3238     07B5  1683               	bsf	3,5	;RP0=1, select bank3
  3239     07B6  1703               	bsf	3,6	;RP1=1, select bank3
  3240     07B7  0840               	movf	_message^(0+384),w
  3241     07B8  1683               	bsf	3,5	;RP0=1, select bank1
  3242     07B9  1303               	bcf	3,6	;RP1=0, select bank1
  3243     07BA  00E5               	movwf	??_protocol_task^(0+128)
  3244     07BB  01E6               	clrf	(??_protocol_task^(0+128)+1)
  3245                           
  3246                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3247                           ; Switch size 1, requested type "simple"
  3248                           ; Number of cases is 1, Range of values is 0 to 0
  3249                           ; switch strategies available:
  3250                           ; Name         Instructions Cycles
  3251                           ; simple_byte            4     3 (average)
  3252                           ; direct_byte           11     8 (fixed)
  3253                           ; jumptable            260     6 (fixed)
  3254                           ;	Chosen strategy is simple_byte
  3255     07BC  0866               	movf	(??_protocol_task+1)^(0+128),w
  3256     07BD  3A00               	xorlw	0	; case 0
  3257     07BE  1903               	skipnz
  3258     07BF  2FC1               	goto	l3242
  3259     07C0  2FD5               	goto	l413
  3260     07C1                     l3242:
  3261                           
  3262                           ; Switch size 1, requested type "simple"
  3263                           ; Number of cases is 6, Range of values is 0 to 5
  3264                           ; switch strategies available:
  3265                           ; Name         Instructions Cycles
  3266                           ; simple_byte           19    10 (average)
  3267                           ; direct_byte           26     8 (fixed)
  3268                           ; jumptable            260     6 (fixed)
  3269                           ;	Chosen strategy is simple_byte
  3270     07C1  0865               	movf	??_protocol_task^(0+128),w
  3271     07C2  3A00               	xorlw	0	; case 0
  3272     07C3  1903               	skipnz
  3273     07C4  2FD5               	goto	l413
  3274     07C5  3A01               	xorlw	1	; case 1
  3275     07C6  1903               	skipnz
  3276     07C7  2F30               	goto	l3150
  3277     07C8  3A03               	xorlw	3	; case 2
  3278     07C9  1903               	skipnz
  3279     07CA  2F4C               	goto	l3152
  3280     07CB  3A01               	xorlw	1	; case 3
  3281     07CC  1903               	skipnz
  3282     07CD  2F61               	goto	l3154
  3283     07CE  3A07               	xorlw	7	; case 4
  3284     07CF  1903               	skipnz
  3285     07D0  2F7D               	goto	l3156
  3286     07D1  3A01               	xorlw	1	; case 5
  3287     07D2  1903               	skipnz
  3288     07D3  2F99               	goto	l3158
  3289     07D4  2FD5               	goto	l413
  3290     07D5                     l413:
  3291     07D5  0008               	return
  3292     07D6                     __end_of_protocol_task:
  3293                           
  3294                           	psect	text15
  3295     0F1B                     __ptext15:	
  3296 ;; *************** function _pro_getMessage *****************
  3297 ;; Defined at:
  3298 ;;		line 99 in file "protocol.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  i               1   22[BANK0 ] unsigned char 
  3303 ;;  aChar           1   23[BANK0 ] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;                  11    7[BANK0 ] struct .
  3306 ;; Registers used:
  3307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3313 ;;      Params:         0      11       0       0       0
  3314 ;;      Locals:         0       2       0       0       0
  3315 ;;      Temps:          0       4       0       0       0
  3316 ;;      Totals:         0      17       0       0       0
  3317 ;;Total ram usage:       17 bytes
  3318 ;; Hardware stack levels used: 1
  3319 ;; Hardware stack levels required when called: 6
  3320 ;; This function calls:
  3321 ;;		_addToIncomingBuffer
  3322 ;;		_chkchr
  3323 ;;		_cleanupBuffer
  3324 ;;		_clear_usart_errors
  3325 ;;		_framingError
  3326 ;;		_isValid
  3327 ;;		_isValidCmd
  3328 ;;		_putch
  3329 ;;		_toMsgType
  3330 ;; This function is called by:
  3331 ;;		_protocol_task
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335     0F1B                     _pro_getMessage:	
  3336                           ;psect for function _pro_getMessage
  3337                           
  3338     0F1B                     l2662:	
  3339                           ;incstack = 0
  3340 ;; hardware stack exceeded
  3341                           ; Regs used in _pro_getMessage: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3342                           
  3343                           
  3344                           ;protocol.c: 100:   unsigned char aChar;;protocol.c: 102:   if (pro_status == 4) {
  3345     0F1B  3004               	movlw	4
  3346     0F1C  1283               	bcf	3,5	;RP0=0, select bank0
  3347     0F1D  1303               	bcf	3,6	;RP1=0, select bank0
  3348     0F1E  0669               	xorwf	_pro_status,w
  3349     0F1F  1D03               	btfss	3,2
  3350     0F20  2F22               	goto	u3041
  3351     0F21  2F23               	goto	u3040
  3352     0F22                     u3041:
  3353     0F22  2F24               	goto	l227
  3354     0F23                     u3040:
  3355     0F23                     l2664:
  3356                           
  3357                           ;protocol.c: 103:     pro_status = 0;
  3358     0F23  01E9               	clrf	_pro_status
  3359     0F24                     l227:	
  3360                           ;protocol.c: 104:   }
  3361                           
  3362                           
  3363                           ;protocol.c: 106:   completeMessage.messageType = 0;
  3364     0F24  1683               	bsf	3,5	;RP0=1, select bank3
  3365     0F25  1703               	bsf	3,6	;RP1=1, select bank3
  3366     0F26  01B1               	clrf	_completeMessage^(0+384)
  3367     0F27                     l2666:
  3368                           
  3369                           ;protocol.c: 108:   aChar = chkchr();
  3370     0F27  160A  118A  26C0  120A  158A  	fcall	_chkchr
  3371     0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  3372     0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  3373     0F2E  00B7               	movwf	pro_getMessage@aChar
  3374     0F2F                     l2668:
  3375                           
  3376                           ;protocol.c: 112:   if (aChar != 255) {
  3377     0F2F  0A37               	incf	pro_getMessage@aChar,w
  3378     0F30  1903               	btfsc	3,2
  3379     0F31  2F33               	goto	u3051
  3380     0F32  2F34               	goto	u3050
  3381     0F33                     u3051:
  3382     0F33  2FE2               	goto	l2724
  3383     0F34                     u3050:
  3384     0F34                     l2670:
  3385                           
  3386                           ;protocol.c: 114:     putch(aChar);
  3387     0F34  0837               	movf	pro_getMessage@aChar,w
  3388     0F35  00A4               	movwf	putch@c
  3389     0F36  120A  158A  204B  120A  158A  	fcall	_putch
  3390                           
  3391                           ;protocol.c: 116:     switch (pro_status) {
  3392     0F3B  2FCA               	goto	l2722
  3393     0F3C                     l2672:
  3394                           
  3395                           ;protocol.c: 118:         if (aChar == ':') {
  3396     0F3C  303A               	movlw	58
  3397     0F3D  0637               	xorwf	pro_getMessage@aChar,w
  3398     0F3E  1D03               	btfss	3,2
  3399     0F3F  2F41               	goto	u3061
  3400     0F40  2F42               	goto	u3060
  3401     0F41                     u3061:
  3402     0F41  2F45               	goto	l2676
  3403     0F42                     u3060:
  3404     0F42                     l2674:
  3405                           
  3406                           ;protocol.c: 119:           pro_status = 1;
  3407     0F42  01E9               	clrf	_pro_status
  3408     0F43  0AE9               	incf	_pro_status,f
  3409                           
  3410                           ;protocol.c: 120:         } else {
  3411     0F44  2FE7               	goto	l2726
  3412     0F45                     l2676:
  3413                           
  3414                           ;protocol.c: 121:           framingError();
  3415     0F45  160A  118A  26B7  120A  158A  	fcall	_framingError
  3416     0F4A  2FE7               	goto	l2726
  3417     0F4B                     l2678:
  3418                           
  3419                           ;protocol.c: 125:         if (aChar == pro_myAddress) {
  3420     0F4B  0837               	movf	pro_getMessage@aChar,w
  3421     0F4C  066A               	xorwf	_pro_myAddress,w
  3422     0F4D  1D03               	skipz
  3423     0F4E  2F50               	goto	u3071
  3424     0F4F  2F51               	goto	u3070
  3425     0F50                     u3071:
  3426     0F50  2F45               	goto	l2676
  3427     0F51                     u3070:
  3428     0F51                     l2680:
  3429                           
  3430                           ;protocol.c: 126:           cleanupBuffer();
  3431     0F51  120A  158A  200F  120A  158A  	fcall	_cleanupBuffer
  3432     0F56                     l2682:
  3433                           
  3434                           ;protocol.c: 127:           pro_status = 2;
  3435     0F56  3002               	movlw	2
  3436     0F57  1283               	bcf	3,5	;RP0=0, select bank0
  3437     0F58  1303               	bcf	3,6	;RP1=0, select bank0
  3438     0F59  00E9               	movwf	_pro_status
  3439                           
  3440                           ;protocol.c: 128:         } else {
  3441     0F5A  2FE7               	goto	l2726
  3442     0F5B                     l2686:
  3443                           
  3444                           ;protocol.c: 133:         if (isValidCmd(aChar)) {
  3445     0F5B  0837               	movf	pro_getMessage@aChar,w
  3446     0F5C  120A  118A  27D6  120A  158A  	fcall	_isValidCmd
  3447     0F61  1283               	bcf	3,5	;RP0=0, select bank0
  3448     0F62  1303               	bcf	3,6	;RP1=0, select bank0
  3449     0F63  0824               	movf	?_isValidCmd,w
  3450     0F64  0425               	iorwf	?_isValidCmd+1,w
  3451     0F65  1903               	btfsc	3,2
  3452     0F66  2F68               	goto	u3081
  3453     0F67  2F69               	goto	u3080
  3454     0F68                     u3081:
  3455     0F68  2F45               	goto	l2676
  3456     0F69                     u3080:
  3457     0F69                     l2688:
  3458                           
  3459                           ;protocol.c: 134:            addToIncomingBuffer(aChar);
  3460     0F69  0837               	movf	pro_getMessage@aChar,w
  3461     0F6A  160A  118A  26E0  120A  158A  	fcall	_addToIncomingBuffer
  3462     0F6F                     l2690:
  3463                           
  3464                           ;protocol.c: 135:            pro_status = 3;
  3465     0F6F  3003               	movlw	3
  3466     0F70  1283               	bcf	3,5	;RP0=0, select bank0
  3467     0F71  1303               	bcf	3,6	;RP1=0, select bank0
  3468     0F72  00E9               	movwf	_pro_status
  3469                           
  3470                           ;protocol.c: 136:         } else {
  3471     0F73  2FE7               	goto	l2726
  3472     0F74                     l2694:
  3473                           
  3474                           ;protocol.c: 141:         if (aChar == ';') {
  3475     0F74  303B               	movlw	59
  3476     0F75  0637               	xorwf	pro_getMessage@aChar,w
  3477     0F76  1D03               	btfss	3,2
  3478     0F77  2F79               	goto	u3091
  3479     0F78  2F7A               	goto	u3090
  3480     0F79                     u3091:
  3481     0F79  2FB5               	goto	l2714
  3482     0F7A                     u3090:
  3483     0F7A                     l2696:
  3484                           
  3485                           ;protocol.c: 142:           completeMessage.messageType = toMsgType(pro_incoming[0]);
  3486     0F7A  1683               	bsf	3,5	;RP0=1, select bank3
  3487     0F7B  1703               	bsf	3,6	;RP1=1, select bank3
  3488     0F7C  0825               	movf	_pro_incoming^(0+384),w
  3489     0F7D  120A  158A  20B7  120A  158A  	fcall	_toMsgType
  3490     0F82  1683               	bsf	3,5	;RP0=1, select bank3
  3491     0F83  1703               	bsf	3,6	;RP1=1, select bank3
  3492     0F84  00B1               	movwf	_completeMessage^(0+384)
  3493                           
  3494                           ;protocol.c: 144:           putch('\n');
  3495     0F85  300A               	movlw	10
  3496     0F86  1283               	bcf	3,5	;RP0=0, select bank0
  3497     0F87  1303               	bcf	3,6	;RP1=0, select bank0
  3498     0F88  00A4               	movwf	putch@c
  3499     0F89  120A  158A  204B  120A  158A  	fcall	_putch
  3500     0F8E                     l2698:
  3501                           
  3502                           ;protocol.c: 146:           for (unsigned char i = 0; i < 10 - 1; i++) {
  3503     0F8E  1283               	bcf	3,5	;RP0=0, select bank0
  3504     0F8F  1303               	bcf	3,6	;RP1=0, select bank0
  3505     0F90  01B6               	clrf	pro_getMessage@i
  3506     0F91                     l2704:
  3507                           
  3508                           ;protocol.c: 147:             completeMessage.value[i] = pro_incoming[i+1];
  3509     0F91  0836               	movf	pro_getMessage@i,w
  3510     0F92  3EA6               	addlw	(low ((_pro_incoming| (0+256)+1)))& (0+255)
  3511     0F93  0084               	movwf	4
  3512     0F94  1783               	bsf	3,7	;select IRP bank3
  3513     0F95  0800               	movf	0,w
  3514     0F96  00FF               	movwf	btemp+1
  3515     0F97  0836               	movf	pro_getMessage@i,w
  3516     0F98  3EB2               	addlw	(low ((_completeMessage| (0+256)+1)))& (0+255)
  3517     0F99  0084               	movwf	4
  3518     0F9A  087F               	movf	btemp+1,w
  3519     0F9B  0080               	movwf	0
  3520     0F9C                     l2706:
  3521                           
  3522                           ;protocol.c: 149:             putch(completeMessage.value[i]);
  3523     0F9C  0836               	movf	pro_getMessage@i,w
  3524     0F9D  3EB2               	addlw	(low ((_completeMessage| (0+256)+1)))& (0+255)
  3525     0F9E  0084               	movwf	4
  3526     0F9F  0800               	movf	0,w
  3527     0FA0  00A4               	movwf	putch@c
  3528     0FA1  120A  158A  204B  120A  158A  	fcall	_putch
  3529     0FA6                     l2708:
  3530                           
  3531                           ;protocol.c: 151:           }
  3532     0FA6  3001               	movlw	1
  3533     0FA7  00FF               	movwf	btemp+1
  3534     0FA8  087F               	movf	btemp+1,w
  3535     0FA9  1283               	bcf	3,5	;RP0=0, select bank0
  3536     0FAA  1303               	bcf	3,6	;RP1=0, select bank0
  3537     0FAB  07B6               	addwf	pro_getMessage@i,f
  3538     0FAC                     l2710:
  3539     0FAC  3009               	movlw	9
  3540     0FAD  0236               	subwf	pro_getMessage@i,w
  3541     0FAE  1C03               	skipc
  3542     0FAF  2FB1               	goto	u3101
  3543     0FB0  2FB2               	goto	u3100
  3544     0FB1                     u3101:
  3545     0FB1  2F91               	goto	l2704
  3546     0FB2                     u3100:
  3547     0FB2                     l2712:
  3548                           
  3549                           ;protocol.c: 152:           pro_status = 4;
  3550     0FB2  3004               	movlw	4
  3551     0FB3  00E9               	movwf	_pro_status
  3552                           
  3553                           ;protocol.c: 153:         } else {
  3554     0FB4  2FE7               	goto	l2726
  3555     0FB5                     l2714:
  3556                           
  3557                           ;protocol.c: 154:           if (isValid(aChar)) {
  3558     0FB5  0837               	movf	pro_getMessage@aChar,w
  3559     0FB6  120A  158A  208E  120A  158A  	fcall	_isValid
  3560     0FBB  1283               	bcf	3,5	;RP0=0, select bank0
  3561     0FBC  1303               	bcf	3,6	;RP1=0, select bank0
  3562     0FBD  0824               	movf	?_isValid,w
  3563     0FBE  0425               	iorwf	?_isValid+1,w
  3564     0FBF  1903               	btfsc	3,2
  3565     0FC0  2FC2               	goto	u3111
  3566     0FC1  2FC3               	goto	u3110
  3567     0FC2                     u3111:
  3568     0FC2  2F45               	goto	l2676
  3569     0FC3                     u3110:
  3570     0FC3                     l2716:
  3571                           
  3572                           ;protocol.c: 155:             addToIncomingBuffer(aChar);
  3573     0FC3  0837               	movf	pro_getMessage@aChar,w
  3574     0FC4  160A  118A  26E0  120A  158A  	fcall	_addToIncomingBuffer
  3575                           
  3576                           ;protocol.c: 156:           } else {
  3577     0FC9  2FE7               	goto	l2726
  3578     0FCA                     l2722:
  3579     0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  3580     0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  3581     0FCC  0869               	movf	_pro_status,w
  3582     0FCD  00B2               	movwf	??_pro_getMessage
  3583     0FCE  01B3               	clrf	??_pro_getMessage+1
  3584                           
  3585                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3586                           ; Switch size 1, requested type "simple"
  3587                           ; Number of cases is 1, Range of values is 0 to 0
  3588                           ; switch strategies available:
  3589                           ; Name         Instructions Cycles
  3590                           ; simple_byte            4     3 (average)
  3591                           ; direct_byte           11     8 (fixed)
  3592                           ; jumptable            260     6 (fixed)
  3593                           ;	Chosen strategy is simple_byte
  3594     0FCF  0833               	movf	??_pro_getMessage+1,w
  3595     0FD0  3A00               	xorlw	0	; case 0
  3596     0FD1  1903               	skipnz
  3597     0FD2  2FD4               	goto	l3244
  3598     0FD3  2F45               	goto	l2676
  3599     0FD4                     l3244:
  3600                           
  3601                           ; Switch size 1, requested type "simple"
  3602                           ; Number of cases is 4, Range of values is 0 to 3
  3603                           ; switch strategies available:
  3604                           ; Name         Instructions Cycles
  3605                           ; simple_byte           13     7 (average)
  3606                           ; direct_byte           20     8 (fixed)
  3607                           ; jumptable            260     6 (fixed)
  3608                           ;	Chosen strategy is simple_byte
  3609     0FD4  0832               	movf	??_pro_getMessage,w
  3610     0FD5  3A00               	xorlw	0	; case 0
  3611     0FD6  1903               	skipnz
  3612     0FD7  2F3C               	goto	l2672
  3613     0FD8  3A01               	xorlw	1	; case 1
  3614     0FD9  1903               	skipnz
  3615     0FDA  2F4B               	goto	l2678
  3616     0FDB  3A03               	xorlw	3	; case 2
  3617     0FDC  1903               	skipnz
  3618     0FDD  2F5B               	goto	l2686
  3619     0FDE  3A01               	xorlw	1	; case 3
  3620     0FDF  1903               	skipnz
  3621     0FE0  2F74               	goto	l2694
  3622     0FE1  2F45               	goto	l2676
  3623     0FE2                     l2724:
  3624                           
  3625                           ;protocol.c: 165:     clear_usart_errors();
  3626     0FE2  160A  118A  27E7  120A  158A  	fcall	_clear_usart_errors
  3627     0FE7                     l2726:
  3628                           
  3629                           ;protocol.c: 167:   return completeMessage;
  3630     0FE7  3027               	movlw	?_pro_getMessage& (0+255)
  3631     0FE8  0084               	movwf	4
  3632     0FE9  30B1               	movlw	low _completeMessage
  3633     0FEA  1283               	bcf	3,5	;RP0=0, select bank0
  3634     0FEB  1303               	bcf	3,6	;RP1=0, select bank0
  3635     0FEC  00B2               	movwf	??_pro_getMessage
  3636     0FED  0804               	movf	4,w
  3637     0FEE  00B3               	movwf	??_pro_getMessage+1
  3638     0FEF  300B               	movlw	11
  3639     0FF0  00B4               	movwf	??_pro_getMessage+2
  3640     0FF1                     u3120:
  3641     0FF1  0832               	movf	??_pro_getMessage,w
  3642     0FF2  0084               	movwf	4
  3643     0FF3  1783               	bsf	3,7	;select IRP bank3
  3644     0FF4  0800               	movf	0,w
  3645     0FF5  00B5               	movwf	??_pro_getMessage+3
  3646     0FF6  0AB2               	incf	??_pro_getMessage,f
  3647     0FF7  0833               	movf	??_pro_getMessage+1,w
  3648     0FF8  0084               	movwf	4
  3649     0FF9  1383               	bcf	3,7	;select IRP bank0
  3650     0FFA  0835               	movf	??_pro_getMessage+3,w
  3651     0FFB  0080               	movwf	0
  3652     0FFC  0AB3               	incf	??_pro_getMessage+1,f
  3653     0FFD  0BB4               	decfsz	??_pro_getMessage+2,f
  3654     0FFE  2FF1               	goto	u3120
  3655     0FFF                     l249:
  3656     0FFF  0008               	return
  3657     1000                     __end_of_pro_getMessage:
  3658                           
  3659                           	psect	text16
  3660     08B7                     __ptext16:	
  3661 ;; *************** function _toMsgType *****************
  3662 ;; Defined at:
  3663 ;;		line 70 in file "protocol.c"
  3664 ;; Parameters:    Size  Location     Type
  3665 ;;  aChar           1    wreg     unsigned char 
  3666 ;; Auto vars:     Size  Location     Type
  3667 ;;  aChar           1    4[BANK0 ] unsigned char 
  3668 ;; Return value:  Size  Location     Type
  3669 ;;                  1    wreg      unsigned char 
  3670 ;; Registers used:
  3671 ;;		wreg, status,2, status,0
  3672 ;; Tracked objects:
  3673 ;;		On entry : 0/0
  3674 ;;		On exit  : 0/0
  3675 ;;		Unchanged: 0/0
  3676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3677 ;;      Params:         0       0       0       0       0
  3678 ;;      Locals:         0       1       0       0       0
  3679 ;;      Temps:          0       0       0       0       0
  3680 ;;      Totals:         0       1       0       0       0
  3681 ;;Total ram usage:        1 bytes
  3682 ;; Hardware stack levels used: 1
  3683 ;; Hardware stack levels required when called: 4
  3684 ;; This function calls:
  3685 ;;		Nothing
  3686 ;; This function is called by:
  3687 ;;		_pro_getMessage
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691     08B7                     _toMsgType:	
  3692                           ;psect for function _toMsgType
  3693                           
  3694                           
  3695                           ;incstack = 0
  3696                           ; Regs used in _toMsgType: [wreg+status,2+status,0]
  3697                           ;toMsgType@aChar stored from wreg
  3698     08B7  1283               	bcf	3,5	;RP0=0, select bank0
  3699     08B8  1303               	bcf	3,6	;RP1=0, select bank0
  3700     08B9  00A4               	movwf	toMsgType@aChar
  3701     08BA                     l2234:
  3702                           
  3703                           ;protocol.c: 71:   if (aChar == 'p')
  3704     08BA  3070               	movlw	112
  3705     08BB  0624               	xorwf	toMsgType@aChar,w
  3706     08BC  1D03               	btfss	3,2
  3707     08BD  28BF               	goto	u2131
  3708     08BE  28C0               	goto	u2130
  3709     08BF                     u2131:
  3710     08BF  28C2               	goto	l2240
  3711     08C0                     u2130:
  3712     08C0                     l2236:
  3713                           
  3714                           ;protocol.c: 72:     return 1;
  3715     08C0  3001               	movlw	1
  3716     08C1  28E3               	goto	l213
  3717     08C2                     l2240:
  3718                           
  3719                           ;protocol.c: 73:   if (aChar == 'h')
  3720     08C2  3068               	movlw	104
  3721     08C3  0624               	xorwf	toMsgType@aChar,w
  3722     08C4  1D03               	btfss	3,2
  3723     08C5  28C7               	goto	u2141
  3724     08C6  28C8               	goto	u2140
  3725     08C7                     u2141:
  3726     08C7  28CA               	goto	l2246
  3727     08C8                     u2140:
  3728     08C8                     l2242:
  3729                           
  3730                           ;protocol.c: 74:     return 2;
  3731     08C8  3002               	movlw	2
  3732     08C9  28E3               	goto	l213
  3733     08CA                     l2246:
  3734                           
  3735                           ;protocol.c: 75:   if (aChar == 'g')
  3736     08CA  3067               	movlw	103
  3737     08CB  0624               	xorwf	toMsgType@aChar,w
  3738     08CC  1D03               	btfss	3,2
  3739     08CD  28CF               	goto	u2151
  3740     08CE  28D0               	goto	u2150
  3741     08CF                     u2151:
  3742     08CF  28D2               	goto	l2252
  3743     08D0                     u2150:
  3744     08D0                     l2248:
  3745                           
  3746                           ;protocol.c: 76:     return 3;
  3747     08D0  3003               	movlw	3
  3748     08D1  28E3               	goto	l213
  3749     08D2                     l2252:
  3750                           
  3751                           ;protocol.c: 77:   if (aChar == 'i')
  3752     08D2  3069               	movlw	105
  3753     08D3  0624               	xorwf	toMsgType@aChar,w
  3754     08D4  1D03               	btfss	3,2
  3755     08D5  28D7               	goto	u2161
  3756     08D6  28D8               	goto	u2160
  3757     08D7                     u2161:
  3758     08D7  28DA               	goto	l2258
  3759     08D8                     u2160:
  3760     08D8                     l2254:
  3761                           
  3762                           ;protocol.c: 78:     return 4;
  3763     08D8  3004               	movlw	4
  3764     08D9  28E3               	goto	l213
  3765     08DA                     l2258:
  3766                           
  3767                           ;protocol.c: 79:   if (aChar == 'd')
  3768     08DA  3064               	movlw	100
  3769     08DB  0624               	xorwf	toMsgType@aChar,w
  3770     08DC  1D03               	btfss	3,2
  3771     08DD  28DF               	goto	u2171
  3772     08DE  28E0               	goto	u2170
  3773     08DF                     u2171:
  3774     08DF  28E2               	goto	l2264
  3775     08E0                     u2170:
  3776     08E0                     l2260:
  3777                           
  3778                           ;protocol.c: 80:     return 5;
  3779     08E0  3005               	movlw	5
  3780     08E1  28E3               	goto	l213
  3781     08E2                     l2264:
  3782                           
  3783                           ;protocol.c: 81:   return 0;
  3784     08E2  3000               	movlw	0
  3785     08E3                     l213:
  3786     08E3  0008               	return
  3787     08E4                     __end_of_toMsgType:
  3788                           
  3789                           	psect	text17
  3790     084B                     __ptext17:	
  3791 ;; *************** function _putch *****************
  3792 ;; Defined at:
  3793 ;;		line 102 in file "serial.c"
  3794 ;; Parameters:    Size  Location     Type
  3795 ;;  c               1    4[BANK0 ] unsigned char 
  3796 ;; Auto vars:     Size  Location     Type
  3797 ;;		None
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      void 
  3800 ;; Registers used:
  3801 ;;		wreg
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       1       0       0       0
  3808 ;;      Locals:         0       0       0       0       0
  3809 ;;      Temps:          0       0       0       0       0
  3810 ;;      Totals:         0       1       0       0       0
  3811 ;;Total ram usage:        1 bytes
  3812 ;; Hardware stack levels used: 1
  3813 ;; Hardware stack levels required when called: 4
  3814 ;; This function calls:
  3815 ;;		Nothing
  3816 ;; This function is called by:
  3817 ;;		_pro_getMessage
  3818 ;;		_putchhex
  3819 ;;		_putchdec
  3820 ;;		_putst
  3821 ;;		_printReal
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825     084B                     _putch:	
  3826                           ;psect for function _putch
  3827                           
  3828     084B                     l2300:	
  3829                           ;incstack = 0
  3830                           ; Regs used in _putch: [wreg]
  3831                           
  3832                           
  3833                           ;serial.c: 102: void putch(char c);serial.c: 103: {;serial.c: 104:  while(!TXIF)
  3834     084B  2863               	goto	l2310
  3835     084C                     l302:
  3836                           
  3837                           ;serial.c: 105:  {;serial.c: 106:   if (OERR) { TXEN=0; TXEN=1; CREN=0; CREN=1; } if (FE
      +                          RR) { dummy=RCREG; TXEN=0; TXEN=1; };
  3838     084C  1C98               	btfss	24,1	;volatile
  3839     084D  284F               	goto	u2241
  3840     084E  2850               	goto	u2240
  3841     084F                     u2241:
  3842     084F  2858               	goto	l303
  3843     0850                     u2240:
  3844     0850                     l2302:
  3845     0850  1683               	bsf	3,5	;RP0=1, select bank1
  3846     0851  1303               	bcf	3,6	;RP1=0, select bank1
  3847     0852  1298               	bcf	24,5	;volatile
  3848     0853  1698               	bsf	24,5	;volatile
  3849     0854  1283               	bcf	3,5	;RP0=0, select bank0
  3850     0855  1303               	bcf	3,6	;RP1=0, select bank0
  3851     0856  1218               	bcf	24,4	;volatile
  3852     0857  1618               	bsf	24,4	;volatile
  3853     0858                     l303:
  3854     0858  1D18               	btfss	24,2	;volatile
  3855     0859  285B               	goto	u2251
  3856     085A  285C               	goto	u2250
  3857     085B                     u2251:
  3858     085B  2862               	goto	l304
  3859     085C                     u2250:
  3860     085C                     l2304:
  3861     085C  081A               	movf	26,w	;volatile
  3862     085D  00E7               	movwf	_dummy
  3863     085E                     l2306:
  3864     085E  1683               	bsf	3,5	;RP0=1, select bank1
  3865     085F  1303               	bcf	3,6	;RP1=0, select bank1
  3866     0860  1298               	bcf	24,5	;volatile
  3867     0861                     l2308:
  3868     0861  1698               	bsf	24,5	;volatile
  3869     0862                     l304:
  3870     0862  0064               	clrwdt	;# 
  3871     0863                     l2310:
  3872                           
  3873                           ;serial.c: 104:  while(!TXIF)
  3874     0863  1283               	bcf	3,5	;RP0=0, select bank0
  3875     0864  1303               	bcf	3,6	;RP1=0, select bank0
  3876     0865  1E0C               	btfss	12,4	;volatile
  3877     0866  2868               	goto	u2261
  3878     0867  2869               	goto	u2260
  3879     0868                     u2261:
  3880     0868  284C               	goto	l302
  3881     0869                     u2260:
  3882     0869                     l2312:
  3883                           
  3884                           ;serial.c: 109:  TXREG=c;
  3885     0869  0824               	movf	putch@c,w
  3886     086A  0099               	movwf	25	;volatile
  3887     086B                     l306:
  3888     086B  0008               	return
  3889     086C                     __end_of_putch:
  3890                           
  3891                           	psect	text18
  3892     07D6                     __ptext18:	
  3893 ;; *************** function _isValidCmd *****************
  3894 ;; Defined at:
  3895 ;;		line 55 in file "protocol.c"
  3896 ;; Parameters:    Size  Location     Type
  3897 ;;  aChar           1    wreg     unsigned char 
  3898 ;; Auto vars:     Size  Location     Type
  3899 ;;  aChar           1    6[BANK0 ] unsigned char 
  3900 ;; Return value:  Size  Location     Type
  3901 ;;                  2    4[BANK0 ] int 
  3902 ;; Registers used:
  3903 ;;		wreg, status,2, status,0
  3904 ;; Tracked objects:
  3905 ;;		On entry : 0/0
  3906 ;;		On exit  : 0/0
  3907 ;;		Unchanged: 0/0
  3908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3909 ;;      Params:         0       2       0       0       0
  3910 ;;      Locals:         0       1       0       0       0
  3911 ;;      Temps:          0       0       0       0       0
  3912 ;;      Totals:         0       3       0       0       0
  3913 ;;Total ram usage:        3 bytes
  3914 ;; Hardware stack levels used: 1
  3915 ;; Hardware stack levels required when called: 4
  3916 ;; This function calls:
  3917 ;;		Nothing
  3918 ;; This function is called by:
  3919 ;;		_pro_getMessage
  3920 ;; This function uses a non-reentrant model
  3921 ;;
  3922                           
  3923     07D6                     _isValidCmd:	
  3924                           ;psect for function _isValidCmd
  3925                           
  3926                           
  3927                           ;incstack = 0
  3928                           ; Regs used in _isValidCmd: [wreg+status,2+status,0]
  3929                           ;isValidCmd@aChar stored from wreg
  3930     07D6  1283               	bcf	3,5	;RP0=0, select bank0
  3931     07D7  1303               	bcf	3,6	;RP1=0, select bank0
  3932     07D8  00A6               	movwf	isValidCmd@aChar
  3933     07D9                     l2212:
  3934                           
  3935                           ;protocol.c: 56:    if ( (aChar == 'p') ||
  3936     07D9  3070               	movlw	112
  3937     07DA  0626               	xorwf	isValidCmd@aChar,w
  3938     07DB  1903               	btfsc	3,2
  3939     07DC  2FDE               	goto	u2081
  3940     07DD  2FDF               	goto	u2080
  3941     07DE                     u2081:
  3942     07DE  2FF7               	goto	l2222
  3943     07DF                     u2080:
  3944     07DF                     l2214:
  3945     07DF  3068               	movlw	104
  3946     07E0  0626               	xorwf	isValidCmd@aChar,w
  3947     07E1  1903               	btfsc	3,2
  3948     07E2  2FE4               	goto	u2091
  3949     07E3  2FE5               	goto	u2090
  3950     07E4                     u2091:
  3951     07E4  2FF7               	goto	l2222
  3952     07E5                     u2090:
  3953     07E5                     l2216:
  3954     07E5  3067               	movlw	103
  3955     07E6  0626               	xorwf	isValidCmd@aChar,w
  3956     07E7  1903               	btfsc	3,2
  3957     07E8  2FEA               	goto	u2101
  3958     07E9  2FEB               	goto	u2100
  3959     07EA                     u2101:
  3960     07EA  2FF7               	goto	l2222
  3961     07EB                     u2100:
  3962     07EB                     l2218:
  3963     07EB  3069               	movlw	105
  3964     07EC  0626               	xorwf	isValidCmd@aChar,w
  3965     07ED  1903               	btfsc	3,2
  3966     07EE  2FF0               	goto	u2111
  3967     07EF  2FF1               	goto	u2110
  3968     07F0                     u2111:
  3969     07F0  2FF7               	goto	l2222
  3970     07F1                     u2110:
  3971     07F1                     l2220:
  3972     07F1  3064               	movlw	100
  3973     07F2  0626               	xorwf	isValidCmd@aChar,w
  3974     07F3  1D03               	btfss	3,2
  3975     07F4  2FF6               	goto	u2121
  3976     07F5  2FF7               	goto	u2120
  3977     07F6                     u2121:
  3978     07F6  2FFC               	goto	l2226
  3979     07F7                     u2120:
  3980     07F7                     l2222:
  3981                           
  3982                           ;protocol.c: 61:       return 1;
  3983     07F7  3001               	movlw	1
  3984     07F8  00A4               	movwf	?_isValidCmd
  3985     07F9  3000               	movlw	0
  3986     07FA  00A5               	movwf	?_isValidCmd+1
  3987     07FB  2FFE               	goto	l206
  3988     07FC                     l2226:
  3989                           
  3990                           ;protocol.c: 62:    return 0;
  3991     07FC  01A4               	clrf	?_isValidCmd
  3992     07FD  01A5               	clrf	?_isValidCmd+1
  3993     07FE                     l206:
  3994     07FE  0008               	return
  3995     07FF                     __end_of_isValidCmd:
  3996                           
  3997                           	psect	text19
  3998     088E                     __ptext19:	
  3999 ;; *************** function _isValid *****************
  4000 ;; Defined at:
  4001 ;;		line 85 in file "protocol.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  aChar           1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  aChar           1    6[BANK0 ] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  2    4[BANK0 ] int 
  4008 ;; Registers used:
  4009 ;;		wreg, status,2, status,0
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       2       0       0       0
  4016 ;;      Locals:         0       1       0       0       0
  4017 ;;      Temps:          0       0       0       0       0
  4018 ;;      Totals:         0       3       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used: 1
  4021 ;; Hardware stack levels required when called: 4
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_pro_getMessage
  4026 ;; This function uses a non-reentrant model
  4027 ;;
  4028                           
  4029     088E                     _isValid:	
  4030                           ;psect for function _isValid
  4031                           
  4032                           
  4033                           ;incstack = 0
  4034                           ; Regs used in _isValid: [wreg+status,2+status,0]
  4035                           ;isValid@aChar stored from wreg
  4036     088E  1283               	bcf	3,5	;RP0=0, select bank0
  4037     088F  1303               	bcf	3,6	;RP1=0, select bank0
  4038     0890  00A6               	movwf	isValid@aChar
  4039     0891                     l2268:
  4040                           
  4041                           ;protocol.c: 86:    if (pro_ptr >= 10)
  4042     0891  300A               	movlw	10
  4043     0892  0268               	subwf	_pro_ptr,w
  4044     0893  1C03               	skipc
  4045     0894  2896               	goto	u2181
  4046     0895  2897               	goto	u2180
  4047     0896                     u2181:
  4048     0896  289A               	goto	l2274
  4049     0897                     u2180:
  4050     0897                     l2270:
  4051                           
  4052                           ;protocol.c: 87:       return 0;
  4053     0897  01A4               	clrf	?_isValid
  4054     0898  01A5               	clrf	?_isValid+1
  4055     0899  28B6               	goto	l221
  4056     089A                     l2274:
  4057                           
  4058                           ;protocol.c: 88:    if ( (aChar == '-') ||
  4059     089A  302D               	movlw	45
  4060     089B  0626               	xorwf	isValid@aChar,w
  4061     089C  1903               	btfsc	3,2
  4062     089D  289F               	goto	u2191
  4063     089E  28A0               	goto	u2190
  4064     089F                     u2191:
  4065     089F  28B2               	goto	l2282
  4066     08A0                     u2190:
  4067     08A0                     l2276:
  4068     08A0  302E               	movlw	46
  4069     08A1  0626               	xorwf	isValid@aChar,w
  4070     08A2  1903               	btfsc	3,2
  4071     08A3  28A5               	goto	u2201
  4072     08A4  28A6               	goto	u2200
  4073     08A5                     u2201:
  4074     08A5  28B2               	goto	l2282
  4075     08A6                     u2200:
  4076     08A6                     l2278:
  4077     08A6  3030               	movlw	48
  4078     08A7  0226               	subwf	isValid@aChar,w
  4079     08A8  1C03               	skipc
  4080     08A9  28AB               	goto	u2211
  4081     08AA  28AC               	goto	u2210
  4082     08AB                     u2211:
  4083     08AB  2897               	goto	l2270
  4084     08AC                     u2210:
  4085     08AC                     l2280:
  4086     08AC  303A               	movlw	58
  4087     08AD  0226               	subwf	isValid@aChar,w
  4088     08AE  1803               	skipnc
  4089     08AF  28B1               	goto	u2221
  4090     08B0  28B2               	goto	u2220
  4091     08B1                     u2221:
  4092     08B1  2897               	goto	l2270
  4093     08B2                     u2220:
  4094     08B2                     l2282:
  4095                           
  4096                           ;protocol.c: 91:       return 1;
  4097     08B2  3001               	movlw	1
  4098     08B3  00A4               	movwf	?_isValid
  4099     08B4  3000               	movlw	0
  4100     08B5  00A5               	movwf	?_isValid+1
  4101     08B6                     l221:
  4102     08B6  0008               	return
  4103     08B7                     __end_of_isValid:
  4104                           
  4105                           	psect	text20
  4106     16B7                     __ptext20:	
  4107 ;; *************** function _framingError *****************
  4108 ;; Defined at:
  4109 ;;		line 50 in file "protocol.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;		None
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;		None
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         0       0       0       0       0
  4124 ;;      Locals:         0       0       0       0       0
  4125 ;;      Temps:          0       0       0       0       0
  4126 ;;      Totals:         0       0       0       0       0
  4127 ;;Total ram usage:        0 bytes
  4128 ;; Hardware stack levels used: 1
  4129 ;; Hardware stack levels required when called: 5
  4130 ;; This function calls:
  4131 ;;		_cleanupBuffer
  4132 ;; This function is called by:
  4133 ;;		_pro_getMessage
  4134 ;; This function uses a non-reentrant model
  4135 ;;
  4136                           
  4137     16B7                     _framingError:	
  4138                           ;psect for function _framingError
  4139                           
  4140     16B7                     l2208:	
  4141                           ;incstack = 0
  4142 ;; hardware stack exceeded
  4143                           ; Regs used in _framingError: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4144                           
  4145                           
  4146                           ;protocol.c: 51:   pro_status = 0;
  4147     16B7  1283               	bcf	3,5	;RP0=0, select bank0
  4148     16B8  1303               	bcf	3,6	;RP1=0, select bank0
  4149     16B9  01E9               	clrf	_pro_status
  4150     16BA                     l2210:
  4151                           
  4152                           ;protocol.c: 52:   cleanupBuffer();
  4153     16BA  120A  158A  200F  160A  118A  	fcall	_cleanupBuffer
  4154     16BF                     l200:
  4155     16BF  0008               	return
  4156     16C0                     __end_of_framingError:
  4157                           
  4158                           	psect	text21
  4159     080F                     __ptext21:	
  4160 ;; *************** function _cleanupBuffer *****************
  4161 ;; Defined at:
  4162 ;;		line 38 in file "protocol.c"
  4163 ;; Parameters:    Size  Location     Type
  4164 ;;		None
  4165 ;; Auto vars:     Size  Location     Type
  4166 ;;  i               1    4[BANK0 ] unsigned char 
  4167 ;; Return value:  Size  Location     Type
  4168 ;;                  1    wreg      void 
  4169 ;; Registers used:
  4170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4171 ;; Tracked objects:
  4172 ;;		On entry : 0/0
  4173 ;;		On exit  : 0/0
  4174 ;;		Unchanged: 0/0
  4175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4176 ;;      Params:         0       0       0       0       0
  4177 ;;      Locals:         0       1       0       0       0
  4178 ;;      Temps:          0       0       0       0       0
  4179 ;;      Totals:         0       1       0       0       0
  4180 ;;Total ram usage:        1 bytes
  4181 ;; Hardware stack levels used: 1
  4182 ;; Hardware stack levels required when called: 4
  4183 ;; This function calls:
  4184 ;;		Nothing
  4185 ;; This function is called by:
  4186 ;;		_framingError
  4187 ;;		_pro_getMessage
  4188 ;;		_pro_init
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192     080F                     _cleanupBuffer:	
  4193                           ;psect for function _cleanupBuffer
  4194                           
  4195     080F                     l2108:	
  4196                           ;incstack = 0
  4197                           ; Regs used in _cleanupBuffer: [wreg-fsr0h+status,2+status,0+btemp+1]
  4198                           
  4199                           
  4200                           ;protocol.c: 39:   unsigned char i;;protocol.c: 40:   for (i=0; i<10; i++) {
  4201     080F  1283               	bcf	3,5	;RP0=0, select bank0
  4202     0810  1303               	bcf	3,6	;RP1=0, select bank0
  4203     0811  01A4               	clrf	cleanupBuffer@i
  4204     0812                     l2114:
  4205                           
  4206                           ;protocol.c: 41:     pro_incoming[i] = 0;
  4207     0812  0824               	movf	cleanupBuffer@i,w
  4208     0813  3EA5               	addlw	(low (_pro_incoming| (0+256)))& (0+255)
  4209     0814  0084               	movwf	4
  4210     0815  1783               	bsf	3,7	;select IRP bank3
  4211     0816  0180               	clrf	0
  4212                           
  4213                           ;protocol.c: 42:     completeMessage.value[i]=0;
  4214     0817  0824               	movf	cleanupBuffer@i,w
  4215     0818  3EB2               	addlw	(low ((_completeMessage| (0+256)+1)))& (0+255)
  4216     0819  0084               	movwf	4
  4217     081A  0180               	clrf	0
  4218     081B                     l2116:
  4219                           
  4220                           ;protocol.c: 43:   }
  4221     081B  3001               	movlw	1
  4222     081C  00FF               	movwf	btemp+1
  4223     081D  087F               	movf	btemp+1,w
  4224     081E  07A4               	addwf	cleanupBuffer@i,f
  4225     081F                     l2118:
  4226     081F  300A               	movlw	10
  4227     0820  0224               	subwf	cleanupBuffer@i,w
  4228     0821  1C03               	skipc
  4229     0822  2824               	goto	u1821
  4230     0823  2825               	goto	u1820
  4231     0824                     u1821:
  4232     0824  2812               	goto	l2114
  4233     0825                     u1820:
  4234     0825                     l2120:
  4235                           
  4236                           ;protocol.c: 44:   pro_incoming[10] = 0;
  4237     0825  1683               	bsf	3,5	;RP0=1, select bank3
  4238     0826  1703               	bsf	3,6	;RP1=1, select bank3
  4239     0827  01AF               	clrf	(_pro_incoming^(0+384)+10)
  4240                           
  4241                           ;protocol.c: 45:   pro_incoming[10 +1] = 0;
  4242     0828  01B0               	clrf	(_pro_incoming^(0+384)+11)
  4243                           
  4244                           ;protocol.c: 46:   pro_ptr = 0;
  4245     0829  1283               	bcf	3,5	;RP0=0, select bank0
  4246     082A  1303               	bcf	3,6	;RP1=0, select bank0
  4247     082B  01E8               	clrf	_pro_ptr
  4248     082C                     l197:
  4249     082C  0008               	return
  4250     082D                     __end_of_cleanupBuffer:
  4251                           
  4252                           	psect	text22
  4253     17E7                     __ptext22:	
  4254 ;; *************** function _clear_usart_errors *****************
  4255 ;; Defined at:
  4256 ;;		line 156 in file "serial.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;		None
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4270 ;;      Params:         0       0       0       0       0
  4271 ;;      Locals:         0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0
  4273 ;;      Totals:         0       0       0       0       0
  4274 ;;Total ram usage:        0 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 4
  4277 ;; This function calls:
  4278 ;;		Nothing
  4279 ;; This function is called by:
  4280 ;;		_pro_getMessage
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284     17E7                     _clear_usart_errors:	
  4285                           ;psect for function _clear_usart_errors
  4286                           
  4287     17E7                     l2314:	
  4288                           ;incstack = 0
  4289                           ; Regs used in _clear_usart_errors: [wreg]
  4290                           
  4291                           
  4292                           ;serial.c: 158:  if (OERR) { TXEN=0; TXEN=1; CREN=0; CREN=1; } if (FERR) { dummy=RCREG; 
      +                          TXEN=0; TXEN=1; };
  4293     17E7  1283               	bcf	3,5	;RP0=0, select bank0
  4294     17E8  1303               	bcf	3,6	;RP1=0, select bank0
  4295     17E9  1C98               	btfss	24,1	;volatile
  4296     17EA  2FEC               	goto	u2271
  4297     17EB  2FED               	goto	u2270
  4298     17EC                     u2271:
  4299     17EC  2FF5               	goto	l330
  4300     17ED                     u2270:
  4301     17ED                     l2316:
  4302     17ED  1683               	bsf	3,5	;RP0=1, select bank1
  4303     17EE  1303               	bcf	3,6	;RP1=0, select bank1
  4304     17EF  1298               	bcf	24,5	;volatile
  4305     17F0  1698               	bsf	24,5	;volatile
  4306     17F1  1283               	bcf	3,5	;RP0=0, select bank0
  4307     17F2  1303               	bcf	3,6	;RP1=0, select bank0
  4308     17F3  1218               	bcf	24,4	;volatile
  4309     17F4  1618               	bsf	24,4	;volatile
  4310     17F5                     l330:
  4311     17F5  1D18               	btfss	24,2	;volatile
  4312     17F6  2FF8               	goto	u2281
  4313     17F7  2FF9               	goto	u2280
  4314     17F8                     u2281:
  4315     17F8  2FFF               	goto	l332
  4316     17F9                     u2280:
  4317     17F9                     l2318:
  4318     17F9  081A               	movf	26,w	;volatile
  4319     17FA  00E7               	movwf	_dummy
  4320     17FB                     l2320:
  4321     17FB  1683               	bsf	3,5	;RP0=1, select bank1
  4322     17FC  1303               	bcf	3,6	;RP1=0, select bank1
  4323     17FD  1298               	bcf	24,5	;volatile
  4324     17FE                     l2322:
  4325     17FE  1698               	bsf	24,5	;volatile
  4326     17FF                     l332:
  4327     17FF  0008               	return
  4328     1800                     __end_of_clear_usart_errors:
  4329                           
  4330                           	psect	text23
  4331     16C0                     __ptext23:	
  4332 ;; *************** function _chkchr *****************
  4333 ;; Defined at:
  4334 ;;		line 149 in file "serial.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;		None
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      unsigned char 
  4341 ;; Registers used:
  4342 ;;		wreg
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4348 ;;      Params:         0       0       0       0       0
  4349 ;;      Locals:         0       0       0       0       0
  4350 ;;      Temps:          0       0       0       0       0
  4351 ;;      Totals:         0       0       0       0       0
  4352 ;;Total ram usage:        0 bytes
  4353 ;; Hardware stack levels used: 1
  4354 ;; Hardware stack levels required when called: 4
  4355 ;; This function calls:
  4356 ;;		Nothing
  4357 ;; This function is called by:
  4358 ;;		_pro_getMessage
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362     16C0                     _chkchr:	
  4363                           ;psect for function _chkchr
  4364                           
  4365     16C0                     l2290:	
  4366                           ;incstack = 0
  4367                           ; Regs used in _chkchr: [wreg]
  4368                           
  4369                           
  4370                           ;serial.c: 150:   if (RCIF) {
  4371     16C0  1283               	bcf	3,5	;RP0=0, select bank0
  4372     16C1  1303               	bcf	3,6	;RP1=0, select bank0
  4373     16C2  1E8C               	btfss	12,5	;volatile
  4374     16C3  2EC5               	goto	u2231
  4375     16C4  2EC6               	goto	u2230
  4376     16C5                     u2231:
  4377     16C5  2EC8               	goto	l2296
  4378     16C6                     u2230:
  4379     16C6                     l2292:
  4380                           
  4381                           ;serial.c: 151:     return RCREG;
  4382     16C6  081A               	movf	26,w	;volatile
  4383     16C7  2EC9               	goto	l327
  4384     16C8                     l2296:
  4385                           
  4386                           ;serial.c: 153:   return 255;
  4387     16C8  30FF               	movlw	255
  4388     16C9                     l327:
  4389     16C9  0008               	return
  4390     16CA                     __end_of_chkchr:
  4391                           
  4392                           	psect	text24
  4393     16E0                     __ptext24:	
  4394 ;; *************** function _addToIncomingBuffer *****************
  4395 ;; Defined at:
  4396 ;;		line 65 in file "protocol.c"
  4397 ;; Parameters:    Size  Location     Type
  4398 ;;  aChar           1    wreg     unsigned char 
  4399 ;; Auto vars:     Size  Location     Type
  4400 ;;  aChar           1    4[BANK0 ] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      void 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4410 ;;      Params:         0       0       0       0       0
  4411 ;;      Locals:         0       1       0       0       0
  4412 ;;      Temps:          0       0       0       0       0
  4413 ;;      Totals:         0       1       0       0       0
  4414 ;;Total ram usage:        1 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 4
  4417 ;; This function calls:
  4418 ;;		Nothing
  4419 ;; This function is called by:
  4420 ;;		_pro_getMessage
  4421 ;; This function uses a non-reentrant model
  4422 ;;
  4423                           
  4424     16E0                     _addToIncomingBuffer:	
  4425                           ;psect for function _addToIncomingBuffer
  4426                           
  4427                           
  4428                           ;incstack = 0
  4429                           ; Regs used in _addToIncomingBuffer: [wreg-fsr0h+status,2+status,0+btemp+1]
  4430                           ;addToIncomingBuffer@aChar stored from wreg
  4431     16E0  1283               	bcf	3,5	;RP0=0, select bank0
  4432     16E1  1303               	bcf	3,6	;RP1=0, select bank0
  4433     16E2  00A4               	movwf	addToIncomingBuffer@aChar
  4434     16E3                     l2230:
  4435                           
  4436                           ;protocol.c: 66:   pro_incoming[pro_ptr] = aChar;
  4437     16E3  0868               	movf	_pro_ptr,w
  4438     16E4  3EA5               	addlw	(low (_pro_incoming| (0+256)))& (0+255)
  4439     16E5  0084               	movwf	4
  4440     16E6  0824               	movf	addToIncomingBuffer@aChar,w
  4441     16E7  1783               	bsf	3,7	;select IRP bank3
  4442     16E8  0080               	movwf	0
  4443     16E9                     l2232:
  4444                           
  4445                           ;protocol.c: 67:   pro_ptr++;
  4446     16E9  3001               	movlw	1
  4447     16EA  00FF               	movwf	btemp+1
  4448     16EB  087F               	movf	btemp+1,w
  4449     16EC  07E8               	addwf	_pro_ptr,f
  4450     16ED                     l209:
  4451     16ED  0008               	return
  4452     16EE                     __end_of_addToIncomingBuffer:
  4453                           
  4454                           	psect	text25
  4455     17CE                     __ptext25:	
  4456 ;; *************** function _pos_setCurrentPosition *****************
  4457 ;; Defined at:
  4458 ;;		line 48 in file "/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  pos             4    4[BANK0 ] long 
  4461 ;; Auto vars:     Size  Location     Type
  4462 ;;		None
  4463 ;; Return value:  Size  Location     Type
  4464 ;;                  1    wreg      void 
  4465 ;; Registers used:
  4466 ;;		wreg
  4467 ;; Tracked objects:
  4468 ;;		On entry : 0/0
  4469 ;;		On exit  : 0/0
  4470 ;;		Unchanged: 0/0
  4471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4472 ;;      Params:         0       4       0       0       0
  4473 ;;      Locals:         0       0       0       0       0
  4474 ;;      Temps:          0       0       0       0       0
  4475 ;;      Totals:         0       4       0       0       0
  4476 ;;Total ram usage:        4 bytes
  4477 ;; Hardware stack levels used: 1
  4478 ;; Hardware stack levels required when called: 4
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_protocol_task
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486     17CE                     _pos_setCurrentPosition:	
  4487                           ;psect for function _pos_setCurrentPosition
  4488                           
  4489     17CE                     l2792:	
  4490                           ;incstack = 0
  4491                           ; Regs used in _pos_setCurrentPosition: [wreg]
  4492                           
  4493                           
  4494                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 49:   pos_cu
      +                          rrentPosition = pos;
  4495     17CE  1283               	bcf	3,5	;RP0=0, select bank0
  4496     17CF  1303               	bcf	3,6	;RP1=0, select bank0
  4497     17D0  0827               	movf	pos_setCurrentPosition@pos+3,w
  4498     17D1  1683               	bsf	3,5	;RP0=1, select bank1
  4499     17D2  1303               	bcf	3,6	;RP1=0, select bank1
  4500     17D3  00A3               	movwf	(_pos_currentPosition+3)^(0+128)	;volatile
  4501     17D4  1283               	bcf	3,5	;RP0=0, select bank0
  4502     17D5  1303               	bcf	3,6	;RP1=0, select bank0
  4503     17D6  0826               	movf	pos_setCurrentPosition@pos+2,w
  4504     17D7  1683               	bsf	3,5	;RP0=1, select bank1
  4505     17D8  1303               	bcf	3,6	;RP1=0, select bank1
  4506     17D9  00A2               	movwf	(_pos_currentPosition+2)^(0+128)	;volatile
  4507     17DA  1283               	bcf	3,5	;RP0=0, select bank0
  4508     17DB  1303               	bcf	3,6	;RP1=0, select bank0
  4509     17DC  0825               	movf	pos_setCurrentPosition@pos+1,w
  4510     17DD  1683               	bsf	3,5	;RP0=1, select bank1
  4511     17DE  1303               	bcf	3,6	;RP1=0, select bank1
  4512     17DF  00A1               	movwf	(_pos_currentPosition+1)^(0+128)	;volatile
  4513     17E0  1283               	bcf	3,5	;RP0=0, select bank0
  4514     17E1  1303               	bcf	3,6	;RP1=0, select bank0
  4515     17E2  0824               	movf	pos_setCurrentPosition@pos,w
  4516     17E3  1683               	bsf	3,5	;RP0=1, select bank1
  4517     17E4  1303               	bcf	3,6	;RP1=0, select bank1
  4518     17E5  00A0               	movwf	_pos_currentPosition^(0+128)	;volatile
  4519     17E6                     l559:
  4520     17E6  0008               	return
  4521     17E7                     __end_of_pos_setCurrentPosition:
  4522                           
  4523                           	psect	text26
  4524     17B5                     __ptext26:	
  4525 ;; *************** function _pid_setProportionalGain *****************
  4526 ;; Defined at:
  4527 ;;		line 95 in file "pid.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  gain            4    4[BANK0 ] long 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;		None
  4532 ;; Return value:  Size  Location     Type
  4533 ;;                  1    wreg      void 
  4534 ;; Registers used:
  4535 ;;		wreg
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4541 ;;      Params:         0       4       0       0       0
  4542 ;;      Locals:         0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0
  4544 ;;      Totals:         0       4       0       0       0
  4545 ;;Total ram usage:        4 bytes
  4546 ;; Hardware stack levels used: 1
  4547 ;; Hardware stack levels required when called: 4
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_protocol_task
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555     17B5                     _pid_setProportionalGain:	
  4556                           ;psect for function _pid_setProportionalGain
  4557                           
  4558     17B5                     l2656:	
  4559                           ;incstack = 0
  4560                           ; Regs used in _pid_setProportionalGain: [wreg]
  4561                           
  4562                           
  4563                           ;pid.c: 96:   kProportional = gain;
  4564     17B5  1283               	bcf	3,5	;RP0=0, select bank0
  4565     17B6  1303               	bcf	3,6	;RP1=0, select bank0
  4566     17B7  0827               	movf	pid_setProportionalGain@gain+3,w
  4567     17B8  1683               	bsf	3,5	;RP0=1, select bank3
  4568     17B9  1703               	bsf	3,6	;RP1=1, select bank3
  4569     17BA  00D2               	movwf	(_kProportional+3)^(0+384)
  4570     17BB  1283               	bcf	3,5	;RP0=0, select bank0
  4571     17BC  1303               	bcf	3,6	;RP1=0, select bank0
  4572     17BD  0826               	movf	pid_setProportionalGain@gain+2,w
  4573     17BE  1683               	bsf	3,5	;RP0=1, select bank3
  4574     17BF  1703               	bsf	3,6	;RP1=1, select bank3
  4575     17C0  00D1               	movwf	(_kProportional+2)^(0+384)
  4576     17C1  1283               	bcf	3,5	;RP0=0, select bank0
  4577     17C2  1303               	bcf	3,6	;RP1=0, select bank0
  4578     17C3  0825               	movf	pid_setProportionalGain@gain+1,w
  4579     17C4  1683               	bsf	3,5	;RP0=1, select bank3
  4580     17C5  1703               	bsf	3,6	;RP1=1, select bank3
  4581     17C6  00D0               	movwf	(_kProportional+1)^(0+384)
  4582     17C7  1283               	bcf	3,5	;RP0=0, select bank0
  4583     17C8  1303               	bcf	3,6	;RP1=0, select bank0
  4584     17C9  0824               	movf	pid_setProportionalGain@gain,w
  4585     17CA  1683               	bsf	3,5	;RP0=1, select bank3
  4586     17CB  1703               	bsf	3,6	;RP1=1, select bank3
  4587     17CC  00CF               	movwf	_kProportional^(0+384)
  4588     17CD                     l102:
  4589     17CD  0008               	return
  4590     17CE                     __end_of_pid_setProportionalGain:
  4591                           
  4592                           	psect	text27
  4593     179C                     __ptext27:	
  4594 ;; *************** function _pid_setPoint *****************
  4595 ;; Defined at:
  4596 ;;		line 83 in file "pid.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  position        4    4[BANK0 ] long 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4610 ;;      Params:         0       4       0       0       0
  4611 ;;      Locals:         0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0
  4613 ;;      Totals:         0       4       0       0       0
  4614 ;;Total ram usage:        4 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 4
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_protocol_task
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624     179C                     _pid_setPoint:	
  4625                           ;psect for function _pid_setPoint
  4626                           
  4627     179C                     l2650:	
  4628                           ;incstack = 0
  4629                           ; Regs used in _pid_setPoint: [wreg]
  4630                           
  4631                           
  4632                           ;pid.c: 84:    setPoint = position;
  4633     179C  1283               	bcf	3,5	;RP0=0, select bank0
  4634     179D  1303               	bcf	3,6	;RP1=0, select bank0
  4635     179E  0827               	movf	pid_setPoint@position+3,w
  4636     179F  1683               	bsf	3,5	;RP0=1, select bank1
  4637     17A0  1303               	bcf	3,6	;RP1=0, select bank1
  4638     17A1  00CB               	movwf	(_setPoint+3)^(0+128)
  4639     17A2  1283               	bcf	3,5	;RP0=0, select bank0
  4640     17A3  1303               	bcf	3,6	;RP1=0, select bank0
  4641     17A4  0826               	movf	pid_setPoint@position+2,w
  4642     17A5  1683               	bsf	3,5	;RP0=1, select bank1
  4643     17A6  1303               	bcf	3,6	;RP1=0, select bank1
  4644     17A7  00CA               	movwf	(_setPoint+2)^(0+128)
  4645     17A8  1283               	bcf	3,5	;RP0=0, select bank0
  4646     17A9  1303               	bcf	3,6	;RP1=0, select bank0
  4647     17AA  0825               	movf	pid_setPoint@position+1,w
  4648     17AB  1683               	bsf	3,5	;RP0=1, select bank1
  4649     17AC  1303               	bcf	3,6	;RP1=0, select bank1
  4650     17AD  00C9               	movwf	(_setPoint+1)^(0+128)
  4651     17AE  1283               	bcf	3,5	;RP0=0, select bank0
  4652     17AF  1303               	bcf	3,6	;RP1=0, select bank0
  4653     17B0  0824               	movf	pid_setPoint@position,w
  4654     17B1  1683               	bsf	3,5	;RP0=1, select bank1
  4655     17B2  1303               	bcf	3,6	;RP1=0, select bank1
  4656     17B3  00C8               	movwf	_setPoint^(0+128)
  4657     17B4                     l93:
  4658     17B4  0008               	return
  4659     17B5                     __end_of_pid_setPoint:
  4660                           
  4661                           	psect	text28
  4662     1783                     __ptext28:	
  4663 ;; *************** function _pid_setIntegralGain *****************
  4664 ;; Defined at:
  4665 ;;		line 91 in file "pid.c"
  4666 ;; Parameters:    Size  Location     Type
  4667 ;;  gain            4    4[BANK0 ] long 
  4668 ;; Auto vars:     Size  Location     Type
  4669 ;;		None
  4670 ;; Return value:  Size  Location     Type
  4671 ;;                  1    wreg      void 
  4672 ;; Registers used:
  4673 ;;		wreg
  4674 ;; Tracked objects:
  4675 ;;		On entry : 0/0
  4676 ;;		On exit  : 0/0
  4677 ;;		Unchanged: 0/0
  4678 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4679 ;;      Params:         0       4       0       0       0
  4680 ;;      Locals:         0       0       0       0       0
  4681 ;;      Temps:          0       0       0       0       0
  4682 ;;      Totals:         0       4       0       0       0
  4683 ;;Total ram usage:        4 bytes
  4684 ;; Hardware stack levels used: 1
  4685 ;; Hardware stack levels required when called: 4
  4686 ;; This function calls:
  4687 ;;		Nothing
  4688 ;; This function is called by:
  4689 ;;		_protocol_task
  4690 ;; This function uses a non-reentrant model
  4691 ;;
  4692                           
  4693     1783                     _pid_setIntegralGain:	
  4694                           ;psect for function _pid_setIntegralGain
  4695                           
  4696     1783                     l2654:	
  4697                           ;incstack = 0
  4698                           ; Regs used in _pid_setIntegralGain: [wreg]
  4699                           
  4700                           
  4701                           ;pid.c: 92:   kIntegral = gain;
  4702     1783  1283               	bcf	3,5	;RP0=0, select bank0
  4703     1784  1303               	bcf	3,6	;RP1=0, select bank0
  4704     1785  0827               	movf	pid_setIntegralGain@gain+3,w
  4705     1786  1683               	bsf	3,5	;RP0=1, select bank3
  4706     1787  1703               	bsf	3,6	;RP1=1, select bank3
  4707     1788  00CE               	movwf	(_kIntegral+3)^(0+384)
  4708     1789  1283               	bcf	3,5	;RP0=0, select bank0
  4709     178A  1303               	bcf	3,6	;RP1=0, select bank0
  4710     178B  0826               	movf	pid_setIntegralGain@gain+2,w
  4711     178C  1683               	bsf	3,5	;RP0=1, select bank3
  4712     178D  1703               	bsf	3,6	;RP1=1, select bank3
  4713     178E  00CD               	movwf	(_kIntegral+2)^(0+384)
  4714     178F  1283               	bcf	3,5	;RP0=0, select bank0
  4715     1790  1303               	bcf	3,6	;RP1=0, select bank0
  4716     1791  0825               	movf	pid_setIntegralGain@gain+1,w
  4717     1792  1683               	bsf	3,5	;RP0=1, select bank3
  4718     1793  1703               	bsf	3,6	;RP1=1, select bank3
  4719     1794  00CC               	movwf	(_kIntegral+1)^(0+384)
  4720     1795  1283               	bcf	3,5	;RP0=0, select bank0
  4721     1796  1303               	bcf	3,6	;RP1=0, select bank0
  4722     1797  0824               	movf	pid_setIntegralGain@gain,w
  4723     1798  1683               	bsf	3,5	;RP0=1, select bank3
  4724     1799  1703               	bsf	3,6	;RP1=1, select bank3
  4725     179A  00CB               	movwf	_kIntegral^(0+384)
  4726     179B                     l99:
  4727     179B  0008               	return
  4728     179C                     __end_of_pid_setIntegralGain:
  4729                           
  4730                           	psect	text29
  4731     176A                     __ptext29:	
  4732 ;; *************** function _pid_setDerivativeGain *****************
  4733 ;; Defined at:
  4734 ;;		line 87 in file "pid.c"
  4735 ;; Parameters:    Size  Location     Type
  4736 ;;  gain            4    4[BANK0 ] long 
  4737 ;; Auto vars:     Size  Location     Type
  4738 ;;		None
  4739 ;; Return value:  Size  Location     Type
  4740 ;;                  1    wreg      void 
  4741 ;; Registers used:
  4742 ;;		wreg
  4743 ;; Tracked objects:
  4744 ;;		On entry : 0/0
  4745 ;;		On exit  : 0/0
  4746 ;;		Unchanged: 0/0
  4747 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4748 ;;      Params:         0       4       0       0       0
  4749 ;;      Locals:         0       0       0       0       0
  4750 ;;      Temps:          0       0       0       0       0
  4751 ;;      Totals:         0       4       0       0       0
  4752 ;;Total ram usage:        4 bytes
  4753 ;; Hardware stack levels used: 1
  4754 ;; Hardware stack levels required when called: 4
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_protocol_task
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762     176A                     _pid_setDerivativeGain:	
  4763                           ;psect for function _pid_setDerivativeGain
  4764                           
  4765     176A                     l2652:	
  4766                           ;incstack = 0
  4767                           ; Regs used in _pid_setDerivativeGain: [wreg]
  4768                           
  4769                           
  4770                           ;pid.c: 88:   kDerivative = gain;
  4771     176A  1283               	bcf	3,5	;RP0=0, select bank0
  4772     176B  1303               	bcf	3,6	;RP1=0, select bank0
  4773     176C  0827               	movf	pid_setDerivativeGain@gain+3,w
  4774     176D  1683               	bsf	3,5	;RP0=1, select bank1
  4775     176E  1303               	bcf	3,6	;RP1=0, select bank1
  4776     176F  00BB               	movwf	(_kDerivative+3)^(0+128)
  4777     1770  1283               	bcf	3,5	;RP0=0, select bank0
  4778     1771  1303               	bcf	3,6	;RP1=0, select bank0
  4779     1772  0826               	movf	pid_setDerivativeGain@gain+2,w
  4780     1773  1683               	bsf	3,5	;RP0=1, select bank1
  4781     1774  1303               	bcf	3,6	;RP1=0, select bank1
  4782     1775  00BA               	movwf	(_kDerivative+2)^(0+128)
  4783     1776  1283               	bcf	3,5	;RP0=0, select bank0
  4784     1777  1303               	bcf	3,6	;RP1=0, select bank0
  4785     1778  0825               	movf	pid_setDerivativeGain@gain+1,w
  4786     1779  1683               	bsf	3,5	;RP0=1, select bank1
  4787     177A  1303               	bcf	3,6	;RP1=0, select bank1
  4788     177B  00B9               	movwf	(_kDerivative+1)^(0+128)
  4789     177C  1283               	bcf	3,5	;RP0=0, select bank0
  4790     177D  1303               	bcf	3,6	;RP1=0, select bank0
  4791     177E  0824               	movf	pid_setDerivativeGain@gain,w
  4792     177F  1683               	bsf	3,5	;RP0=1, select bank1
  4793     1780  1303               	bcf	3,6	;RP1=0, select bank1
  4794     1781  00B8               	movwf	_kDerivative^(0+128)
  4795     1782                     l96:
  4796     1782  0008               	return
  4797     1783                     __end_of_pid_setDerivativeGain:
  4798                           
  4799                           	psect	text30
  4800     16FF                     __ptext30:	
  4801 ;; *************** function _pid_clearError *****************
  4802 ;; Defined at:
  4803 ;;		line 99 in file "pid.c"
  4804 ;; Parameters:    Size  Location     Type
  4805 ;;		None
  4806 ;; Auto vars:     Size  Location     Type
  4807 ;;		None
  4808 ;; Return value:  Size  Location     Type
  4809 ;;                  1    wreg      void 
  4810 ;; Registers used:
  4811 ;;		wreg
  4812 ;; Tracked objects:
  4813 ;;		On entry : 0/0
  4814 ;;		On exit  : 0/0
  4815 ;;		Unchanged: 0/0
  4816 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4817 ;;      Params:         0       0       0       0       0
  4818 ;;      Locals:         0       0       0       0       0
  4819 ;;      Temps:          0       0       0       0       0
  4820 ;;      Totals:         0       0       0       0       0
  4821 ;;Total ram usage:        0 bytes
  4822 ;; Hardware stack levels used: 1
  4823 ;; Hardware stack levels required when called: 4
  4824 ;; This function calls:
  4825 ;;		Nothing
  4826 ;; This function is called by:
  4827 ;;		_protocol_task
  4828 ;; This function uses a non-reentrant model
  4829 ;;
  4830                           
  4831     16FF                     _pid_clearError:	
  4832                           ;psect for function _pid_clearError
  4833                           
  4834     16FF                     l2658:	
  4835                           ;incstack = 0
  4836                           ; Regs used in _pid_clearError: [wreg]
  4837                           
  4838                           
  4839                           ;pid.c: 100:   integralError = 0.0f;
  4840     16FF  3000               	movlw	0
  4841     1700  1683               	bsf	3,5	;RP0=1, select bank1
  4842     1701  1303               	bcf	3,6	;RP1=0, select bank1
  4843     1702  00C3               	movwf	(_integralError+3)^(0+128)
  4844     1703  3000               	movlw	0
  4845     1704  00C2               	movwf	(_integralError+2)^(0+128)
  4846     1705  3000               	movlw	0
  4847     1706  00C1               	movwf	(_integralError+1)^(0+128)
  4848     1707  3000               	movlw	0
  4849     1708  00C0               	movwf	_integralError^(0+128)
  4850                           
  4851                           ;pid.c: 101:   previousError = 0.0f;
  4852     1709  3000               	movlw	0
  4853     170A  00BF               	movwf	(_previousError+3)^(0+128)
  4854     170B  3000               	movlw	0
  4855     170C  00BE               	movwf	(_previousError+2)^(0+128)
  4856     170D  3000               	movlw	0
  4857     170E  00BD               	movwf	(_previousError+1)^(0+128)
  4858     170F  3000               	movlw	0
  4859     1710  00BC               	movwf	_previousError^(0+128)
  4860     1711                     l105:
  4861     1711  0008               	return
  4862     1712                     __end_of_pid_clearError:
  4863                           
  4864                           	psect	text31
  4865     0372                     __ptext31:	
  4866 ;; *************** function _convertToReal *****************
  4867 ;; Defined at:
  4868 ;;		line 13 in file "utils.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;  chars           1    wreg     PTR unsigned char 
  4871 ;;		 -> message(11), 
  4872 ;; Auto vars:     Size  Location     Type
  4873 ;;  chars           1   17[BANK1 ] PTR unsigned char 
  4874 ;;		 -> message(11), 
  4875 ;;  value           4   13[BANK1 ] long 
  4876 ;;  potDez          4    9[BANK1 ] long 
  4877 ;;  temp            4    5[BANK1 ] long 
  4878 ;;  signal          4    0[BANK1 ] long 
  4879 ;;  i               1   18[BANK1 ] unsigned char 
  4880 ;;  decimal         1    4[BANK1 ] unsigned char 
  4881 ;; Return value:  Size  Location     Type
  4882 ;;                  4   58[BANK0 ] long 
  4883 ;; Registers used:
  4884 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4885 ;; Tracked objects:
  4886 ;;		On entry : 0/0
  4887 ;;		On exit  : 0/0
  4888 ;;		Unchanged: 0/0
  4889 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4890 ;;      Params:         0       4       0       0       0
  4891 ;;      Locals:         0       0      19       0       0
  4892 ;;      Temps:          0       5       0       0       0
  4893 ;;      Totals:         0       9      19       0       0
  4894 ;;Total ram usage:       28 bytes
  4895 ;; Hardware stack levels used: 1
  4896 ;; Hardware stack levels required when called: 6
  4897 ;; This function calls:
  4898 ;;		___altoft
  4899 ;;		___ftadd
  4900 ;;		___ftmul
  4901 ;;		___fttol
  4902 ;;		___lmul
  4903 ;; This function is called by:
  4904 ;;		_protocol_task
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           
  4908     0372                     _convertToReal:	
  4909                           ;psect for function _convertToReal
  4910                           
  4911                           
  4912                           ;incstack = 0
  4913 ;; hardware stack exceeded
  4914                           ; Regs used in _convertToReal: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4915                           ;convertToReal@chars stored from wreg
  4916     0372  1683               	bsf	3,5	;RP0=1, select bank1
  4917     0373  1303               	bcf	3,6	;RP1=0, select bank1
  4918     0374  00E3               	movwf	convertToReal@chars^(0+128)
  4919     0375                     l2742:
  4920                           
  4921                           ;utils.c: 14:   long value = 0.0;
  4922     0375  3000               	movlw	0
  4923     0376  00E2               	movwf	(convertToReal@value+3)^(0+128)
  4924     0377  3000               	movlw	0
  4925     0378  00E1               	movwf	(convertToReal@value+2)^(0+128)
  4926     0379  3000               	movlw	0
  4927     037A  00E0               	movwf	(convertToReal@value+1)^(0+128)
  4928     037B  3000               	movlw	0
  4929     037C  00DF               	movwf	convertToReal@value^(0+128)
  4930                           
  4931                           ;utils.c: 16:   long potDez = 1.0;
  4932     037D  3000               	movlw	0
  4933     037E  00DE               	movwf	(convertToReal@potDez+3)^(0+128)
  4934     037F  3000               	movlw	0
  4935     0380  00DD               	movwf	(convertToReal@potDez+2)^(0+128)
  4936     0381  3000               	movlw	0
  4937     0382  00DC               	movwf	(convertToReal@potDez+1)^(0+128)
  4938     0383  3001               	movlw	1
  4939     0384  00DB               	movwf	convertToReal@potDez^(0+128)
  4940                           
  4941                           ;utils.c: 17:   long signal = 1.0;
  4942     0385  3000               	movlw	0
  4943     0386  00D5               	movwf	(convertToReal@signal+3)^(0+128)
  4944     0387  3000               	movlw	0
  4945     0388  00D4               	movwf	(convertToReal@signal+2)^(0+128)
  4946     0389  3000               	movlw	0
  4947     038A  00D3               	movwf	(convertToReal@signal+1)^(0+128)
  4948     038B  3001               	movlw	1
  4949     038C  00D2               	movwf	convertToReal@signal^(0+128)
  4950     038D                     l2744:
  4951                           
  4952                           ;utils.c: 18:   unsigned char decimal = 0;
  4953     038D  01D6               	clrf	convertToReal@decimal^(0+128)
  4954     038E                     l2746:
  4955                           
  4956                           ;utils.c: 19:   unsigned char i = 0;
  4957     038E  01E4               	clrf	convertToReal@i^(0+128)
  4958     038F                     l2748:
  4959                           
  4960                           ;utils.c: 21:   if (chars[0] == '-') {
  4961     038F  0863               	movf	convertToReal@chars^(0+128),w
  4962     0390  0084               	movwf	4
  4963     0391  302D               	movlw	45
  4964     0392  1783               	bsf	3,7	;select IRP bank2
  4965     0393  0600               	xorwf	0,w
  4966     0394  1D03               	btfss	3,2
  4967     0395  2B97               	goto	u3131
  4968     0396  2B98               	goto	u3130
  4969     0397                     u3131:
  4970     0397  2BA2               	goto	l426
  4971     0398                     u3130:
  4972     0398                     l2750:
  4973                           
  4974                           ;utils.c: 22:      signal = -1.0;
  4975     0398  30FF               	movlw	255
  4976     0399  00D5               	movwf	(convertToReal@signal+3)^(0+128)
  4977     039A  30FF               	movlw	255
  4978     039B  00D4               	movwf	(convertToReal@signal+2)^(0+128)
  4979     039C  30FF               	movlw	255
  4980     039D  00D3               	movwf	(convertToReal@signal+1)^(0+128)
  4981     039E  30FF               	movlw	255
  4982     039F  00D2               	movwf	convertToReal@signal^(0+128)
  4983     03A0                     l2752:
  4984                           
  4985                           ;utils.c: 23:      i = 1;
  4986     03A0  01E4               	clrf	convertToReal@i^(0+128)
  4987     03A1  0AE4               	incf	convertToReal@i^(0+128),f
  4988     03A2                     l426:	
  4989                           ;utils.c: 24:   }
  4990                           
  4991                           
  4992                           ;utils.c: 25:   for (; i<10; i++) {
  4993     03A2  300A               	movlw	10
  4994     03A3  0264               	subwf	convertToReal@i^(0+128),w
  4995     03A4  1C03               	skipc
  4996     03A5  2BA7               	goto	u3141
  4997     03A6  2BA8               	goto	u3140
  4998     03A7                     u3141:
  4999     03A7  2BA9               	goto	l2756
  5000     03A8                     u3140:
  5001     03A8  2D7F               	goto	l2788
  5002     03A9                     l2756:
  5003                           
  5004                           ;utils.c: 26:     if (chars[i] == 0)
  5005     03A9  0864               	movf	convertToReal@i^(0+128),w
  5006     03AA  0763               	addwf	convertToReal@chars^(0+128),w
  5007     03AB  1283               	bcf	3,5	;RP0=0, select bank0
  5008     03AC  1303               	bcf	3,6	;RP1=0, select bank0
  5009     03AD  00DE               	movwf	??_convertToReal
  5010     03AE  085E               	movf	??_convertToReal,w
  5011     03AF  0084               	movwf	4
  5012     03B0  1783               	bsf	3,7	;select IRP bank2
  5013     03B1  0800               	movf	0,w
  5014     03B2  1D03               	btfss	3,2
  5015     03B3  2BB5               	goto	u3151
  5016     03B4  2BB6               	goto	u3150
  5017     03B5                     u3151:
  5018     03B5  2BB7               	goto	l2760
  5019     03B6                     u3150:
  5020     03B6  2D7F               	goto	l2788
  5021     03B7                     l2760:
  5022                           
  5023                           ;utils.c: 28:     if ( (chars[i] < '0') &&
  5024     03B7  1683               	bsf	3,5	;RP0=1, select bank1
  5025     03B8  1303               	bcf	3,6	;RP1=0, select bank1
  5026     03B9  0864               	movf	convertToReal@i^(0+128),w
  5027     03BA  0763               	addwf	convertToReal@chars^(0+128),w
  5028     03BB  1283               	bcf	3,5	;RP0=0, select bank0
  5029     03BC  1303               	bcf	3,6	;RP1=0, select bank0
  5030     03BD  00DE               	movwf	??_convertToReal
  5031     03BE  085E               	movf	??_convertToReal,w
  5032     03BF  0084               	movwf	4
  5033     03C0  3030               	movlw	48
  5034     03C1  0200               	subwf	0,w
  5035     03C2  1803               	skipnc
  5036     03C3  2BC5               	goto	u3161
  5037     03C4  2BC6               	goto	u3160
  5038     03C5                     u3161:
  5039     03C5  2BE5               	goto	l2768
  5040     03C6                     u3160:
  5041     03C6                     l2762:
  5042     03C6  1683               	bsf	3,5	;RP0=1, select bank1
  5043     03C7  1303               	bcf	3,6	;RP1=0, select bank1
  5044     03C8  0864               	movf	convertToReal@i^(0+128),w
  5045     03C9  0763               	addwf	convertToReal@chars^(0+128),w
  5046     03CA  1283               	bcf	3,5	;RP0=0, select bank0
  5047     03CB  1303               	bcf	3,6	;RP1=0, select bank0
  5048     03CC  00DE               	movwf	??_convertToReal
  5049     03CD  085E               	movf	??_convertToReal,w
  5050     03CE  0084               	movwf	4
  5051     03CF  303A               	movlw	58
  5052     03D0  0200               	subwf	0,w
  5053     03D1  1C03               	skipc
  5054     03D2  2BD4               	goto	u3171
  5055     03D3  2BD5               	goto	u3170
  5056     03D4                     u3171:
  5057     03D4  2BE5               	goto	l2768
  5058     03D5                     u3170:
  5059     03D5                     l2764:
  5060     03D5  1683               	bsf	3,5	;RP0=1, select bank1
  5061     03D6  1303               	bcf	3,6	;RP1=0, select bank1
  5062     03D7  0864               	movf	convertToReal@i^(0+128),w
  5063     03D8  0763               	addwf	convertToReal@chars^(0+128),w
  5064     03D9  1283               	bcf	3,5	;RP0=0, select bank0
  5065     03DA  1303               	bcf	3,6	;RP1=0, select bank0
  5066     03DB  00DE               	movwf	??_convertToReal
  5067     03DC  085E               	movf	??_convertToReal,w
  5068     03DD  0084               	movwf	4
  5069     03DE  302E               	movlw	46
  5070     03DF  0600               	xorwf	0,w
  5071     03E0  1903               	btfsc	3,2
  5072     03E1  2BE3               	goto	u3181
  5073     03E2  2BE4               	goto	u3180
  5074     03E3                     u3181:
  5075     03E3  2BE5               	goto	l2768
  5076     03E4                     u3180:
  5077     03E4  2D7F               	goto	l2788
  5078     03E5                     l2768:
  5079                           
  5080                           ;utils.c: 33:     if (chars[i] == '.') {
  5081     03E5  1683               	bsf	3,5	;RP0=1, select bank1
  5082     03E6  1303               	bcf	3,6	;RP1=0, select bank1
  5083     03E7  0864               	movf	convertToReal@i^(0+128),w
  5084     03E8  0763               	addwf	convertToReal@chars^(0+128),w
  5085     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  5086     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  5087     03EB  00DE               	movwf	??_convertToReal
  5088     03EC  085E               	movf	??_convertToReal,w
  5089     03ED  0084               	movwf	4
  5090     03EE  302E               	movlw	46
  5091     03EF  0600               	xorwf	0,w
  5092     03F0  1D03               	btfss	3,2
  5093     03F1  2BF3               	goto	u3191
  5094     03F2  2BF4               	goto	u3190
  5095     03F3                     u3191:
  5096     03F3  2C01               	goto	l2774
  5097     03F4                     u3190:
  5098     03F4                     l2770:
  5099                           
  5100                           ;utils.c: 34:        potDez = 0.1;
  5101     03F4  3000               	movlw	0
  5102     03F5  1683               	bsf	3,5	;RP0=1, select bank1
  5103     03F6  1303               	bcf	3,6	;RP1=0, select bank1
  5104     03F7  00DE               	movwf	(convertToReal@potDez+3)^(0+128)
  5105     03F8  3000               	movlw	0
  5106     03F9  00DD               	movwf	(convertToReal@potDez+2)^(0+128)
  5107     03FA  3000               	movlw	0
  5108     03FB  00DC               	movwf	(convertToReal@potDez+1)^(0+128)
  5109     03FC  3000               	movlw	0
  5110     03FD  00DB               	movwf	convertToReal@potDez^(0+128)
  5111     03FE                     l2772:
  5112                           
  5113                           ;utils.c: 35:        decimal = 1;
  5114     03FE  01D6               	clrf	convertToReal@decimal^(0+128)
  5115     03FF  0AD6               	incf	convertToReal@decimal^(0+128),f
  5116                           
  5117                           ;utils.c: 36:     } else {
  5118     0400  2D7A               	goto	l2784
  5119     0401                     l2774:
  5120                           
  5121                           ;utils.c: 37:         temp = (chars[i] & 0x0f);
  5122     0401  1683               	bsf	3,5	;RP0=1, select bank1
  5123     0402  1303               	bcf	3,6	;RP1=0, select bank1
  5124     0403  0864               	movf	convertToReal@i^(0+128),w
  5125     0404  0763               	addwf	convertToReal@chars^(0+128),w
  5126     0405  1283               	bcf	3,5	;RP0=0, select bank0
  5127     0406  1303               	bcf	3,6	;RP1=0, select bank0
  5128     0407  00DE               	movwf	??_convertToReal
  5129     0408  085E               	movf	??_convertToReal,w
  5130     0409  0084               	movwf	4
  5131     040A  0800               	movf	0,w
  5132     040B  390F               	andlw	15
  5133     040C  00DF               	movwf	??_convertToReal+1
  5134     040D  01E0               	clrf	??_convertToReal+2
  5135     040E  01E1               	clrf	??_convertToReal+3
  5136     040F  01E2               	clrf	??_convertToReal+4
  5137     0410  0862               	movf	??_convertToReal+4,w
  5138     0411  1683               	bsf	3,5	;RP0=1, select bank1
  5139     0412  1303               	bcf	3,6	;RP1=0, select bank1
  5140     0413  00DA               	movwf	(convertToReal@temp+3)^(0+128)
  5141     0414  1283               	bcf	3,5	;RP0=0, select bank0
  5142     0415  1303               	bcf	3,6	;RP1=0, select bank0
  5143     0416  0861               	movf	??_convertToReal+3,w
  5144     0417  1683               	bsf	3,5	;RP0=1, select bank1
  5145     0418  1303               	bcf	3,6	;RP1=0, select bank1
  5146     0419  00D9               	movwf	(convertToReal@temp+2)^(0+128)
  5147     041A  1283               	bcf	3,5	;RP0=0, select bank0
  5148     041B  1303               	bcf	3,6	;RP1=0, select bank0
  5149     041C  0860               	movf	??_convertToReal+2,w
  5150     041D  1683               	bsf	3,5	;RP0=1, select bank1
  5151     041E  1303               	bcf	3,6	;RP1=0, select bank1
  5152     041F  00D8               	movwf	(convertToReal@temp+1)^(0+128)
  5153     0420  1283               	bcf	3,5	;RP0=0, select bank0
  5154     0421  1303               	bcf	3,6	;RP1=0, select bank0
  5155     0422  085F               	movf	??_convertToReal+1,w
  5156     0423  1683               	bsf	3,5	;RP0=1, select bank1
  5157     0424  1303               	bcf	3,6	;RP1=0, select bank1
  5158     0425  00D7               	movwf	convertToReal@temp^(0+128)
  5159     0426                     l2776:
  5160                           
  5161                           ;utils.c: 38:         if ( decimal != 1 ) {
  5162     0426  0356               	decf	convertToReal@decimal^(0+128),w
  5163     0427  1903               	btfsc	3,2
  5164     0428  2C2A               	goto	u3201
  5165     0429  2C2B               	goto	u3200
  5166     042A                     u3201:
  5167     042A  2CB1               	goto	l2780
  5168     042B                     u3200:
  5169     042B                     l2778:
  5170                           
  5171                           ;utils.c: 39:           value = (value * 10.0f) + temp;
  5172     042B  0862               	movf	(convertToReal@value+3)^(0+128),w
  5173     042C  1283               	bcf	3,5	;RP0=0, select bank0
  5174     042D  1303               	bcf	3,6	;RP1=0, select bank0
  5175     042E  00AF               	movwf	___altoft@c+3
  5176     042F  1683               	bsf	3,5	;RP0=1, select bank1
  5177     0430  1303               	bcf	3,6	;RP1=0, select bank1
  5178     0431  0861               	movf	(convertToReal@value+2)^(0+128),w
  5179     0432  1283               	bcf	3,5	;RP0=0, select bank0
  5180     0433  1303               	bcf	3,6	;RP1=0, select bank0
  5181     0434  00AE               	movwf	___altoft@c+2
  5182     0435  1683               	bsf	3,5	;RP0=1, select bank1
  5183     0436  1303               	bcf	3,6	;RP1=0, select bank1
  5184     0437  0860               	movf	(convertToReal@value+1)^(0+128),w
  5185     0438  1283               	bcf	3,5	;RP0=0, select bank0
  5186     0439  1303               	bcf	3,6	;RP1=0, select bank0
  5187     043A  00AD               	movwf	___altoft@c+1
  5188     043B  1683               	bsf	3,5	;RP0=1, select bank1
  5189     043C  1303               	bcf	3,6	;RP1=0, select bank1
  5190     043D  085F               	movf	convertToReal@value^(0+128),w
  5191     043E  1283               	bcf	3,5	;RP0=0, select bank0
  5192     043F  1303               	bcf	3,6	;RP1=0, select bank0
  5193     0440  00AC               	movwf	___altoft@c
  5194     0441  120A  158A  2184  120A  118A  	fcall	___altoft
  5195     0446  1283               	bcf	3,5	;RP0=0, select bank0
  5196     0447  1303               	bcf	3,6	;RP1=0, select bank0
  5197     0448  082C               	movf	?___altoft,w
  5198     0449  00B5               	movwf	___ftmul@f2
  5199     044A  082D               	movf	?___altoft+1,w
  5200     044B  00B6               	movwf	___ftmul@f2+1
  5201     044C  082E               	movf	?___altoft+2,w
  5202     044D  00B7               	movwf	___ftmul@f2+2
  5203     044E  3000               	movlw	0
  5204     044F  00B2               	movwf	___ftmul@f1
  5205     0450  3020               	movlw	32
  5206     0451  00B3               	movwf	___ftmul@f1+1
  5207     0452  3041               	movlw	65
  5208     0453  00B4               	movwf	___ftmul@f1+2
  5209     0454  120A  158A  2644  120A  118A  	fcall	___ftmul
  5210     0459  1283               	bcf	3,5	;RP0=0, select bank0
  5211     045A  1303               	bcf	3,6	;RP1=0, select bank0
  5212     045B  0832               	movf	?___ftmul,w
  5213     045C  00C4               	movwf	___ftadd@f2
  5214     045D  0833               	movf	?___ftmul+1,w
  5215     045E  00C5               	movwf	___ftadd@f2+1
  5216     045F  0834               	movf	?___ftmul+2,w
  5217     0460  00C6               	movwf	___ftadd@f2+2
  5218     0461  1683               	bsf	3,5	;RP0=1, select bank1
  5219     0462  1303               	bcf	3,6	;RP1=0, select bank1
  5220     0463  085A               	movf	(convertToReal@temp+3)^(0+128),w
  5221     0464  1283               	bcf	3,5	;RP0=0, select bank0
  5222     0465  1303               	bcf	3,6	;RP1=0, select bank0
  5223     0466  00AF               	movwf	___altoft@c+3
  5224     0467  1683               	bsf	3,5	;RP0=1, select bank1
  5225     0468  1303               	bcf	3,6	;RP1=0, select bank1
  5226     0469  0859               	movf	(convertToReal@temp+2)^(0+128),w
  5227     046A  1283               	bcf	3,5	;RP0=0, select bank0
  5228     046B  1303               	bcf	3,6	;RP1=0, select bank0
  5229     046C  00AE               	movwf	___altoft@c+2
  5230     046D  1683               	bsf	3,5	;RP0=1, select bank1
  5231     046E  1303               	bcf	3,6	;RP1=0, select bank1
  5232     046F  0858               	movf	(convertToReal@temp+1)^(0+128),w
  5233     0470  1283               	bcf	3,5	;RP0=0, select bank0
  5234     0471  1303               	bcf	3,6	;RP1=0, select bank0
  5235     0472  00AD               	movwf	___altoft@c+1
  5236     0473  1683               	bsf	3,5	;RP0=1, select bank1
  5237     0474  1303               	bcf	3,6	;RP1=0, select bank1
  5238     0475  0857               	movf	convertToReal@temp^(0+128),w
  5239     0476  1283               	bcf	3,5	;RP0=0, select bank0
  5240     0477  1303               	bcf	3,6	;RP1=0, select bank0
  5241     0478  00AC               	movwf	___altoft@c
  5242     0479  120A  158A  2184  120A  118A  	fcall	___altoft
  5243     047E  1283               	bcf	3,5	;RP0=0, select bank0
  5244     047F  1303               	bcf	3,6	;RP1=0, select bank0
  5245     0480  082C               	movf	?___altoft,w
  5246     0481  00C1               	movwf	___ftadd@f1
  5247     0482  082D               	movf	?___altoft+1,w
  5248     0483  00C2               	movwf	___ftadd@f1+1
  5249     0484  082E               	movf	?___altoft+2,w
  5250     0485  00C3               	movwf	___ftadd@f1+2
  5251     0486  120A  118A  25BF  120A  118A  	fcall	___ftadd
  5252     048B  1283               	bcf	3,5	;RP0=0, select bank0
  5253     048C  1303               	bcf	3,6	;RP1=0, select bank0
  5254     048D  0841               	movf	?___ftadd,w
  5255     048E  00CD               	movwf	___fttol@f1
  5256     048F  0842               	movf	?___ftadd+1,w
  5257     0490  00CE               	movwf	___fttol@f1+1
  5258     0491  0843               	movf	?___ftadd+2,w
  5259     0492  00CF               	movwf	___fttol@f1+2
  5260     0493  120A  158A  245F  120A  118A  	fcall	___fttol
  5261     0498  1283               	bcf	3,5	;RP0=0, select bank0
  5262     0499  1303               	bcf	3,6	;RP1=0, select bank0
  5263     049A  0850               	movf	?___fttol+3,w
  5264     049B  1683               	bsf	3,5	;RP0=1, select bank1
  5265     049C  1303               	bcf	3,6	;RP1=0, select bank1
  5266     049D  00E2               	movwf	(convertToReal@value+3)^(0+128)
  5267     049E  1283               	bcf	3,5	;RP0=0, select bank0
  5268     049F  1303               	bcf	3,6	;RP1=0, select bank0
  5269     04A0  084F               	movf	?___fttol+2,w
  5270     04A1  1683               	bsf	3,5	;RP0=1, select bank1
  5271     04A2  1303               	bcf	3,6	;RP1=0, select bank1
  5272     04A3  00E1               	movwf	(convertToReal@value+2)^(0+128)
  5273     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  5274     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  5275     04A6  084E               	movf	?___fttol+1,w
  5276     04A7  1683               	bsf	3,5	;RP0=1, select bank1
  5277     04A8  1303               	bcf	3,6	;RP1=0, select bank1
  5278     04A9  00E0               	movwf	(convertToReal@value+1)^(0+128)
  5279     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  5280     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  5281     04AC  084D               	movf	?___fttol,w
  5282     04AD  1683               	bsf	3,5	;RP0=1, select bank1
  5283     04AE  1303               	bcf	3,6	;RP1=0, select bank1
  5284     04AF  00DF               	movwf	convertToReal@value^(0+128)
  5285                           
  5286                           ;utils.c: 40:         } else {
  5287     04B0  2D7A               	goto	l2784
  5288     04B1                     l2780:
  5289                           
  5290                           ;utils.c: 41:           value = value + (temp * potDez);
  5291     04B1  085A               	movf	(convertToReal@temp+3)^(0+128),w
  5292     04B2  1283               	bcf	3,5	;RP0=0, select bank0
  5293     04B3  1303               	bcf	3,6	;RP1=0, select bank0
  5294     04B4  00B6               	movwf	___lmul@multiplier+3
  5295     04B5  1683               	bsf	3,5	;RP0=1, select bank1
  5296     04B6  1303               	bcf	3,6	;RP1=0, select bank1
  5297     04B7  0859               	movf	(convertToReal@temp+2)^(0+128),w
  5298     04B8  1283               	bcf	3,5	;RP0=0, select bank0
  5299     04B9  1303               	bcf	3,6	;RP1=0, select bank0
  5300     04BA  00B5               	movwf	___lmul@multiplier+2
  5301     04BB  1683               	bsf	3,5	;RP0=1, select bank1
  5302     04BC  1303               	bcf	3,6	;RP1=0, select bank1
  5303     04BD  0858               	movf	(convertToReal@temp+1)^(0+128),w
  5304     04BE  1283               	bcf	3,5	;RP0=0, select bank0
  5305     04BF  1303               	bcf	3,6	;RP1=0, select bank0
  5306     04C0  00B4               	movwf	___lmul@multiplier+1
  5307     04C1  1683               	bsf	3,5	;RP0=1, select bank1
  5308     04C2  1303               	bcf	3,6	;RP1=0, select bank1
  5309     04C3  0857               	movf	convertToReal@temp^(0+128),w
  5310     04C4  1283               	bcf	3,5	;RP0=0, select bank0
  5311     04C5  1303               	bcf	3,6	;RP1=0, select bank0
  5312     04C6  00B3               	movwf	___lmul@multiplier
  5313     04C7  1683               	bsf	3,5	;RP0=1, select bank1
  5314     04C8  1303               	bcf	3,6	;RP1=0, select bank1
  5315     04C9  085E               	movf	(convertToReal@potDez+3)^(0+128),w
  5316     04CA  1283               	bcf	3,5	;RP0=0, select bank0
  5317     04CB  1303               	bcf	3,6	;RP1=0, select bank0
  5318     04CC  00BA               	movwf	___lmul@multiplicand+3
  5319     04CD  1683               	bsf	3,5	;RP0=1, select bank1
  5320     04CE  1303               	bcf	3,6	;RP1=0, select bank1
  5321     04CF  085D               	movf	(convertToReal@potDez+2)^(0+128),w
  5322     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  5323     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  5324     04D2  00B9               	movwf	___lmul@multiplicand+2
  5325     04D3  1683               	bsf	3,5	;RP0=1, select bank1
  5326     04D4  1303               	bcf	3,6	;RP1=0, select bank1
  5327     04D5  085C               	movf	(convertToReal@potDez+1)^(0+128),w
  5328     04D6  1283               	bcf	3,5	;RP0=0, select bank0
  5329     04D7  1303               	bcf	3,6	;RP1=0, select bank0
  5330     04D8  00B8               	movwf	___lmul@multiplicand+1
  5331     04D9  1683               	bsf	3,5	;RP0=1, select bank1
  5332     04DA  1303               	bcf	3,6	;RP1=0, select bank1
  5333     04DB  085B               	movf	convertToReal@potDez^(0+128),w
  5334     04DC  1283               	bcf	3,5	;RP0=0, select bank0
  5335     04DD  1303               	bcf	3,6	;RP1=0, select bank0
  5336     04DE  00B7               	movwf	___lmul@multiplicand
  5337     04DF  120A  158A  21C6  120A  118A  	fcall	___lmul
  5338     04E4  1283               	bcf	3,5	;RP0=0, select bank0
  5339     04E5  1303               	bcf	3,6	;RP1=0, select bank0
  5340     04E6  0833               	movf	?___lmul,w
  5341     04E7  1683               	bsf	3,5	;RP0=1, select bank1
  5342     04E8  1303               	bcf	3,6	;RP1=0, select bank1
  5343     04E9  075F               	addwf	convertToReal@value^(0+128),w
  5344     04EA  1283               	bcf	3,5	;RP0=0, select bank0
  5345     04EB  1303               	bcf	3,6	;RP1=0, select bank0
  5346     04EC  00DE               	movwf	??_convertToReal
  5347     04ED  3000               	movlw	0
  5348     04EE  1803               	skipnc
  5349     04EF  3001               	movlw	1
  5350     04F0  0734               	addwf	?___lmul+1,w
  5351     04F1  01E0               	clrf	??_convertToReal+2
  5352     04F2  1803               	skipnc
  5353     04F3  0AE0               	incf	??_convertToReal+2,f
  5354     04F4  1683               	bsf	3,5	;RP0=1, select bank1
  5355     04F5  1303               	bcf	3,6	;RP1=0, select bank1
  5356     04F6  0760               	addwf	(convertToReal@value+1)^(0+128),w
  5357     04F7  1283               	bcf	3,5	;RP0=0, select bank0
  5358     04F8  1303               	bcf	3,6	;RP1=0, select bank0
  5359     04F9  00DF               	movwf	??_convertToReal+1
  5360     04FA  1803               	skipnc
  5361     04FB  0AE0               	incf	??_convertToReal+2,f
  5362     04FC  0835               	movf	?___lmul+2,w
  5363     04FD  0760               	addwf	??_convertToReal+2,w
  5364     04FE  01E1               	clrf	??_convertToReal+3
  5365     04FF  1803               	skipnc
  5366     0500  0AE1               	incf	??_convertToReal+3,f
  5367     0501  1683               	bsf	3,5	;RP0=1, select bank1
  5368     0502  1303               	bcf	3,6	;RP1=0, select bank1
  5369     0503  0761               	addwf	(convertToReal@value+2)^(0+128),w
  5370     0504  1283               	bcf	3,5	;RP0=0, select bank0
  5371     0505  1303               	bcf	3,6	;RP1=0, select bank0
  5372     0506  00E0               	movwf	??_convertToReal+2
  5373     0507  1803               	skipnc
  5374     0508  0AE1               	incf	??_convertToReal+3,f
  5375     0509  0836               	movf	?___lmul+3,w
  5376     050A  0761               	addwf	??_convertToReal+3,w
  5377     050B  1683               	bsf	3,5	;RP0=1, select bank1
  5378     050C  1303               	bcf	3,6	;RP1=0, select bank1
  5379     050D  0762               	addwf	(convertToReal@value+3)^(0+128),w
  5380     050E  1283               	bcf	3,5	;RP0=0, select bank0
  5381     050F  1303               	bcf	3,6	;RP1=0, select bank0
  5382     0510  00E1               	movwf	??_convertToReal+3
  5383     0511  0861               	movf	??_convertToReal+3,w
  5384     0512  1683               	bsf	3,5	;RP0=1, select bank1
  5385     0513  1303               	bcf	3,6	;RP1=0, select bank1
  5386     0514  00E2               	movwf	(convertToReal@value+3)^(0+128)
  5387     0515  1283               	bcf	3,5	;RP0=0, select bank0
  5388     0516  1303               	bcf	3,6	;RP1=0, select bank0
  5389     0517  0860               	movf	??_convertToReal+2,w
  5390     0518  1683               	bsf	3,5	;RP0=1, select bank1
  5391     0519  1303               	bcf	3,6	;RP1=0, select bank1
  5392     051A  00E1               	movwf	(convertToReal@value+2)^(0+128)
  5393     051B  1283               	bcf	3,5	;RP0=0, select bank0
  5394     051C  1303               	bcf	3,6	;RP1=0, select bank0
  5395     051D  085F               	movf	??_convertToReal+1,w
  5396     051E  1683               	bsf	3,5	;RP0=1, select bank1
  5397     051F  1303               	bcf	3,6	;RP1=0, select bank1
  5398     0520  00E0               	movwf	(convertToReal@value+1)^(0+128)
  5399     0521  1283               	bcf	3,5	;RP0=0, select bank0
  5400     0522  1303               	bcf	3,6	;RP1=0, select bank0
  5401     0523  085E               	movf	??_convertToReal,w
  5402     0524  1683               	bsf	3,5	;RP0=1, select bank1
  5403     0525  1303               	bcf	3,6	;RP1=0, select bank1
  5404     0526  00DF               	movwf	convertToReal@value^(0+128)
  5405     0527                     l2782:
  5406                           
  5407                           ;utils.c: 42:           potDez = potDez * 0.1f;
  5408     0527  085E               	movf	(convertToReal@potDez+3)^(0+128),w
  5409     0528  1283               	bcf	3,5	;RP0=0, select bank0
  5410     0529  1303               	bcf	3,6	;RP1=0, select bank0
  5411     052A  00AF               	movwf	___altoft@c+3
  5412     052B  1683               	bsf	3,5	;RP0=1, select bank1
  5413     052C  1303               	bcf	3,6	;RP1=0, select bank1
  5414     052D  085D               	movf	(convertToReal@potDez+2)^(0+128),w
  5415     052E  1283               	bcf	3,5	;RP0=0, select bank0
  5416     052F  1303               	bcf	3,6	;RP1=0, select bank0
  5417     0530  00AE               	movwf	___altoft@c+2
  5418     0531  1683               	bsf	3,5	;RP0=1, select bank1
  5419     0532  1303               	bcf	3,6	;RP1=0, select bank1
  5420     0533  085C               	movf	(convertToReal@potDez+1)^(0+128),w
  5421     0534  1283               	bcf	3,5	;RP0=0, select bank0
  5422     0535  1303               	bcf	3,6	;RP1=0, select bank0
  5423     0536  00AD               	movwf	___altoft@c+1
  5424     0537  1683               	bsf	3,5	;RP0=1, select bank1
  5425     0538  1303               	bcf	3,6	;RP1=0, select bank1
  5426     0539  085B               	movf	convertToReal@potDez^(0+128),w
  5427     053A  1283               	bcf	3,5	;RP0=0, select bank0
  5428     053B  1303               	bcf	3,6	;RP1=0, select bank0
  5429     053C  00AC               	movwf	___altoft@c
  5430     053D  120A  158A  2184  120A  118A  	fcall	___altoft
  5431     0542  1283               	bcf	3,5	;RP0=0, select bank0
  5432     0543  1303               	bcf	3,6	;RP1=0, select bank0
  5433     0544  082C               	movf	?___altoft,w
  5434     0545  00B5               	movwf	___ftmul@f2
  5435     0546  082D               	movf	?___altoft+1,w
  5436     0547  00B6               	movwf	___ftmul@f2+1
  5437     0548  082E               	movf	?___altoft+2,w
  5438     0549  00B7               	movwf	___ftmul@f2+2
  5439     054A  30CD               	movlw	205
  5440     054B  00B2               	movwf	___ftmul@f1
  5441     054C  30CC               	movlw	204
  5442     054D  00B3               	movwf	___ftmul@f1+1
  5443     054E  303D               	movlw	61
  5444     054F  00B4               	movwf	___ftmul@f1+2
  5445     0550  120A  158A  2644  120A  118A  	fcall	___ftmul
  5446     0555  1283               	bcf	3,5	;RP0=0, select bank0
  5447     0556  1303               	bcf	3,6	;RP1=0, select bank0
  5448     0557  0832               	movf	?___ftmul,w
  5449     0558  00CD               	movwf	___fttol@f1
  5450     0559  0833               	movf	?___ftmul+1,w
  5451     055A  00CE               	movwf	___fttol@f1+1
  5452     055B  0834               	movf	?___ftmul+2,w
  5453     055C  00CF               	movwf	___fttol@f1+2
  5454     055D  120A  158A  245F  120A  118A  	fcall	___fttol
  5455     0562  1283               	bcf	3,5	;RP0=0, select bank0
  5456     0563  1303               	bcf	3,6	;RP1=0, select bank0
  5457     0564  0850               	movf	?___fttol+3,w
  5458     0565  1683               	bsf	3,5	;RP0=1, select bank1
  5459     0566  1303               	bcf	3,6	;RP1=0, select bank1
  5460     0567  00DE               	movwf	(convertToReal@potDez+3)^(0+128)
  5461     0568  1283               	bcf	3,5	;RP0=0, select bank0
  5462     0569  1303               	bcf	3,6	;RP1=0, select bank0
  5463     056A  084F               	movf	?___fttol+2,w
  5464     056B  1683               	bsf	3,5	;RP0=1, select bank1
  5465     056C  1303               	bcf	3,6	;RP1=0, select bank1
  5466     056D  00DD               	movwf	(convertToReal@potDez+2)^(0+128)
  5467     056E  1283               	bcf	3,5	;RP0=0, select bank0
  5468     056F  1303               	bcf	3,6	;RP1=0, select bank0
  5469     0570  084E               	movf	?___fttol+1,w
  5470     0571  1683               	bsf	3,5	;RP0=1, select bank1
  5471     0572  1303               	bcf	3,6	;RP1=0, select bank1
  5472     0573  00DC               	movwf	(convertToReal@potDez+1)^(0+128)
  5473     0574  1283               	bcf	3,5	;RP0=0, select bank0
  5474     0575  1303               	bcf	3,6	;RP1=0, select bank0
  5475     0576  084D               	movf	?___fttol,w
  5476     0577  1683               	bsf	3,5	;RP0=1, select bank1
  5477     0578  1303               	bcf	3,6	;RP1=0, select bank1
  5478     0579  00DB               	movwf	convertToReal@potDez^(0+128)
  5479     057A                     l2784:
  5480                           
  5481                           ;utils.c: 45:   }
  5482     057A  3001               	movlw	1
  5483     057B  00FF               	movwf	btemp+1
  5484     057C  087F               	movf	btemp+1,w
  5485     057D  07E4               	addwf	convertToReal@i^(0+128),f
  5486     057E  2BA2               	goto	l426
  5487     057F                     l2788:
  5488                           
  5489                           ;utils.c: 46:   return value * signal;
  5490     057F  1683               	bsf	3,5	;RP0=1, select bank1
  5491     0580  1303               	bcf	3,6	;RP1=0, select bank1
  5492     0581  0862               	movf	(convertToReal@value+3)^(0+128),w
  5493     0582  1283               	bcf	3,5	;RP0=0, select bank0
  5494     0583  1303               	bcf	3,6	;RP1=0, select bank0
  5495     0584  00B6               	movwf	___lmul@multiplier+3
  5496     0585  1683               	bsf	3,5	;RP0=1, select bank1
  5497     0586  1303               	bcf	3,6	;RP1=0, select bank1
  5498     0587  0861               	movf	(convertToReal@value+2)^(0+128),w
  5499     0588  1283               	bcf	3,5	;RP0=0, select bank0
  5500     0589  1303               	bcf	3,6	;RP1=0, select bank0
  5501     058A  00B5               	movwf	___lmul@multiplier+2
  5502     058B  1683               	bsf	3,5	;RP0=1, select bank1
  5503     058C  1303               	bcf	3,6	;RP1=0, select bank1
  5504     058D  0860               	movf	(convertToReal@value+1)^(0+128),w
  5505     058E  1283               	bcf	3,5	;RP0=0, select bank0
  5506     058F  1303               	bcf	3,6	;RP1=0, select bank0
  5507     0590  00B4               	movwf	___lmul@multiplier+1
  5508     0591  1683               	bsf	3,5	;RP0=1, select bank1
  5509     0592  1303               	bcf	3,6	;RP1=0, select bank1
  5510     0593  085F               	movf	convertToReal@value^(0+128),w
  5511     0594  1283               	bcf	3,5	;RP0=0, select bank0
  5512     0595  1303               	bcf	3,6	;RP1=0, select bank0
  5513     0596  00B3               	movwf	___lmul@multiplier
  5514     0597  1683               	bsf	3,5	;RP0=1, select bank1
  5515     0598  1303               	bcf	3,6	;RP1=0, select bank1
  5516     0599  0855               	movf	(convertToReal@signal+3)^(0+128),w
  5517     059A  1283               	bcf	3,5	;RP0=0, select bank0
  5518     059B  1303               	bcf	3,6	;RP1=0, select bank0
  5519     059C  00BA               	movwf	___lmul@multiplicand+3
  5520     059D  1683               	bsf	3,5	;RP0=1, select bank1
  5521     059E  1303               	bcf	3,6	;RP1=0, select bank1
  5522     059F  0854               	movf	(convertToReal@signal+2)^(0+128),w
  5523     05A0  1283               	bcf	3,5	;RP0=0, select bank0
  5524     05A1  1303               	bcf	3,6	;RP1=0, select bank0
  5525     05A2  00B9               	movwf	___lmul@multiplicand+2
  5526     05A3  1683               	bsf	3,5	;RP0=1, select bank1
  5527     05A4  1303               	bcf	3,6	;RP1=0, select bank1
  5528     05A5  0853               	movf	(convertToReal@signal+1)^(0+128),w
  5529     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  5530     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  5531     05A8  00B8               	movwf	___lmul@multiplicand+1
  5532     05A9  1683               	bsf	3,5	;RP0=1, select bank1
  5533     05AA  1303               	bcf	3,6	;RP1=0, select bank1
  5534     05AB  0852               	movf	convertToReal@signal^(0+128),w
  5535     05AC  1283               	bcf	3,5	;RP0=0, select bank0
  5536     05AD  1303               	bcf	3,6	;RP1=0, select bank0
  5537     05AE  00B7               	movwf	___lmul@multiplicand
  5538     05AF  120A  158A  21C6  120A  118A  	fcall	___lmul
  5539     05B4  1283               	bcf	3,5	;RP0=0, select bank0
  5540     05B5  1303               	bcf	3,6	;RP1=0, select bank0
  5541     05B6  0836               	movf	?___lmul+3,w
  5542     05B7  00DD               	movwf	?_convertToReal+3
  5543     05B8  0835               	movf	?___lmul+2,w
  5544     05B9  00DC               	movwf	?_convertToReal+2
  5545     05BA  0834               	movf	?___lmul+1,w
  5546     05BB  00DB               	movwf	?_convertToReal+1
  5547     05BC  0833               	movf	?___lmul,w
  5548     05BD  00DA               	movwf	?_convertToReal
  5549     05BE                     l435:
  5550     05BE  0008               	return
  5551     05BF                     __end_of_convertToReal:
  5552                           
  5553                           	psect	text32
  5554     0C5F                     __ptext32:	
  5555 ;; *************** function ___fttol *****************
  5556 ;; Defined at:
  5557 ;;		line 44 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\fttol.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  f1              3   45[BANK0 ] float 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  lval            4   53[BANK0 ] unsigned long 
  5562 ;;  exp1            1   57[BANK0 ] unsigned char 
  5563 ;;  sign1           1   52[BANK0 ] unsigned char 
  5564 ;; Return value:  Size  Location     Type
  5565 ;;                  4   45[BANK0 ] long 
  5566 ;; Registers used:
  5567 ;;		wreg, status,2, status,0, btemp+1
  5568 ;; Tracked objects:
  5569 ;;		On entry : 0/0
  5570 ;;		On exit  : 0/0
  5571 ;;		Unchanged: 0/0
  5572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5573 ;;      Params:         0       4       0       0       0
  5574 ;;      Locals:         0       6       0       0       0
  5575 ;;      Temps:          0       3       0       0       0
  5576 ;;      Totals:         0      13       0       0       0
  5577 ;;Total ram usage:       13 bytes
  5578 ;; Hardware stack levels used: 1
  5579 ;; Hardware stack levels required when called: 4
  5580 ;; This function calls:
  5581 ;;		Nothing
  5582 ;; This function is called by:
  5583 ;;		_convertToReal
  5584 ;;		_printReal
  5585 ;; This function uses a non-reentrant model
  5586 ;;
  5587                           
  5588     0C5F                     ___fttol:	
  5589                           ;psect for function ___fttol
  5590                           
  5591     0C5F                     l2572:	
  5592                           ;incstack = 0
  5593                           ; Regs used in ___fttol: [wreg+status,2+status,0+btemp+1]
  5594                           
  5595     0C5F  1283               	bcf	3,5	;RP0=0, select bank0
  5596     0C60  1303               	bcf	3,6	;RP1=0, select bank0
  5597     0C61  084D               	movf	___fttol@f1,w
  5598     0C62  00D1               	movwf	??___fttol
  5599     0C63  084E               	movf	___fttol@f1+1,w
  5600     0C64  00D2               	movwf	??___fttol+1
  5601     0C65  084F               	movf	___fttol@f1+2,w
  5602     0C66  00D3               	movwf	??___fttol+2
  5603     0C67  1003               	clrc
  5604     0C68  0D52               	rlf	??___fttol+1,w
  5605     0C69  0D53               	rlf	??___fttol+2,w
  5606     0C6A  00D9               	movwf	___fttol@exp1
  5607     0C6B  0859               	movf	___fttol@exp1,w
  5608     0C6C  1D03               	btfss	3,2
  5609     0C6D  2C6F               	goto	u2871
  5610     0C6E  2C70               	goto	u2870
  5611     0C6F                     u2871:
  5612     0C6F  2C79               	goto	l2578
  5613     0C70                     u2870:
  5614     0C70                     l2574:
  5615     0C70  3000               	movlw	0
  5616     0C71  00D0               	movwf	?___fttol+3
  5617     0C72  3000               	movlw	0
  5618     0C73  00CF               	movwf	?___fttol+2
  5619     0C74  3000               	movlw	0
  5620     0C75  00CE               	movwf	?___fttol+1
  5621     0C76  3000               	movlw	0
  5622     0C77  00CD               	movwf	?___fttol
  5623     0C78  2CE6               	goto	l914
  5624     0C79                     l2578:
  5625     0C79  084D               	movf	___fttol@f1,w
  5626     0C7A  00D1               	movwf	??___fttol
  5627     0C7B  084E               	movf	___fttol@f1+1,w
  5628     0C7C  00D2               	movwf	??___fttol+1
  5629     0C7D  084F               	movf	___fttol@f1+2,w
  5630     0C7E  00D3               	movwf	??___fttol+2
  5631     0C7F  3017               	movlw	23
  5632     0C80                     u2885:
  5633     0C80  1003               	clrc
  5634     0C81  0CD3               	rrf	??___fttol+2,f
  5635     0C82  0CD2               	rrf	??___fttol+1,f
  5636     0C83  0CD1               	rrf	??___fttol,f
  5637     0C84                     u2880:
  5638     0C84  3EFF               	addlw	-1
  5639     0C85  1D03               	skipz
  5640     0C86  2C80               	goto	u2885
  5641     0C87  0851               	movf	??___fttol,w
  5642     0C88  00D4               	movwf	___fttol@sign1
  5643     0C89                     l2580:
  5644     0C89  17CE               	bsf	___fttol@f1+1,7
  5645     0C8A                     l2582:
  5646     0C8A  30FF               	movlw	255
  5647     0C8B  05CD               	andwf	___fttol@f1,f
  5648     0C8C  30FF               	movlw	255
  5649     0C8D  05CE               	andwf	___fttol@f1+1,f
  5650     0C8E  3000               	movlw	0
  5651     0C8F  05CF               	andwf	___fttol@f1+2,f
  5652     0C90                     l2584:
  5653     0C90  084D               	movf	___fttol@f1,w
  5654     0C91  00D5               	movwf	___fttol@lval
  5655     0C92  084E               	movf	___fttol@f1+1,w
  5656     0C93  00D6               	movwf	___fttol@lval+1
  5657     0C94  084F               	movf	___fttol@f1+2,w
  5658     0C95  00D7               	movwf	___fttol@lval+2
  5659     0C96  01D8               	clrf	___fttol@lval+3
  5660     0C97                     l2586:
  5661     0C97  308E               	movlw	142
  5662     0C98  02D9               	subwf	___fttol@exp1,f
  5663     0C99                     l2588:
  5664     0C99  1FD9               	btfss	___fttol@exp1,7
  5665     0C9A  2C9C               	goto	u2891
  5666     0C9B  2C9D               	goto	u2890
  5667     0C9C                     u2891:
  5668     0C9C  2CB7               	goto	l2600
  5669     0C9D                     u2890:
  5670     0C9D                     l2590:
  5671     0C9D  0859               	movf	___fttol@exp1,w
  5672     0C9E  3A80               	xorlw	128
  5673     0C9F  3E8F               	addlw	143
  5674     0CA0  1803               	skipnc
  5675     0CA1  2CA3               	goto	u2901
  5676     0CA2  2CA4               	goto	u2900
  5677     0CA3                     u2901:
  5678     0CA3  2CA5               	goto	l2596
  5679     0CA4                     u2900:
  5680     0CA4  2C70               	goto	l2574
  5681     0CA5                     l2596:
  5682     0CA5  3001               	movlw	1
  5683     0CA6                     u2915:
  5684     0CA6  1003               	clrc
  5685     0CA7  0CD8               	rrf	___fttol@lval+3,f
  5686     0CA8  0CD7               	rrf	___fttol@lval+2,f
  5687     0CA9  0CD6               	rrf	___fttol@lval+1,f
  5688     0CAA  0CD5               	rrf	___fttol@lval,f
  5689     0CAB  3EFF               	addlw	-1
  5690     0CAC  1D03               	skipz
  5691     0CAD  2CA6               	goto	u2915
  5692     0CAE                     l2598:
  5693     0CAE  3001               	movlw	1
  5694     0CAF  00FF               	movwf	btemp+1
  5695     0CB0  087F               	movf	btemp+1,w
  5696     0CB1  07D9               	addwf	___fttol@exp1,f
  5697     0CB2  1D03               	btfss	3,2
  5698     0CB3  2CB5               	goto	u2921
  5699     0CB4  2CB6               	goto	u2920
  5700     0CB5                     u2921:
  5701     0CB5  2CA5               	goto	l2596
  5702     0CB6                     u2920:
  5703     0CB6  2CCE               	goto	l2608
  5704     0CB7                     l2600:
  5705     0CB7  3018               	movlw	24
  5706     0CB8  0259               	subwf	___fttol@exp1,w
  5707     0CB9  1C03               	skipc
  5708     0CBA  2CBC               	goto	u2931
  5709     0CBB  2CBD               	goto	u2930
  5710     0CBC                     u2931:
  5711     0CBC  2CC9               	goto	l921
  5712     0CBD                     u2930:
  5713     0CBD  2C70               	goto	l2574
  5714     0CBE                     l2606:
  5715     0CBE  3001               	movlw	1
  5716     0CBF  00D1               	movwf	??___fttol
  5717     0CC0                     u2945:
  5718     0CC0  1003               	clrc
  5719     0CC1  0DD5               	rlf	___fttol@lval,f
  5720     0CC2  0DD6               	rlf	___fttol@lval+1,f
  5721     0CC3  0DD7               	rlf	___fttol@lval+2,f
  5722     0CC4  0DD8               	rlf	___fttol@lval+3,f
  5723     0CC5  0BD1               	decfsz	??___fttol,f
  5724     0CC6  2CC0               	goto	u2945
  5725     0CC7  3001               	movlw	1
  5726     0CC8  02D9               	subwf	___fttol@exp1,f
  5727     0CC9                     l921:
  5728     0CC9  0859               	movf	___fttol@exp1,w
  5729     0CCA  1D03               	btfss	3,2
  5730     0CCB  2CCD               	goto	u2951
  5731     0CCC  2CCE               	goto	u2950
  5732     0CCD                     u2951:
  5733     0CCD  2CBE               	goto	l2606
  5734     0CCE                     u2950:
  5735     0CCE                     l2608:
  5736     0CCE  0854               	movf	___fttol@sign1,w
  5737     0CCF  1903               	btfsc	3,2
  5738     0CD0  2CD2               	goto	u2961
  5739     0CD1  2CD3               	goto	u2960
  5740     0CD2                     u2961:
  5741     0CD2  2CDE               	goto	l2612
  5742     0CD3                     u2960:
  5743     0CD3                     l2610:
  5744     0CD3  09D5               	comf	___fttol@lval,f
  5745     0CD4  09D6               	comf	___fttol@lval+1,f
  5746     0CD5  09D7               	comf	___fttol@lval+2,f
  5747     0CD6  09D8               	comf	___fttol@lval+3,f
  5748     0CD7  0AD5               	incf	___fttol@lval,f
  5749     0CD8  1903               	skipnz
  5750     0CD9  0AD6               	incf	___fttol@lval+1,f
  5751     0CDA  1903               	skipnz
  5752     0CDB  0AD7               	incf	___fttol@lval+2,f
  5753     0CDC  1903               	skipnz
  5754     0CDD  0AD8               	incf	___fttol@lval+3,f
  5755     0CDE                     l2612:
  5756     0CDE  0858               	movf	___fttol@lval+3,w
  5757     0CDF  00D0               	movwf	?___fttol+3
  5758     0CE0  0857               	movf	___fttol@lval+2,w
  5759     0CE1  00CF               	movwf	?___fttol+2
  5760     0CE2  0856               	movf	___fttol@lval+1,w
  5761     0CE3  00CE               	movwf	?___fttol+1
  5762     0CE4  0855               	movf	___fttol@lval,w
  5763     0CE5  00CD               	movwf	?___fttol
  5764     0CE6                     l914:
  5765     0CE6  0008               	return
  5766     0CE7                     __end_of___fttol:
  5767                           
  5768                           	psect	text33
  5769     0E44                     __ptext33:	
  5770 ;; *************** function ___ftmul *****************
  5771 ;; Defined at:
  5772 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftmul.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;  f1              3   18[BANK0 ] float 
  5775 ;;  f2              3   21[BANK0 ] float 
  5776 ;; Auto vars:     Size  Location     Type
  5777 ;;  f3_as_produc    3   28[BANK0 ] unsigned um
  5778 ;;  sign            1   32[BANK0 ] unsigned char 
  5779 ;;  cntr            1   31[BANK0 ] unsigned char 
  5780 ;;  exp             1   27[BANK0 ] unsigned char 
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  3   18[BANK0 ] float 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5790 ;;      Params:         0       6       0       0       0
  5791 ;;      Locals:         0       6       0       0       0
  5792 ;;      Temps:          0       3       0       0       0
  5793 ;;      Totals:         0      15       0       0       0
  5794 ;;Total ram usage:       15 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; Hardware stack levels required when called: 5
  5797 ;; This function calls:
  5798 ;;		___ftpack
  5799 ;; This function is called by:
  5800 ;;		_convertToReal
  5801 ;;		_printReal
  5802 ;; This function uses a non-reentrant model
  5803 ;;
  5804                           
  5805     0E44                     ___ftmul:	
  5806                           ;psect for function ___ftmul
  5807                           
  5808     0E44                     l2516:	
  5809                           ;incstack = 0
  5810 ;; hardware stack exceeded
  5811                           ; Regs used in ___ftmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5812                           
  5813     0E44  1283               	bcf	3,5	;RP0=0, select bank0
  5814     0E45  1303               	bcf	3,6	;RP1=0, select bank0
  5815     0E46  0832               	movf	___ftmul@f1,w
  5816     0E47  00B8               	movwf	??___ftmul
  5817     0E48  0833               	movf	___ftmul@f1+1,w
  5818     0E49  00B9               	movwf	??___ftmul+1
  5819     0E4A  0834               	movf	___ftmul@f1+2,w
  5820     0E4B  00BA               	movwf	??___ftmul+2
  5821     0E4C  1003               	clrc
  5822     0E4D  0D39               	rlf	??___ftmul+1,w
  5823     0E4E  0D3A               	rlf	??___ftmul+2,w
  5824     0E4F  00BB               	movwf	___ftmul@exp
  5825     0E50  083B               	movf	___ftmul@exp,w
  5826     0E51  1D03               	btfss	3,2
  5827     0E52  2E54               	goto	u2731
  5828     0E53  2E55               	goto	u2730
  5829     0E54                     u2731:
  5830     0E54  2E5C               	goto	l2522
  5831     0E55                     u2730:
  5832     0E55                     l2518:
  5833     0E55  3000               	movlw	0
  5834     0E56  00B2               	movwf	?___ftmul
  5835     0E57  3000               	movlw	0
  5836     0E58  00B3               	movwf	?___ftmul+1
  5837     0E59  3000               	movlw	0
  5838     0E5A  00B4               	movwf	?___ftmul+2
  5839     0E5B  2F1A               	goto	l893
  5840     0E5C                     l2522:
  5841     0E5C  0835               	movf	___ftmul@f2,w
  5842     0E5D  00B8               	movwf	??___ftmul
  5843     0E5E  0836               	movf	___ftmul@f2+1,w
  5844     0E5F  00B9               	movwf	??___ftmul+1
  5845     0E60  0837               	movf	___ftmul@f2+2,w
  5846     0E61  00BA               	movwf	??___ftmul+2
  5847     0E62  1003               	clrc
  5848     0E63  0D39               	rlf	??___ftmul+1,w
  5849     0E64  0D3A               	rlf	??___ftmul+2,w
  5850     0E65  00C0               	movwf	___ftmul@sign
  5851     0E66  0840               	movf	___ftmul@sign,w
  5852     0E67  1D03               	btfss	3,2
  5853     0E68  2E6A               	goto	u2741
  5854     0E69  2E6B               	goto	u2740
  5855     0E6A                     u2741:
  5856     0E6A  2E72               	goto	l2528
  5857     0E6B                     u2740:
  5858     0E6B                     l2524:
  5859     0E6B  3000               	movlw	0
  5860     0E6C  00B2               	movwf	?___ftmul
  5861     0E6D  3000               	movlw	0
  5862     0E6E  00B3               	movwf	?___ftmul+1
  5863     0E6F  3000               	movlw	0
  5864     0E70  00B4               	movwf	?___ftmul+2
  5865     0E71  2F1A               	goto	l893
  5866     0E72                     l2528:
  5867     0E72  0840               	movf	___ftmul@sign,w
  5868     0E73  3E7B               	addlw	123
  5869     0E74  00FF               	movwf	btemp+1
  5870     0E75  087F               	movf	btemp+1,w
  5871     0E76  07BB               	addwf	___ftmul@exp,f
  5872     0E77                     l2530:
  5873     0E77  0832               	movf	___ftmul@f1,w
  5874     0E78  00B8               	movwf	??___ftmul
  5875     0E79  0833               	movf	___ftmul@f1+1,w
  5876     0E7A  00B9               	movwf	??___ftmul+1
  5877     0E7B  0834               	movf	___ftmul@f1+2,w
  5878     0E7C  00BA               	movwf	??___ftmul+2
  5879     0E7D  3010               	movlw	16
  5880     0E7E                     u2755:
  5881     0E7E  1003               	clrc
  5882     0E7F  0CBA               	rrf	??___ftmul+2,f
  5883     0E80  0CB9               	rrf	??___ftmul+1,f
  5884     0E81  0CB8               	rrf	??___ftmul,f
  5885     0E82                     u2750:
  5886     0E82  3EFF               	addlw	-1
  5887     0E83  1D03               	skipz
  5888     0E84  2E7E               	goto	u2755
  5889     0E85  0838               	movf	??___ftmul,w
  5890     0E86  00C0               	movwf	___ftmul@sign
  5891     0E87                     l2532:
  5892     0E87  0835               	movf	___ftmul@f2,w
  5893     0E88  00B8               	movwf	??___ftmul
  5894     0E89  0836               	movf	___ftmul@f2+1,w
  5895     0E8A  00B9               	movwf	??___ftmul+1
  5896     0E8B  0837               	movf	___ftmul@f2+2,w
  5897     0E8C  00BA               	movwf	??___ftmul+2
  5898     0E8D  3010               	movlw	16
  5899     0E8E                     u2765:
  5900     0E8E  1003               	clrc
  5901     0E8F  0CBA               	rrf	??___ftmul+2,f
  5902     0E90  0CB9               	rrf	??___ftmul+1,f
  5903     0E91  0CB8               	rrf	??___ftmul,f
  5904     0E92                     u2760:
  5905     0E92  3EFF               	addlw	-1
  5906     0E93  1D03               	skipz
  5907     0E94  2E8E               	goto	u2765
  5908     0E95  0838               	movf	??___ftmul,w
  5909     0E96  00FF               	movwf	btemp+1
  5910     0E97  087F               	movf	btemp+1,w
  5911     0E98  06C0               	xorwf	___ftmul@sign,f
  5912     0E99                     l2534:
  5913     0E99  3080               	movlw	128
  5914     0E9A  00FF               	movwf	btemp+1
  5915     0E9B  087F               	movf	btemp+1,w
  5916     0E9C  05C0               	andwf	___ftmul@sign,f
  5917     0E9D                     l2536:
  5918     0E9D  17B3               	bsf	___ftmul@f1+1,7
  5919     0E9E                     l2538:
  5920     0E9E  17B6               	bsf	___ftmul@f2+1,7
  5921     0E9F                     l2540:
  5922     0E9F  30FF               	movlw	255
  5923     0EA0  05B5               	andwf	___ftmul@f2,f
  5924     0EA1  30FF               	movlw	255
  5925     0EA2  05B6               	andwf	___ftmul@f2+1,f
  5926     0EA3  3000               	movlw	0
  5927     0EA4  05B7               	andwf	___ftmul@f2+2,f
  5928     0EA5                     l2542:
  5929     0EA5  3000               	movlw	0
  5930     0EA6  00BC               	movwf	___ftmul@f3_as_product
  5931     0EA7  3000               	movlw	0
  5932     0EA8  00BD               	movwf	___ftmul@f3_as_product+1
  5933     0EA9  3000               	movlw	0
  5934     0EAA  00BE               	movwf	___ftmul@f3_as_product+2
  5935     0EAB                     l2544:
  5936     0EAB  3007               	movlw	7
  5937     0EAC  00BF               	movwf	___ftmul@cntr
  5938     0EAD                     l2546:
  5939     0EAD  1C32               	btfss	___ftmul@f1,0
  5940     0EAE  2EB0               	goto	u2771
  5941     0EAF  2EB1               	goto	u2770
  5942     0EB0                     u2771:
  5943     0EB0  2EC1               	goto	l2550
  5944     0EB1                     u2770:
  5945     0EB1                     l2548:
  5946     0EB1  0835               	movf	___ftmul@f2,w
  5947     0EB2  07BC               	addwf	___ftmul@f3_as_product,f
  5948     0EB3  0836               	movf	___ftmul@f2+1,w
  5949     0EB4  1103               	clrz
  5950     0EB5  1803               	skipnc
  5951     0EB6  0A36               	incf	___ftmul@f2+1,w
  5952     0EB7  1903               	skipnz
  5953     0EB8  2EBA               	goto	u2781
  5954     0EB9  07BD               	addwf	___ftmul@f3_as_product+1,f
  5955     0EBA                     u2781:
  5956     0EBA  0837               	movf	___ftmul@f2+2,w
  5957     0EBB  1103               	clrz
  5958     0EBC  1803               	skipnc
  5959     0EBD  0A37               	incf	___ftmul@f2+2,w
  5960     0EBE  1903               	skipnz
  5961     0EBF  2EC1               	goto	u2782
  5962     0EC0  07BE               	addwf	___ftmul@f3_as_product+2,f
  5963     0EC1                     u2782:
  5964     0EC1                     l2550:
  5965     0EC1  3001               	movlw	1
  5966     0EC2                     u2795:
  5967     0EC2  1003               	clrc
  5968     0EC3  0CB4               	rrf	___ftmul@f1+2,f
  5969     0EC4  0CB3               	rrf	___ftmul@f1+1,f
  5970     0EC5  0CB2               	rrf	___ftmul@f1,f
  5971     0EC6  3EFF               	addlw	-1
  5972     0EC7  1D03               	skipz
  5973     0EC8  2EC2               	goto	u2795
  5974     0EC9                     l2552:
  5975     0EC9  3001               	movlw	1
  5976     0ECA                     u2805:
  5977     0ECA  1003               	clrc
  5978     0ECB  0DB5               	rlf	___ftmul@f2,f
  5979     0ECC  0DB6               	rlf	___ftmul@f2+1,f
  5980     0ECD  0DB7               	rlf	___ftmul@f2+2,f
  5981     0ECE  3EFF               	addlw	-1
  5982     0ECF  1D03               	skipz
  5983     0ED0  2ECA               	goto	u2805
  5984     0ED1                     l2554:
  5985     0ED1  3001               	movlw	1
  5986     0ED2  02BF               	subwf	___ftmul@cntr,f
  5987     0ED3  1D03               	btfss	3,2
  5988     0ED4  2ED6               	goto	u2811
  5989     0ED5  2ED7               	goto	u2810
  5990     0ED6                     u2811:
  5991     0ED6  2EAD               	goto	l2546
  5992     0ED7                     u2810:
  5993     0ED7                     l2556:
  5994     0ED7  3009               	movlw	9
  5995     0ED8  00BF               	movwf	___ftmul@cntr
  5996     0ED9                     l2558:
  5997     0ED9  1C32               	btfss	___ftmul@f1,0
  5998     0EDA  2EDC               	goto	u2821
  5999     0EDB  2EDD               	goto	u2820
  6000     0EDC                     u2821:
  6001     0EDC  2EED               	goto	l2562
  6002     0EDD                     u2820:
  6003     0EDD                     l2560:
  6004     0EDD  0835               	movf	___ftmul@f2,w
  6005     0EDE  07BC               	addwf	___ftmul@f3_as_product,f
  6006     0EDF  0836               	movf	___ftmul@f2+1,w
  6007     0EE0  1103               	clrz
  6008     0EE1  1803               	skipnc
  6009     0EE2  0A36               	incf	___ftmul@f2+1,w
  6010     0EE3  1903               	skipnz
  6011     0EE4  2EE6               	goto	u2831
  6012     0EE5  07BD               	addwf	___ftmul@f3_as_product+1,f
  6013     0EE6                     u2831:
  6014     0EE6  0837               	movf	___ftmul@f2+2,w
  6015     0EE7  1103               	clrz
  6016     0EE8  1803               	skipnc
  6017     0EE9  0A37               	incf	___ftmul@f2+2,w
  6018     0EEA  1903               	skipnz
  6019     0EEB  2EED               	goto	u2832
  6020     0EEC  07BE               	addwf	___ftmul@f3_as_product+2,f
  6021     0EED                     u2832:
  6022     0EED                     l2562:
  6023     0EED  3001               	movlw	1
  6024     0EEE                     u2845:
  6025     0EEE  1003               	clrc
  6026     0EEF  0CB4               	rrf	___ftmul@f1+2,f
  6027     0EF0  0CB3               	rrf	___ftmul@f1+1,f
  6028     0EF1  0CB2               	rrf	___ftmul@f1,f
  6029     0EF2  3EFF               	addlw	-1
  6030     0EF3  1D03               	skipz
  6031     0EF4  2EEE               	goto	u2845
  6032     0EF5                     l2564:
  6033     0EF5  3001               	movlw	1
  6034     0EF6                     u2855:
  6035     0EF6  1003               	clrc
  6036     0EF7  0CBE               	rrf	___ftmul@f3_as_product+2,f
  6037     0EF8  0CBD               	rrf	___ftmul@f3_as_product+1,f
  6038     0EF9  0CBC               	rrf	___ftmul@f3_as_product,f
  6039     0EFA  3EFF               	addlw	-1
  6040     0EFB  1D03               	skipz
  6041     0EFC  2EF6               	goto	u2855
  6042     0EFD                     l2566:
  6043     0EFD  3001               	movlw	1
  6044     0EFE  02BF               	subwf	___ftmul@cntr,f
  6045     0EFF  1D03               	btfss	3,2
  6046     0F00  2F02               	goto	u2861
  6047     0F01  2F03               	goto	u2860
  6048     0F02                     u2861:
  6049     0F02  2ED9               	goto	l2558
  6050     0F03                     u2860:
  6051     0F03                     l2568:
  6052     0F03  083C               	movf	___ftmul@f3_as_product,w
  6053     0F04  00A4               	movwf	___ftpack@arg
  6054     0F05  083D               	movf	___ftmul@f3_as_product+1,w
  6055     0F06  00A5               	movwf	___ftpack@arg+1
  6056     0F07  083E               	movf	___ftmul@f3_as_product+2,w
  6057     0F08  00A6               	movwf	___ftpack@arg+2
  6058     0F09  083B               	movf	___ftmul@exp,w
  6059     0F0A  00A7               	movwf	___ftpack@exp
  6060     0F0B  0840               	movf	___ftmul@sign,w
  6061     0F0C  00A8               	movwf	___ftpack@sign
  6062     0F0D  120A  158A  23E1  120A  158A  	fcall	___ftpack
  6063     0F12  1283               	bcf	3,5	;RP0=0, select bank0
  6064     0F13  1303               	bcf	3,6	;RP1=0, select bank0
  6065     0F14  0824               	movf	?___ftpack,w
  6066     0F15  00B2               	movwf	?___ftmul
  6067     0F16  0825               	movf	?___ftpack+1,w
  6068     0F17  00B3               	movwf	?___ftmul+1
  6069     0F18  0826               	movf	?___ftpack+2,w
  6070     0F19  00B4               	movwf	?___ftmul+2
  6071     0F1A                     l893:
  6072     0F1A  0008               	return
  6073     0F1B                     __end_of___ftmul:
  6074                           
  6075                           	psect	text34
  6076     05BF                     __ptext34:	
  6077 ;; *************** function ___ftadd *****************
  6078 ;; Defined at:
  6079 ;;		line 86 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\ftadd.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  f1              3   33[BANK0 ] float 
  6082 ;;  f2              3   36[BANK0 ] float 
  6083 ;; Auto vars:     Size  Location     Type
  6084 ;;  exp1            1   44[BANK0 ] unsigned char 
  6085 ;;  exp2            1   43[BANK0 ] unsigned char 
  6086 ;;  sign            1   42[BANK0 ] unsigned char 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  3   33[BANK0 ] float 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6096 ;;      Params:         0       6       0       0       0
  6097 ;;      Locals:         0       3       0       0       0
  6098 ;;      Temps:          0       3       0       0       0
  6099 ;;      Totals:         0      12       0       0       0
  6100 ;;Total ram usage:       12 bytes
  6101 ;; Hardware stack levels used: 1
  6102 ;; Hardware stack levels required when called: 5
  6103 ;; This function calls:
  6104 ;;		___ftpack
  6105 ;; This function is called by:
  6106 ;;		_convertToReal
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110     05BF                     ___ftadd:	
  6111                           ;psect for function ___ftadd
  6112                           
  6113     05BF                     l2442:	
  6114                           ;incstack = 0
  6115 ;; hardware stack exceeded
  6116                           ; Regs used in ___ftadd: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6117                           
  6118     05BF  1283               	bcf	3,5	;RP0=0, select bank0
  6119     05C0  1303               	bcf	3,6	;RP1=0, select bank0
  6120     05C1  0841               	movf	___ftadd@f1,w
  6121     05C2  00C7               	movwf	??___ftadd
  6122     05C3  0842               	movf	___ftadd@f1+1,w
  6123     05C4  00C8               	movwf	??___ftadd+1
  6124     05C5  0843               	movf	___ftadd@f1+2,w
  6125     05C6  00C9               	movwf	??___ftadd+2
  6126     05C7  1003               	clrc
  6127     05C8  0D48               	rlf	??___ftadd+1,w
  6128     05C9  0D49               	rlf	??___ftadd+2,w
  6129     05CA  00CC               	movwf	___ftadd@exp1
  6130     05CB  0844               	movf	___ftadd@f2,w
  6131     05CC  00C7               	movwf	??___ftadd
  6132     05CD  0845               	movf	___ftadd@f2+1,w
  6133     05CE  00C8               	movwf	??___ftadd+1
  6134     05CF  0846               	movf	___ftadd@f2+2,w
  6135     05D0  00C9               	movwf	??___ftadd+2
  6136     05D1  1003               	clrc
  6137     05D2  0D48               	rlf	??___ftadd+1,w
  6138     05D3  0D49               	rlf	??___ftadd+2,w
  6139     05D4  00CB               	movwf	___ftadd@exp2
  6140     05D5  084C               	movf	___ftadd@exp1,w
  6141     05D6  1903               	btfsc	3,2
  6142     05D7  2DD9               	goto	u2491
  6143     05D8  2DDA               	goto	u2490
  6144     05D9                     u2491:
  6145     05D9  2DEA               	goto	l2448
  6146     05DA                     u2490:
  6147     05DA                     l2444:
  6148     05DA  084B               	movf	___ftadd@exp2,w
  6149     05DB  024C               	subwf	___ftadd@exp1,w
  6150     05DC  1803               	skipnc
  6151     05DD  2DDF               	goto	u2501
  6152     05DE  2DE0               	goto	u2500
  6153     05DF                     u2501:
  6154     05DF  2DF1               	goto	l2452
  6155     05E0                     u2500:
  6156     05E0                     l2446:
  6157     05E0  084B               	movf	___ftadd@exp2,w
  6158     05E1  00C7               	movwf	??___ftadd
  6159     05E2  084C               	movf	___ftadd@exp1,w
  6160     05E3  02C7               	subwf	??___ftadd,f
  6161     05E4  3019               	movlw	25
  6162     05E5  0247               	subwf	??___ftadd,w
  6163     05E6  1C03               	skipc
  6164     05E7  2DE9               	goto	u2511
  6165     05E8  2DEA               	goto	u2510
  6166     05E9                     u2511:
  6167     05E9  2DF1               	goto	l2452
  6168     05EA                     u2510:
  6169     05EA                     l2448:
  6170     05EA  0844               	movf	___ftadd@f2,w
  6171     05EB  00C1               	movwf	?___ftadd
  6172     05EC  0845               	movf	___ftadd@f2+1,w
  6173     05ED  00C2               	movwf	?___ftadd+1
  6174     05EE  0846               	movf	___ftadd@f2+2,w
  6175     05EF  00C3               	movwf	?___ftadd+2
  6176     05F0  2EEA               	goto	l847
  6177     05F1                     l2452:
  6178     05F1  084B               	movf	___ftadd@exp2,w
  6179     05F2  1903               	btfsc	3,2
  6180     05F3  2DF5               	goto	u2521
  6181     05F4  2DF6               	goto	u2520
  6182     05F5                     u2521:
  6183     05F5  2E06               	goto	l850
  6184     05F6                     u2520:
  6185     05F6                     l2454:
  6186     05F6  084C               	movf	___ftadd@exp1,w
  6187     05F7  024B               	subwf	___ftadd@exp2,w
  6188     05F8  1803               	skipnc
  6189     05F9  2DFB               	goto	u2531
  6190     05FA  2DFC               	goto	u2530
  6191     05FB                     u2531:
  6192     05FB  2E07               	goto	l2458
  6193     05FC                     u2530:
  6194     05FC                     l2456:
  6195     05FC  084C               	movf	___ftadd@exp1,w
  6196     05FD  00C7               	movwf	??___ftadd
  6197     05FE  084B               	movf	___ftadd@exp2,w
  6198     05FF  02C7               	subwf	??___ftadd,f
  6199     0600  3019               	movlw	25
  6200     0601  0247               	subwf	??___ftadd,w
  6201     0602  1C03               	skipc
  6202     0603  2E05               	goto	u2541
  6203     0604  2E06               	goto	u2540
  6204     0605                     u2541:
  6205     0605  2E07               	goto	l2458
  6206     0606                     u2540:
  6207     0606                     l850:
  6208     0606  2EEA               	goto	l847
  6209     0607                     l2458:
  6210     0607  3006               	movlw	6
  6211     0608  00CA               	movwf	___ftadd@sign
  6212     0609                     l2460:
  6213     0609  1FC3               	btfss	___ftadd@f1+2,7
  6214     060A  2E0C               	goto	u2551
  6215     060B  2E0D               	goto	u2550
  6216     060C                     u2551:
  6217     060C  2E0E               	goto	l851
  6218     060D                     u2550:
  6219     060D                     l2462:
  6220     060D  17CA               	bsf	___ftadd@sign,7
  6221     060E                     l851:
  6222     060E  1FC6               	btfss	___ftadd@f2+2,7
  6223     060F  2E11               	goto	u2561
  6224     0610  2E12               	goto	u2560
  6225     0611                     u2561:
  6226     0611  2E13               	goto	l852
  6227     0612                     u2560:
  6228     0612                     l2464:
  6229     0612  174A               	bsf	___ftadd@sign,6
  6230     0613                     l852:
  6231     0613  17C2               	bsf	___ftadd@f1+1,7
  6232     0614                     l2466:
  6233     0614  30FF               	movlw	255
  6234     0615  05C1               	andwf	___ftadd@f1,f
  6235     0616  30FF               	movlw	255
  6236     0617  05C2               	andwf	___ftadd@f1+1,f
  6237     0618  3000               	movlw	0
  6238     0619  05C3               	andwf	___ftadd@f1+2,f
  6239     061A                     l2468:
  6240     061A  17C5               	bsf	___ftadd@f2+1,7
  6241     061B  30FF               	movlw	255
  6242     061C  05C4               	andwf	___ftadd@f2,f
  6243     061D  30FF               	movlw	255
  6244     061E  05C5               	andwf	___ftadd@f2+1,f
  6245     061F  3000               	movlw	0
  6246     0620  05C6               	andwf	___ftadd@f2+2,f
  6247     0621  084B               	movf	___ftadd@exp2,w
  6248     0622  024C               	subwf	___ftadd@exp1,w
  6249     0623  1803               	skipnc
  6250     0624  2E26               	goto	u2571
  6251     0625  2E27               	goto	u2570
  6252     0626                     u2571:
  6253     0626  2E53               	goto	l2482
  6254     0627                     u2570:
  6255     0627                     l2470:
  6256     0627  3001               	movlw	1
  6257     0628                     u2585:
  6258     0628  1003               	clrc
  6259     0629  0DC4               	rlf	___ftadd@f2,f
  6260     062A  0DC5               	rlf	___ftadd@f2+1,f
  6261     062B  0DC6               	rlf	___ftadd@f2+2,f
  6262     062C  3EFF               	addlw	-1
  6263     062D  1D03               	skipz
  6264     062E  2E28               	goto	u2585
  6265     062F  3001               	movlw	1
  6266     0630  02CB               	subwf	___ftadd@exp2,f
  6267     0631                     l2472:
  6268     0631  084B               	movf	___ftadd@exp2,w
  6269     0632  064C               	xorwf	___ftadd@exp1,w
  6270     0633  1903               	skipnz
  6271     0634  2E36               	goto	u2591
  6272     0635  2E37               	goto	u2590
  6273     0636                     u2591:
  6274     0636  2E4C               	goto	l2480
  6275     0637                     u2590:
  6276     0637                     l2474:
  6277     0637  3001               	movlw	1
  6278     0638  02CA               	subwf	___ftadd@sign,f
  6279     0639  084A               	movf	___ftadd@sign,w
  6280     063A  3907               	andlw	7
  6281     063B  1D03               	btfss	3,2
  6282     063C  2E3E               	goto	u2601
  6283     063D  2E3F               	goto	u2600
  6284     063E                     u2601:
  6285     063E  2E27               	goto	l2470
  6286     063F                     u2600:
  6287     063F  2E4C               	goto	l2480
  6288     0640                     l2476:
  6289     0640  3001               	movlw	1
  6290     0641                     u2615:
  6291     0641  1003               	clrc
  6292     0642  0CC3               	rrf	___ftadd@f1+2,f
  6293     0643  0CC2               	rrf	___ftadd@f1+1,f
  6294     0644  0CC1               	rrf	___ftadd@f1,f
  6295     0645  3EFF               	addlw	-1
  6296     0646  1D03               	skipz
  6297     0647  2E41               	goto	u2615
  6298     0648                     l2478:
  6299     0648  3001               	movlw	1
  6300     0649  00FF               	movwf	btemp+1
  6301     064A  087F               	movf	btemp+1,w
  6302     064B  07CC               	addwf	___ftadd@exp1,f
  6303     064C                     l2480:
  6304     064C  084C               	movf	___ftadd@exp1,w
  6305     064D  064B               	xorwf	___ftadd@exp2,w
  6306     064E  1D03               	skipz
  6307     064F  2E51               	goto	u2621
  6308     0650  2E52               	goto	u2620
  6309     0651                     u2621:
  6310     0651  2E40               	goto	l2476
  6311     0652                     u2620:
  6312     0652  2E84               	goto	l861
  6313     0653                     l2482:
  6314     0653  084C               	movf	___ftadd@exp1,w
  6315     0654  024B               	subwf	___ftadd@exp2,w
  6316     0655  1803               	skipnc
  6317     0656  2E58               	goto	u2631
  6318     0657  2E59               	goto	u2630
  6319     0658                     u2631:
  6320     0658  2E84               	goto	l861
  6321     0659                     u2630:
  6322     0659                     l2484:
  6323     0659  3001               	movlw	1
  6324     065A                     u2645:
  6325     065A  1003               	clrc
  6326     065B  0DC1               	rlf	___ftadd@f1,f
  6327     065C  0DC2               	rlf	___ftadd@f1+1,f
  6328     065D  0DC3               	rlf	___ftadd@f1+2,f
  6329     065E  3EFF               	addlw	-1
  6330     065F  1D03               	skipz
  6331     0660  2E5A               	goto	u2645
  6332     0661  3001               	movlw	1
  6333     0662  02CC               	subwf	___ftadd@exp1,f
  6334     0663                     l2486:
  6335     0663  084B               	movf	___ftadd@exp2,w
  6336     0664  064C               	xorwf	___ftadd@exp1,w
  6337     0665  1903               	skipnz
  6338     0666  2E68               	goto	u2651
  6339     0667  2E69               	goto	u2650
  6340     0668                     u2651:
  6341     0668  2E7E               	goto	l2494
  6342     0669                     u2650:
  6343     0669                     l2488:
  6344     0669  3001               	movlw	1
  6345     066A  02CA               	subwf	___ftadd@sign,f
  6346     066B  084A               	movf	___ftadd@sign,w
  6347     066C  3907               	andlw	7
  6348     066D  1D03               	btfss	3,2
  6349     066E  2E70               	goto	u2661
  6350     066F  2E71               	goto	u2660
  6351     0670                     u2661:
  6352     0670  2E59               	goto	l2484
  6353     0671                     u2660:
  6354     0671  2E7E               	goto	l2494
  6355     0672                     l2490:
  6356     0672  3001               	movlw	1
  6357     0673                     u2675:
  6358     0673  1003               	clrc
  6359     0674  0CC6               	rrf	___ftadd@f2+2,f
  6360     0675  0CC5               	rrf	___ftadd@f2+1,f
  6361     0676  0CC4               	rrf	___ftadd@f2,f
  6362     0677  3EFF               	addlw	-1
  6363     0678  1D03               	skipz
  6364     0679  2E73               	goto	u2675
  6365     067A                     l2492:
  6366     067A  3001               	movlw	1
  6367     067B  00FF               	movwf	btemp+1
  6368     067C  087F               	movf	btemp+1,w
  6369     067D  07CB               	addwf	___ftadd@exp2,f
  6370     067E                     l2494:
  6371     067E  084C               	movf	___ftadd@exp1,w
  6372     067F  064B               	xorwf	___ftadd@exp2,w
  6373     0680  1D03               	skipz
  6374     0681  2E83               	goto	u2681
  6375     0682  2E84               	goto	u2680
  6376     0683                     u2681:
  6377     0683  2E72               	goto	l2490
  6378     0684                     u2680:
  6379     0684                     l861:
  6380     0684  1FCA               	btfss	___ftadd@sign,7
  6381     0685  2E87               	goto	u2691
  6382     0686  2E88               	goto	u2690
  6383     0687                     u2691:
  6384     0687  2E98               	goto	l2498
  6385     0688                     u2690:
  6386     0688                     l2496:
  6387     0688  30FF               	movlw	255
  6388     0689  06C1               	xorwf	___ftadd@f1,f
  6389     068A  30FF               	movlw	255
  6390     068B  06C2               	xorwf	___ftadd@f1+1,f
  6391     068C  30FF               	movlw	255
  6392     068D  06C3               	xorwf	___ftadd@f1+2,f
  6393     068E  3001               	movlw	1
  6394     068F  07C1               	addwf	___ftadd@f1,f
  6395     0690  3000               	movlw	0
  6396     0691  1803               	skipnc
  6397     0692  3001               	movlw	1
  6398     0693  07C2               	addwf	___ftadd@f1+1,f
  6399     0694  3000               	movlw	0
  6400     0695  1803               	skipnc
  6401     0696  3001               	movlw	1
  6402     0697  07C3               	addwf	___ftadd@f1+2,f
  6403     0698                     l2498:
  6404     0698  1F4A               	btfss	___ftadd@sign,6
  6405     0699  2E9B               	goto	u2701
  6406     069A  2E9C               	goto	u2700
  6407     069B                     u2701:
  6408     069B  2EAC               	goto	l2502
  6409     069C                     u2700:
  6410     069C                     l2500:
  6411     069C  30FF               	movlw	255
  6412     069D  06C4               	xorwf	___ftadd@f2,f
  6413     069E  30FF               	movlw	255
  6414     069F  06C5               	xorwf	___ftadd@f2+1,f
  6415     06A0  30FF               	movlw	255
  6416     06A1  06C6               	xorwf	___ftadd@f2+2,f
  6417     06A2  3001               	movlw	1
  6418     06A3  07C4               	addwf	___ftadd@f2,f
  6419     06A4  3000               	movlw	0
  6420     06A5  1803               	skipnc
  6421     06A6  3001               	movlw	1
  6422     06A7  07C5               	addwf	___ftadd@f2+1,f
  6423     06A8  3000               	movlw	0
  6424     06A9  1803               	skipnc
  6425     06AA  3001               	movlw	1
  6426     06AB  07C6               	addwf	___ftadd@f2+2,f
  6427     06AC                     l2502:
  6428     06AC  01CA               	clrf	___ftadd@sign
  6429     06AD                     l2504:
  6430     06AD  0841               	movf	___ftadd@f1,w
  6431     06AE  07C4               	addwf	___ftadd@f2,f
  6432     06AF  0842               	movf	___ftadd@f1+1,w
  6433     06B0  1103               	clrz
  6434     06B1  1803               	skipnc
  6435     06B2  0A42               	incf	___ftadd@f1+1,w
  6436     06B3  1903               	skipnz
  6437     06B4  2EB6               	goto	u2711
  6438     06B5  07C5               	addwf	___ftadd@f2+1,f
  6439     06B6                     u2711:
  6440     06B6  0843               	movf	___ftadd@f1+2,w
  6441     06B7  1103               	clrz
  6442     06B8  1803               	skipnc
  6443     06B9  0A43               	incf	___ftadd@f1+2,w
  6444     06BA  1903               	skipnz
  6445     06BB  2EBD               	goto	u2712
  6446     06BC  07C6               	addwf	___ftadd@f2+2,f
  6447     06BD                     u2712:
  6448     06BD                     l2506:
  6449     06BD  1FC6               	btfss	___ftadd@f2+2,7
  6450     06BE  2EC0               	goto	u2721
  6451     06BF  2EC1               	goto	u2720
  6452     06C0                     u2721:
  6453     06C0  2ED3               	goto	l2512
  6454     06C1                     u2720:
  6455     06C1                     l2508:
  6456     06C1  30FF               	movlw	255
  6457     06C2  06C4               	xorwf	___ftadd@f2,f
  6458     06C3  30FF               	movlw	255
  6459     06C4  06C5               	xorwf	___ftadd@f2+1,f
  6460     06C5  30FF               	movlw	255
  6461     06C6  06C6               	xorwf	___ftadd@f2+2,f
  6462     06C7  3001               	movlw	1
  6463     06C8  07C4               	addwf	___ftadd@f2,f
  6464     06C9  3000               	movlw	0
  6465     06CA  1803               	skipnc
  6466     06CB  3001               	movlw	1
  6467     06CC  07C5               	addwf	___ftadd@f2+1,f
  6468     06CD  3000               	movlw	0
  6469     06CE  1803               	skipnc
  6470     06CF  3001               	movlw	1
  6471     06D0  07C6               	addwf	___ftadd@f2+2,f
  6472     06D1                     l2510:
  6473     06D1  01CA               	clrf	___ftadd@sign
  6474     06D2  0ACA               	incf	___ftadd@sign,f
  6475     06D3                     l2512:
  6476     06D3  0844               	movf	___ftadd@f2,w
  6477     06D4  00A4               	movwf	___ftpack@arg
  6478     06D5  0845               	movf	___ftadd@f2+1,w
  6479     06D6  00A5               	movwf	___ftpack@arg+1
  6480     06D7  0846               	movf	___ftadd@f2+2,w
  6481     06D8  00A6               	movwf	___ftpack@arg+2
  6482     06D9  084C               	movf	___ftadd@exp1,w
  6483     06DA  00A7               	movwf	___ftpack@exp
  6484     06DB  084A               	movf	___ftadd@sign,w
  6485     06DC  00A8               	movwf	___ftpack@sign
  6486     06DD  120A  158A  23E1  120A  118A  	fcall	___ftpack
  6487     06E2  1283               	bcf	3,5	;RP0=0, select bank0
  6488     06E3  1303               	bcf	3,6	;RP1=0, select bank0
  6489     06E4  0824               	movf	?___ftpack,w
  6490     06E5  00C1               	movwf	?___ftadd
  6491     06E6  0825               	movf	?___ftpack+1,w
  6492     06E7  00C2               	movwf	?___ftadd+1
  6493     06E8  0826               	movf	?___ftpack+2,w
  6494     06E9  00C3               	movwf	?___ftadd+2
  6495     06EA                     l847:
  6496     06EA  0008               	return
  6497     06EB                     __end_of___ftadd:
  6498                           
  6499                           	psect	text35
  6500     0984                     __ptext35:	
  6501 ;; *************** function ___altoft *****************
  6502 ;; Defined at:
  6503 ;;		line 42 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\altoft.c"
  6504 ;; Parameters:    Size  Location     Type
  6505 ;;  c               4   12[BANK0 ] long 
  6506 ;; Auto vars:     Size  Location     Type
  6507 ;;  sign            1   17[BANK0 ] unsigned char 
  6508 ;;  exp             1   16[BANK0 ] unsigned char 
  6509 ;; Return value:  Size  Location     Type
  6510 ;;                  3   12[BANK0 ] float 
  6511 ;; Registers used:
  6512 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6513 ;; Tracked objects:
  6514 ;;		On entry : 0/0
  6515 ;;		On exit  : 0/0
  6516 ;;		Unchanged: 0/0
  6517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6518 ;;      Params:         0       4       0       0       0
  6519 ;;      Locals:         0       2       0       0       0
  6520 ;;      Temps:          0       0       0       0       0
  6521 ;;      Totals:         0       6       0       0       0
  6522 ;;Total ram usage:        6 bytes
  6523 ;; Hardware stack levels used: 1
  6524 ;; Hardware stack levels required when called: 5
  6525 ;; This function calls:
  6526 ;;		___ftpack
  6527 ;; This function is called by:
  6528 ;;		_convertToReal
  6529 ;;		_printReal
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           
  6533     0984                     ___altoft:	
  6534                           ;psect for function ___altoft
  6535                           
  6536     0984                     l2424:	
  6537                           ;incstack = 0
  6538 ;; hardware stack exceeded
  6539                           ; Regs used in ___altoft: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6540                           
  6541     0984  1283               	bcf	3,5	;RP0=0, select bank0
  6542     0985  1303               	bcf	3,6	;RP1=0, select bank0
  6543     0986  01B1               	clrf	___altoft@sign
  6544     0987                     l2426:
  6545     0987  308E               	movlw	142
  6546     0988  00B0               	movwf	___altoft@exp
  6547     0989                     l2428:
  6548     0989  1FAF               	btfss	___altoft@c+3,7
  6549     098A  298C               	goto	u2461
  6550     098B  298D               	goto	u2460
  6551     098C                     u2461:
  6552     098C  29A8               	goto	l2436
  6553     098D                     u2460:
  6554     098D                     l2430:
  6555     098D  09AC               	comf	___altoft@c,f
  6556     098E  09AD               	comf	___altoft@c+1,f
  6557     098F  09AE               	comf	___altoft@c+2,f
  6558     0990  09AF               	comf	___altoft@c+3,f
  6559     0991  0AAC               	incf	___altoft@c,f
  6560     0992  1903               	skipnz
  6561     0993  0AAD               	incf	___altoft@c+1,f
  6562     0994  1903               	skipnz
  6563     0995  0AAE               	incf	___altoft@c+2,f
  6564     0996  1903               	skipnz
  6565     0997  0AAF               	incf	___altoft@c+3,f
  6566     0998  01B1               	clrf	___altoft@sign
  6567     0999  0AB1               	incf	___altoft@sign,f
  6568     099A  29A8               	goto	l2436
  6569     099B                     l2432:
  6570     099B  3001               	movlw	1
  6571     099C                     u2475:
  6572     099C  1003               	clrc
  6573     099D  0CAF               	rrf	___altoft@c+3,f
  6574     099E  0CAE               	rrf	___altoft@c+2,f
  6575     099F  0CAD               	rrf	___altoft@c+1,f
  6576     09A0  0CAC               	rrf	___altoft@c,f
  6577     09A1  3EFF               	addlw	-1
  6578     09A2  1D03               	skipz
  6579     09A3  299C               	goto	u2475
  6580     09A4                     l2434:
  6581     09A4  3001               	movlw	1
  6582     09A5  00FF               	movwf	btemp+1
  6583     09A6  087F               	movf	btemp+1,w
  6584     09A7  07B0               	addwf	___altoft@exp,f
  6585     09A8                     l2436:
  6586     09A8  30FF               	movlw	255
  6587     09A9  052F               	andwf	___altoft@c+3,w
  6588     09AA  1D03               	btfss	3,2
  6589     09AB  29AD               	goto	u2481
  6590     09AC  29AE               	goto	u2480
  6591     09AD                     u2481:
  6592     09AD  299B               	goto	l2432
  6593     09AE                     u2480:
  6594     09AE                     l2438:
  6595     09AE  082C               	movf	___altoft@c,w
  6596     09AF  00A4               	movwf	___ftpack@arg
  6597     09B0  082D               	movf	___altoft@c+1,w
  6598     09B1  00A5               	movwf	___ftpack@arg+1
  6599     09B2  082E               	movf	___altoft@c+2,w
  6600     09B3  00A6               	movwf	___ftpack@arg+2
  6601     09B4  0830               	movf	___altoft@exp,w
  6602     09B5  00A7               	movwf	___ftpack@exp
  6603     09B6  0831               	movf	___altoft@sign,w
  6604     09B7  00A8               	movwf	___ftpack@sign
  6605     09B8  120A  158A  23E1  120A  158A  	fcall	___ftpack
  6606     09BD  1283               	bcf	3,5	;RP0=0, select bank0
  6607     09BE  1303               	bcf	3,6	;RP1=0, select bank0
  6608     09BF  0824               	movf	?___ftpack,w
  6609     09C0  00AC               	movwf	?___altoft
  6610     09C1  0825               	movf	?___ftpack+1,w
  6611     09C2  00AD               	movwf	?___altoft+1
  6612     09C3  0826               	movf	?___ftpack+2,w
  6613     09C4  00AE               	movwf	?___altoft+2
  6614     09C5                     l721:
  6615     09C5  0008               	return
  6616     09C6                     __end_of___altoft:
  6617                           
  6618                           	psect	text36
  6619     0BE1                     __ptext36:	
  6620 ;; *************** function ___ftpack *****************
  6621 ;; Defined at:
  6622 ;;		line 62 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\float.c"
  6623 ;; Parameters:    Size  Location     Type
  6624 ;;  arg             3    4[BANK0 ] unsigned um
  6625 ;;  exp             1    7[BANK0 ] unsigned char 
  6626 ;;  sign            1    8[BANK0 ] unsigned char 
  6627 ;; Auto vars:     Size  Location     Type
  6628 ;;		None
  6629 ;; Return value:  Size  Location     Type
  6630 ;;                  3    4[BANK0 ] float 
  6631 ;; Registers used:
  6632 ;;		wreg, status,2, status,0, btemp+1
  6633 ;; Tracked objects:
  6634 ;;		On entry : 0/0
  6635 ;;		On exit  : 0/0
  6636 ;;		Unchanged: 0/0
  6637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6638 ;;      Params:         0       5       0       0       0
  6639 ;;      Locals:         0       0       0       0       0
  6640 ;;      Temps:          0       3       0       0       0
  6641 ;;      Totals:         0       8       0       0       0
  6642 ;;Total ram usage:        8 bytes
  6643 ;; Hardware stack levels used: 1
  6644 ;; Hardware stack levels required when called: 4
  6645 ;; This function calls:
  6646 ;;		Nothing
  6647 ;; This function is called by:
  6648 ;;		___altoft
  6649 ;;		___ftadd
  6650 ;;		___ftmul
  6651 ;; This function uses a non-reentrant model
  6652 ;;
  6653                           
  6654     0BE1                     ___ftpack:	
  6655                           ;psect for function ___ftpack
  6656                           
  6657     0BE1                     l2122:	
  6658                           ;incstack = 0
  6659 ;; hardware stack exceeded
  6660                           ; Regs used in ___ftpack: [wreg+status,2+status,0+btemp+1]
  6661                           
  6662     0BE1  1283               	bcf	3,5	;RP0=0, select bank0
  6663     0BE2  1303               	bcf	3,6	;RP1=0, select bank0
  6664     0BE3  0827               	movf	___ftpack@exp,w
  6665     0BE4  1903               	btfsc	3,2
  6666     0BE5  2BE7               	goto	u1831
  6667     0BE6  2BE8               	goto	u1830
  6668     0BE7                     u1831:
  6669     0BE7  2BEF               	goto	l2126
  6670     0BE8                     u1830:
  6671     0BE8                     l2124:
  6672     0BE8  0826               	movf	___ftpack@arg+2,w
  6673     0BE9  0425               	iorwf	___ftpack@arg+1,w
  6674     0BEA  0424               	iorwf	___ftpack@arg,w
  6675     0BEB  1D03               	skipz
  6676     0BEC  2BEE               	goto	u1841
  6677     0BED  2BEF               	goto	u1840
  6678     0BEE                     u1841:
  6679     0BEE  2C02               	goto	l2134
  6680     0BEF                     u1840:
  6681     0BEF                     l2126:
  6682     0BEF  3000               	movlw	0
  6683     0BF0  00A4               	movwf	?___ftpack
  6684     0BF1  3000               	movlw	0
  6685     0BF2  00A5               	movwf	?___ftpack+1
  6686     0BF3  3000               	movlw	0
  6687     0BF4  00A6               	movwf	?___ftpack+2
  6688     0BF5  2C5E               	goto	l826
  6689     0BF6                     l2130:
  6690     0BF6  3001               	movlw	1
  6691     0BF7  00FF               	movwf	btemp+1
  6692     0BF8  087F               	movf	btemp+1,w
  6693     0BF9  07A7               	addwf	___ftpack@exp,f
  6694     0BFA                     l2132:
  6695     0BFA  3001               	movlw	1
  6696     0BFB                     u1855:
  6697     0BFB  1003               	clrc
  6698     0BFC  0CA6               	rrf	___ftpack@arg+2,f
  6699     0BFD  0CA5               	rrf	___ftpack@arg+1,f
  6700     0BFE  0CA4               	rrf	___ftpack@arg,f
  6701     0BFF  3EFF               	addlw	-1
  6702     0C00  1D03               	skipz
  6703     0C01  2BFB               	goto	u1855
  6704     0C02                     l2134:
  6705     0C02  30FE               	movlw	254
  6706     0C03  0526               	andwf	___ftpack@arg+2,w
  6707     0C04  1D03               	btfss	3,2
  6708     0C05  2C07               	goto	u1861
  6709     0C06  2C08               	goto	u1860
  6710     0C07                     u1861:
  6711     0C07  2BF6               	goto	l2130
  6712     0C08                     u1860:
  6713     0C08  2C1F               	goto	l2142
  6714     0C09                     l2136:
  6715     0C09  3001               	movlw	1
  6716     0C0A  00FF               	movwf	btemp+1
  6717     0C0B  087F               	movf	btemp+1,w
  6718     0C0C  07A7               	addwf	___ftpack@exp,f
  6719     0C0D                     l2138:
  6720     0C0D  3001               	movlw	1
  6721     0C0E  07A4               	addwf	___ftpack@arg,f
  6722     0C0F  3000               	movlw	0
  6723     0C10  1803               	skipnc
  6724     0C11  3001               	movlw	1
  6725     0C12  07A5               	addwf	___ftpack@arg+1,f
  6726     0C13  3000               	movlw	0
  6727     0C14  1803               	skipnc
  6728     0C15  3001               	movlw	1
  6729     0C16  07A6               	addwf	___ftpack@arg+2,f
  6730     0C17                     l2140:
  6731     0C17  3001               	movlw	1
  6732     0C18                     u1875:
  6733     0C18  1003               	clrc
  6734     0C19  0CA6               	rrf	___ftpack@arg+2,f
  6735     0C1A  0CA5               	rrf	___ftpack@arg+1,f
  6736     0C1B  0CA4               	rrf	___ftpack@arg,f
  6737     0C1C  3EFF               	addlw	-1
  6738     0C1D  1D03               	skipz
  6739     0C1E  2C18               	goto	u1875
  6740     0C1F                     l2142:
  6741     0C1F  30FF               	movlw	255
  6742     0C20  0526               	andwf	___ftpack@arg+2,w
  6743     0C21  1D03               	btfss	3,2
  6744     0C22  2C24               	goto	u1881
  6745     0C23  2C25               	goto	u1880
  6746     0C24                     u1881:
  6747     0C24  2C09               	goto	l2136
  6748     0C25                     u1880:
  6749     0C25  2C30               	goto	l2146
  6750     0C26                     l2144:
  6751     0C26  3001               	movlw	1
  6752     0C27  02A7               	subwf	___ftpack@exp,f
  6753     0C28  3001               	movlw	1
  6754     0C29                     u1895:
  6755     0C29  1003               	clrc
  6756     0C2A  0DA4               	rlf	___ftpack@arg,f
  6757     0C2B  0DA5               	rlf	___ftpack@arg+1,f
  6758     0C2C  0DA6               	rlf	___ftpack@arg+2,f
  6759     0C2D  3EFF               	addlw	-1
  6760     0C2E  1D03               	skipz
  6761     0C2F  2C29               	goto	u1895
  6762     0C30                     l2146:
  6763     0C30  1BA5               	btfsc	___ftpack@arg+1,7
  6764     0C31  2C33               	goto	u1901
  6765     0C32  2C34               	goto	u1900
  6766     0C33                     u1901:
  6767     0C33  2C3A               	goto	l837
  6768     0C34                     u1900:
  6769     0C34                     l2148:
  6770     0C34  3002               	movlw	2
  6771     0C35  0227               	subwf	___ftpack@exp,w
  6772     0C36  1803               	skipnc
  6773     0C37  2C39               	goto	u1911
  6774     0C38  2C3A               	goto	u1910
  6775     0C39                     u1911:
  6776     0C39  2C26               	goto	l2144
  6777     0C3A                     u1910:
  6778     0C3A                     l837:
  6779     0C3A  1827               	btfsc	___ftpack@exp,0
  6780     0C3B  2C3D               	goto	u1921
  6781     0C3C  2C3E               	goto	u1920
  6782     0C3D                     u1921:
  6783     0C3D  2C44               	goto	l838
  6784     0C3E                     u1920:
  6785     0C3E                     l2150:
  6786     0C3E  30FF               	movlw	255
  6787     0C3F  05A4               	andwf	___ftpack@arg,f
  6788     0C40  307F               	movlw	127
  6789     0C41  05A5               	andwf	___ftpack@arg+1,f
  6790     0C42  30FF               	movlw	255
  6791     0C43  05A6               	andwf	___ftpack@arg+2,f
  6792     0C44                     l838:
  6793     0C44  1003               	clrc
  6794     0C45  0CA7               	rrf	___ftpack@exp,f
  6795     0C46                     l2152:
  6796     0C46  0827               	movf	___ftpack@exp,w
  6797     0C47  00A9               	movwf	??___ftpack
  6798     0C48  01AA               	clrf	??___ftpack+1
  6799     0C49  01AB               	clrf	??___ftpack+2
  6800     0C4A  3010               	movlw	16
  6801     0C4B                     u1935:
  6802     0C4B  1003               	clrc
  6803     0C4C  0DA9               	rlf	??___ftpack,f
  6804     0C4D  0DAA               	rlf	??___ftpack+1,f
  6805     0C4E  0DAB               	rlf	??___ftpack+2,f
  6806     0C4F                     u1930:
  6807     0C4F  3EFF               	addlw	-1
  6808     0C50  1D03               	skipz
  6809     0C51  2C4B               	goto	u1935
  6810     0C52  0829               	movf	??___ftpack,w
  6811     0C53  04A4               	iorwf	___ftpack@arg,f
  6812     0C54  082A               	movf	??___ftpack+1,w
  6813     0C55  04A5               	iorwf	___ftpack@arg+1,f
  6814     0C56  082B               	movf	??___ftpack+2,w
  6815     0C57  04A6               	iorwf	___ftpack@arg+2,f
  6816     0C58                     l2154:
  6817     0C58  0828               	movf	___ftpack@sign,w
  6818     0C59  1903               	btfsc	3,2
  6819     0C5A  2C5C               	goto	u1941
  6820     0C5B  2C5D               	goto	u1940
  6821     0C5C                     u1941:
  6822     0C5C  2C5E               	goto	l839
  6823     0C5D                     u1940:
  6824     0C5D                     l2156:
  6825     0C5D  17A6               	bsf	___ftpack@arg+2,7
  6826     0C5E                     l839:
  6827     0C5E                     l826:
  6828     0C5E  0008               	return
  6829     0C5F                     __end_of___ftpack:
  6830                           
  6831                           	psect	text37
  6832     0053                     __ptext37:	
  6833 ;; *************** function _pid_pid *****************
  6834 ;; Defined at:
  6835 ;;		line 45 in file "pid.c"
  6836 ;; Parameters:    Size  Location     Type
  6837 ;;		None
  6838 ;; Auto vars:     Size  Location     Type
  6839 ;;		None
  6840 ;; Return value:  Size  Location     Type
  6841 ;;                  1    wreg      void 
  6842 ;; Registers used:
  6843 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6844 ;; Tracked objects:
  6845 ;;		On entry : 0/0
  6846 ;;		On exit  : 0/0
  6847 ;;		Unchanged: 0/0
  6848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6849 ;;      Params:         0       0       0       0       0
  6850 ;;      Locals:         0       4       0       0       0
  6851 ;;      Temps:          0       8       0       0       0
  6852 ;;      Totals:         0      12       0       0       0
  6853 ;;Total ram usage:       12 bytes
  6854 ;; Hardware stack levels used: 1
  6855 ;; Hardware stack levels required when called: 5
  6856 ;; This function calls:
  6857 ;;		___aldiv
  6858 ;;		___lmul
  6859 ;;		_mot_setExcitation
  6860 ;;		_pid_scaleExcitation
  6861 ;;		_pos_getCurrentPosition
  6862 ;; This function is called by:
  6863 ;;		_pid_task
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867     0053                     _pid_pid:	
  6868                           ;psect for function _pid_pid
  6869                           
  6870     0053                     l2616:	
  6871                           ;incstack = 0
  6872                           ; Regs used in _pid_pid: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6873                           
  6874                           
  6875                           ;pid.c: 49:   RA4 = 1;
  6876     0053  1283               	bcf	3,5	;RP0=0, select bank0
  6877     0054  1303               	bcf	3,6	;RP1=0, select bank0
  6878     0055  1605               	bsf	5,4	;volatile
  6879     0056                     l2618:
  6880                           
  6881                           ;pid.c: 53:   currentPosition = pos_getCurrentPosition();
  6882     0056  160A  118A  2751  120A  118A  	fcall	_pos_getCurrentPosition
  6883     005B  1283               	bcf	3,5	;RP0=0, select bank0
  6884     005C  1303               	bcf	3,6	;RP1=0, select bank0
  6885     005D  0827               	movf	?_pos_getCurrentPosition+3,w
  6886     005E  1683               	bsf	3,5	;RP0=1, select bank1
  6887     005F  1303               	bcf	3,6	;RP1=0, select bank1
  6888     0060  00CF               	movwf	(_currentPosition+3)^(0+128)
  6889     0061  1283               	bcf	3,5	;RP0=0, select bank0
  6890     0062  1303               	bcf	3,6	;RP1=0, select bank0
  6891     0063  0826               	movf	?_pos_getCurrentPosition+2,w
  6892     0064  1683               	bsf	3,5	;RP0=1, select bank1
  6893     0065  1303               	bcf	3,6	;RP1=0, select bank1
  6894     0066  00CE               	movwf	(_currentPosition+2)^(0+128)
  6895     0067  1283               	bcf	3,5	;RP0=0, select bank0
  6896     0068  1303               	bcf	3,6	;RP1=0, select bank0
  6897     0069  0825               	movf	?_pos_getCurrentPosition+1,w
  6898     006A  1683               	bsf	3,5	;RP0=1, select bank1
  6899     006B  1303               	bcf	3,6	;RP1=0, select bank1
  6900     006C  00CD               	movwf	(_currentPosition+1)^(0+128)
  6901     006D  1283               	bcf	3,5	;RP0=0, select bank0
  6902     006E  1303               	bcf	3,6	;RP1=0, select bank0
  6903     006F  0824               	movf	?_pos_getCurrentPosition,w
  6904     0070  1683               	bsf	3,5	;RP0=1, select bank1
  6905     0071  1303               	bcf	3,6	;RP1=0, select bank1
  6906     0072  00CC               	movwf	_currentPosition^(0+128)
  6907     0073                     l2620:
  6908                           
  6909                           ;pid.c: 54:   error = -setPoint - (currentPosition/5);
  6910     0073  3000               	movlw	0
  6911     0074  1283               	bcf	3,5	;RP0=0, select bank0
  6912     0075  1303               	bcf	3,6	;RP1=0, select bank0
  6913     0076  00A7               	movwf	___aldiv@divisor+3
  6914     0077  3000               	movlw	0
  6915     0078  00A6               	movwf	___aldiv@divisor+2
  6916     0079  3000               	movlw	0
  6917     007A  00A5               	movwf	___aldiv@divisor+1
  6918     007B  3005               	movlw	5
  6919     007C  00A4               	movwf	___aldiv@divisor
  6920     007D  1683               	bsf	3,5	;RP0=1, select bank1
  6921     007E  1303               	bcf	3,6	;RP1=0, select bank1
  6922     007F  084F               	movf	(_currentPosition+3)^(0+128),w
  6923     0080  1283               	bcf	3,5	;RP0=0, select bank0
  6924     0081  1303               	bcf	3,6	;RP1=0, select bank0
  6925     0082  00AB               	movwf	___aldiv@dividend+3
  6926     0083  1683               	bsf	3,5	;RP0=1, select bank1
  6927     0084  1303               	bcf	3,6	;RP1=0, select bank1
  6928     0085  084E               	movf	(_currentPosition+2)^(0+128),w
  6929     0086  1283               	bcf	3,5	;RP0=0, select bank0
  6930     0087  1303               	bcf	3,6	;RP1=0, select bank0
  6931     0088  00AA               	movwf	___aldiv@dividend+2
  6932     0089  1683               	bsf	3,5	;RP0=1, select bank1
  6933     008A  1303               	bcf	3,6	;RP1=0, select bank1
  6934     008B  084D               	movf	(_currentPosition+1)^(0+128),w
  6935     008C  1283               	bcf	3,5	;RP0=0, select bank0
  6936     008D  1303               	bcf	3,6	;RP1=0, select bank0
  6937     008E  00A9               	movwf	___aldiv@dividend+1
  6938     008F  1683               	bsf	3,5	;RP0=1, select bank1
  6939     0090  1303               	bcf	3,6	;RP1=0, select bank1
  6940     0091  084C               	movf	_currentPosition^(0+128),w
  6941     0092  1283               	bcf	3,5	;RP0=0, select bank0
  6942     0093  1303               	bcf	3,6	;RP1=0, select bank0
  6943     0094  00A8               	movwf	___aldiv@dividend
  6944     0095  120A  158A  24E7  120A  118A  	fcall	___aldiv
  6945     009A  1283               	bcf	3,5	;RP0=0, select bank0
  6946     009B  1303               	bcf	3,6	;RP1=0, select bank0
  6947     009C  0824               	movf	?___aldiv,w
  6948     009D  1683               	bsf	3,5	;RP0=1, select bank1
  6949     009E  1303               	bcf	3,6	;RP1=0, select bank1
  6950     009F  0748               	addwf	_setPoint^(0+128),w
  6951     00A0  1283               	bcf	3,5	;RP0=0, select bank0
  6952     00A1  1303               	bcf	3,6	;RP1=0, select bank0
  6953     00A2  00C0               	movwf	??_pid_pid
  6954     00A3  3000               	movlw	0
  6955     00A4  1803               	skipnc
  6956     00A5  3001               	movlw	1
  6957     00A6  0725               	addwf	?___aldiv+1,w
  6958     00A7  01C2               	clrf	??_pid_pid+2
  6959     00A8  1803               	skipnc
  6960     00A9  0AC2               	incf	??_pid_pid+2,f
  6961     00AA  1683               	bsf	3,5	;RP0=1, select bank1
  6962     00AB  1303               	bcf	3,6	;RP1=0, select bank1
  6963     00AC  0749               	addwf	(_setPoint+1)^(0+128),w
  6964     00AD  1283               	bcf	3,5	;RP0=0, select bank0
  6965     00AE  1303               	bcf	3,6	;RP1=0, select bank0
  6966     00AF  00C1               	movwf	??_pid_pid+1
  6967     00B0  1803               	skipnc
  6968     00B1  0AC2               	incf	??_pid_pid+2,f
  6969     00B2  0826               	movf	?___aldiv+2,w
  6970     00B3  0742               	addwf	??_pid_pid+2,w
  6971     00B4  01C3               	clrf	??_pid_pid+3
  6972     00B5  1803               	skipnc
  6973     00B6  0AC3               	incf	??_pid_pid+3,f
  6974     00B7  1683               	bsf	3,5	;RP0=1, select bank1
  6975     00B8  1303               	bcf	3,6	;RP1=0, select bank1
  6976     00B9  074A               	addwf	(_setPoint+2)^(0+128),w
  6977     00BA  1283               	bcf	3,5	;RP0=0, select bank0
  6978     00BB  1303               	bcf	3,6	;RP1=0, select bank0
  6979     00BC  00C2               	movwf	??_pid_pid+2
  6980     00BD  1803               	skipnc
  6981     00BE  0AC3               	incf	??_pid_pid+3,f
  6982     00BF  0827               	movf	?___aldiv+3,w
  6983     00C0  0743               	addwf	??_pid_pid+3,w
  6984     00C1  1683               	bsf	3,5	;RP0=1, select bank1
  6985     00C2  1303               	bcf	3,6	;RP1=0, select bank1
  6986     00C3  074B               	addwf	(_setPoint+3)^(0+128),w
  6987     00C4  1283               	bcf	3,5	;RP0=0, select bank0
  6988     00C5  1303               	bcf	3,6	;RP1=0, select bank0
  6989     00C6  00C3               	movwf	??_pid_pid+3
  6990     00C7  0940               	comf	??_pid_pid,w
  6991     00C8  1683               	bsf	3,5	;RP0=1, select bank1
  6992     00C9  1303               	bcf	3,6	;RP1=0, select bank1
  6993     00CA  00B0               	movwf	_error^(0+128)
  6994     00CB  1283               	bcf	3,5	;RP0=0, select bank0
  6995     00CC  1303               	bcf	3,6	;RP1=0, select bank0
  6996     00CD  0941               	comf	??_pid_pid+1,w
  6997     00CE  1683               	bsf	3,5	;RP0=1, select bank1
  6998     00CF  1303               	bcf	3,6	;RP1=0, select bank1
  6999     00D0  00B1               	movwf	(_error+1)^(0+128)
  7000     00D1  1283               	bcf	3,5	;RP0=0, select bank0
  7001     00D2  1303               	bcf	3,6	;RP1=0, select bank0
  7002     00D3  0942               	comf	??_pid_pid+2,w
  7003     00D4  1683               	bsf	3,5	;RP0=1, select bank1
  7004     00D5  1303               	bcf	3,6	;RP1=0, select bank1
  7005     00D6  00B2               	movwf	(_error+2)^(0+128)
  7006     00D7  1283               	bcf	3,5	;RP0=0, select bank0
  7007     00D8  1303               	bcf	3,6	;RP1=0, select bank0
  7008     00D9  0943               	comf	??_pid_pid+3,w
  7009     00DA  1683               	bsf	3,5	;RP0=1, select bank1
  7010     00DB  1303               	bcf	3,6	;RP1=0, select bank1
  7011     00DC  00B3               	movwf	(_error+3)^(0+128)
  7012     00DD  0AB0               	incf	_error^(0+128),f
  7013     00DE  1903               	skipnz
  7014     00DF  0AB1               	incf	(_error+1)^(0+128),f
  7015     00E0  1903               	skipnz
  7016     00E1  0AB2               	incf	(_error+2)^(0+128),f
  7017     00E2  1903               	skipnz
  7018     00E3  0AB3               	incf	(_error+3)^(0+128),f
  7019     00E4                     l2622:
  7020                           
  7021                           ;pid.c: 56:   integralError += (kIntegral * (half_PID_PERIOD)) * (error + previousError)
      +                          ;
  7022     00E4  1683               	bsf	3,5	;RP0=1, select bank3
  7023     00E5  1703               	bsf	3,6	;RP1=1, select bank3
  7024     00E6  084E               	movf	(_kIntegral+3)^(0+384),w
  7025     00E7  1283               	bcf	3,5	;RP0=0, select bank0
  7026     00E8  1303               	bcf	3,6	;RP1=0, select bank0
  7027     00E9  00B6               	movwf	___lmul@multiplier+3
  7028     00EA  1683               	bsf	3,5	;RP0=1, select bank3
  7029     00EB  1703               	bsf	3,6	;RP1=1, select bank3
  7030     00EC  084D               	movf	(_kIntegral+2)^(0+384),w
  7031     00ED  1283               	bcf	3,5	;RP0=0, select bank0
  7032     00EE  1303               	bcf	3,6	;RP1=0, select bank0
  7033     00EF  00B5               	movwf	___lmul@multiplier+2
  7034     00F0  1683               	bsf	3,5	;RP0=1, select bank3
  7035     00F1  1703               	bsf	3,6	;RP1=1, select bank3
  7036     00F2  084C               	movf	(_kIntegral+1)^(0+384),w
  7037     00F3  1283               	bcf	3,5	;RP0=0, select bank0
  7038     00F4  1303               	bcf	3,6	;RP1=0, select bank0
  7039     00F5  00B4               	movwf	___lmul@multiplier+1
  7040     00F6  1683               	bsf	3,5	;RP0=1, select bank3
  7041     00F7  1703               	bsf	3,6	;RP1=1, select bank3
  7042     00F8  084B               	movf	_kIntegral^(0+384),w
  7043     00F9  1283               	bcf	3,5	;RP0=0, select bank0
  7044     00FA  1303               	bcf	3,6	;RP1=0, select bank0
  7045     00FB  00B3               	movwf	___lmul@multiplier
  7046     00FC  3000               	movlw	0
  7047     00FD  00BA               	movwf	___lmul@multiplicand+3
  7048     00FE  3000               	movlw	0
  7049     00FF  00B9               	movwf	___lmul@multiplicand+2
  7050     0100  3000               	movlw	0
  7051     0101  00B8               	movwf	___lmul@multiplicand+1
  7052     0102  3003               	movlw	3
  7053     0103  00B7               	movwf	___lmul@multiplicand
  7054     0104  120A  158A  21C6  120A  118A  	fcall	___lmul
  7055     0109  1283               	bcf	3,5	;RP0=0, select bank0
  7056     010A  1303               	bcf	3,6	;RP1=0, select bank0
  7057     010B  0836               	movf	?___lmul+3,w
  7058     010C  00CB               	movwf	_pid_pid$1134+3
  7059     010D  0835               	movf	?___lmul+2,w
  7060     010E  00CA               	movwf	_pid_pid$1134+2
  7061     010F  0834               	movf	?___lmul+1,w
  7062     0110  00C9               	movwf	_pid_pid$1134+1
  7063     0111  0833               	movf	?___lmul,w
  7064     0112  00C8               	movwf	_pid_pid$1134
  7065     0113                     l2624:
  7066                           
  7067                           ;pid.c: 56:   integralError += (kIntegral * (half_PID_PERIOD)) * (error + previousError)
      +                          ;
  7068     0113  1683               	bsf	3,5	;RP0=1, select bank1
  7069     0114  1303               	bcf	3,6	;RP1=0, select bank1
  7070     0115  0830               	movf	_error^(0+128),w
  7071     0116  073C               	addwf	_previousError^(0+128),w
  7072     0117  1283               	bcf	3,5	;RP0=0, select bank0
  7073     0118  1303               	bcf	3,6	;RP1=0, select bank0
  7074     0119  00C0               	movwf	??_pid_pid
  7075     011A  3000               	movlw	0
  7076     011B  1803               	skipnc
  7077     011C  3001               	movlw	1
  7078     011D  1683               	bsf	3,5	;RP0=1, select bank1
  7079     011E  1303               	bcf	3,6	;RP1=0, select bank1
  7080     011F  0731               	addwf	(_error+1)^(0+128),w
  7081     0120  1283               	bcf	3,5	;RP0=0, select bank0
  7082     0121  1303               	bcf	3,6	;RP1=0, select bank0
  7083     0122  01C2               	clrf	??_pid_pid+2
  7084     0123  1803               	skipnc
  7085     0124  0AC2               	incf	??_pid_pid+2,f
  7086     0125  1683               	bsf	3,5	;RP0=1, select bank1
  7087     0126  1303               	bcf	3,6	;RP1=0, select bank1
  7088     0127  073D               	addwf	(_previousError+1)^(0+128),w
  7089     0128  1283               	bcf	3,5	;RP0=0, select bank0
  7090     0129  1303               	bcf	3,6	;RP1=0, select bank0
  7091     012A  00C1               	movwf	??_pid_pid+1
  7092     012B  1803               	skipnc
  7093     012C  0AC2               	incf	??_pid_pid+2,f
  7094     012D  1683               	bsf	3,5	;RP0=1, select bank1
  7095     012E  1303               	bcf	3,6	;RP1=0, select bank1
  7096     012F  0832               	movf	(_error+2)^(0+128),w
  7097     0130  1283               	bcf	3,5	;RP0=0, select bank0
  7098     0131  1303               	bcf	3,6	;RP1=0, select bank0
  7099     0132  0742               	addwf	??_pid_pid+2,w
  7100     0133  01C3               	clrf	??_pid_pid+3
  7101     0134  1803               	skipnc
  7102     0135  0AC3               	incf	??_pid_pid+3,f
  7103     0136  1683               	bsf	3,5	;RP0=1, select bank1
  7104     0137  1303               	bcf	3,6	;RP1=0, select bank1
  7105     0138  073E               	addwf	(_previousError+2)^(0+128),w
  7106     0139  1283               	bcf	3,5	;RP0=0, select bank0
  7107     013A  1303               	bcf	3,6	;RP1=0, select bank0
  7108     013B  00C2               	movwf	??_pid_pid+2
  7109     013C  1803               	skipnc
  7110     013D  0AC3               	incf	??_pid_pid+3,f
  7111     013E  1683               	bsf	3,5	;RP0=1, select bank1
  7112     013F  1303               	bcf	3,6	;RP1=0, select bank1
  7113     0140  0833               	movf	(_error+3)^(0+128),w
  7114     0141  1283               	bcf	3,5	;RP0=0, select bank0
  7115     0142  1303               	bcf	3,6	;RP1=0, select bank0
  7116     0143  0743               	addwf	??_pid_pid+3,w
  7117     0144  1683               	bsf	3,5	;RP0=1, select bank1
  7118     0145  1303               	bcf	3,6	;RP1=0, select bank1
  7119     0146  073F               	addwf	(_previousError+3)^(0+128),w
  7120     0147  1283               	bcf	3,5	;RP0=0, select bank0
  7121     0148  1303               	bcf	3,6	;RP1=0, select bank0
  7122     0149  00C3               	movwf	??_pid_pid+3
  7123     014A  0843               	movf	??_pid_pid+3,w
  7124     014B  00B6               	movwf	___lmul@multiplier+3
  7125     014C  0842               	movf	??_pid_pid+2,w
  7126     014D  00B5               	movwf	___lmul@multiplier+2
  7127     014E  0841               	movf	??_pid_pid+1,w
  7128     014F  00B4               	movwf	___lmul@multiplier+1
  7129     0150  0840               	movf	??_pid_pid,w
  7130     0151  00B3               	movwf	___lmul@multiplier
  7131     0152  084B               	movf	_pid_pid$1134+3,w
  7132     0153  00BA               	movwf	___lmul@multiplicand+3
  7133     0154  084A               	movf	_pid_pid$1134+2,w
  7134     0155  00B9               	movwf	___lmul@multiplicand+2
  7135     0156  0849               	movf	_pid_pid$1134+1,w
  7136     0157  00B8               	movwf	___lmul@multiplicand+1
  7137     0158  0848               	movf	_pid_pid$1134,w
  7138     0159  00B7               	movwf	___lmul@multiplicand
  7139     015A  120A  158A  21C6  120A  118A  	fcall	___lmul
  7140     015F  1283               	bcf	3,5	;RP0=0, select bank0
  7141     0160  1303               	bcf	3,6	;RP1=0, select bank0
  7142     0161  0833               	movf	?___lmul,w
  7143     0162  1683               	bsf	3,5	;RP0=1, select bank1
  7144     0163  1303               	bcf	3,6	;RP1=0, select bank1
  7145     0164  07C0               	addwf	_integralError^(0+128),f
  7146     0165  1283               	bcf	3,5	;RP0=0, select bank0
  7147     0166  1303               	bcf	3,6	;RP1=0, select bank0
  7148     0167  0834               	movf	?___lmul+1,w
  7149     0168  1103               	clrz
  7150     0169  1803               	skipnc
  7151     016A  3E01               	addlw	1
  7152     016B  1903               	skipnz
  7153     016C  2970               	goto	u2971
  7154     016D  1683               	bsf	3,5	;RP0=1, select bank1
  7155     016E  1303               	bcf	3,6	;RP1=0, select bank1
  7156     016F  07C1               	addwf	(_integralError+1)^(0+128),f
  7157     0170                     u2971:
  7158     0170  1283               	bcf	3,5	;RP0=0, select bank0
  7159     0171  1303               	bcf	3,6	;RP1=0, select bank0
  7160     0172  0835               	movf	?___lmul+2,w
  7161     0173  1103               	clrz
  7162     0174  1803               	skipnc
  7163     0175  3E01               	addlw	1
  7164     0176  1903               	skipnz
  7165     0177  297B               	goto	u2972
  7166     0178  1683               	bsf	3,5	;RP0=1, select bank1
  7167     0179  1303               	bcf	3,6	;RP1=0, select bank1
  7168     017A  07C2               	addwf	(_integralError+2)^(0+128),f
  7169     017B                     u2972:
  7170     017B  1283               	bcf	3,5	;RP0=0, select bank0
  7171     017C  1303               	bcf	3,6	;RP1=0, select bank0
  7172     017D  0836               	movf	?___lmul+3,w
  7173     017E  1103               	clrz
  7174     017F  1803               	skipnc
  7175     0180  3E01               	addlw	1
  7176     0181  1903               	skipnz
  7177     0182  2986               	goto	u2973
  7178     0183  1683               	bsf	3,5	;RP0=1, select bank1
  7179     0184  1303               	bcf	3,6	;RP1=0, select bank1
  7180     0185  07C3               	addwf	(_integralError+3)^(0+128),f
  7181     0186                     u2973:
  7182     0186  1283               	bcf	3,5	;RP0=0, select bank0
  7183     0187  1303               	bcf	3,6	;RP1=0, select bank0
  7184     0188  1683               	bsf	3,5	;RP0=1, select bank1
  7185     0189  1303               	bcf	3,6	;RP1=0, select bank1
  7186     018A                     l2626:
  7187                           
  7188                           ;pid.c: 57:   integralErrorScaled = integralError >> 10;
  7189     018A  0840               	movf	_integralError^(0+128),w
  7190     018B  1283               	bcf	3,5	;RP0=0, select bank0
  7191     018C  1303               	bcf	3,6	;RP1=0, select bank0
  7192     018D  00C0               	movwf	??_pid_pid
  7193     018E  1683               	bsf	3,5	;RP0=1, select bank1
  7194     018F  1303               	bcf	3,6	;RP1=0, select bank1
  7195     0190  0841               	movf	(_integralError+1)^(0+128),w
  7196     0191  1283               	bcf	3,5	;RP0=0, select bank0
  7197     0192  1303               	bcf	3,6	;RP1=0, select bank0
  7198     0193  00C1               	movwf	??_pid_pid+1
  7199     0194  1683               	bsf	3,5	;RP0=1, select bank1
  7200     0195  1303               	bcf	3,6	;RP1=0, select bank1
  7201     0196  0842               	movf	(_integralError+2)^(0+128),w
  7202     0197  1283               	bcf	3,5	;RP0=0, select bank0
  7203     0198  1303               	bcf	3,6	;RP1=0, select bank0
  7204     0199  00C2               	movwf	??_pid_pid+2
  7205     019A  1683               	bsf	3,5	;RP0=1, select bank1
  7206     019B  1303               	bcf	3,6	;RP1=0, select bank1
  7207     019C  0843               	movf	(_integralError+3)^(0+128),w
  7208     019D  1283               	bcf	3,5	;RP0=0, select bank0
  7209     019E  1303               	bcf	3,6	;RP1=0, select bank0
  7210     019F  00C3               	movwf	??_pid_pid+3
  7211     01A0  300A               	movlw	10
  7212     01A1  00C4               	movwf	??_pid_pid+4
  7213     01A2                     u2985:
  7214     01A2  0D43               	rlf	??_pid_pid+3,w
  7215     01A3  0CC3               	rrf	??_pid_pid+3,f
  7216     01A4  0CC2               	rrf	??_pid_pid+2,f
  7217     01A5  0CC1               	rrf	??_pid_pid+1,f
  7218     01A6  0CC0               	rrf	??_pid_pid,f
  7219     01A7                     u2980:
  7220     01A7  0BC4               	decfsz	??_pid_pid+4,f
  7221     01A8  29A2               	goto	u2985
  7222     01A9  0843               	movf	??_pid_pid+3,w
  7223     01AA  1683               	bsf	3,5	;RP0=1, select bank1
  7224     01AB  1303               	bcf	3,6	;RP1=0, select bank1
  7225     01AC  00C7               	movwf	(_integralErrorScaled+3)^(0+128)
  7226     01AD  1283               	bcf	3,5	;RP0=0, select bank0
  7227     01AE  1303               	bcf	3,6	;RP1=0, select bank0
  7228     01AF  0842               	movf	??_pid_pid+2,w
  7229     01B0  1683               	bsf	3,5	;RP0=1, select bank1
  7230     01B1  1303               	bcf	3,6	;RP1=0, select bank1
  7231     01B2  00C6               	movwf	(_integralErrorScaled+2)^(0+128)
  7232     01B3  1283               	bcf	3,5	;RP0=0, select bank0
  7233     01B4  1303               	bcf	3,6	;RP1=0, select bank0
  7234     01B5  0841               	movf	??_pid_pid+1,w
  7235     01B6  1683               	bsf	3,5	;RP0=1, select bank1
  7236     01B7  1303               	bcf	3,6	;RP1=0, select bank1
  7237     01B8  00C5               	movwf	(_integralErrorScaled+1)^(0+128)
  7238     01B9  1283               	bcf	3,5	;RP0=0, select bank0
  7239     01BA  1303               	bcf	3,6	;RP1=0, select bank0
  7240     01BB  0840               	movf	??_pid_pid,w
  7241     01BC  1683               	bsf	3,5	;RP0=1, select bank1
  7242     01BD  1303               	bcf	3,6	;RP1=0, select bank1
  7243     01BE  00C4               	movwf	_integralErrorScaled^(0+128)
  7244     01BF                     l2628:
  7245                           
  7246                           ;pid.c: 59:   if (integralErrorScaled > 1024) {
  7247     01BF  1BC7               	btfsc	(_integralErrorScaled+3)^(0+128),7
  7248     01C0  29D2               	goto	u2991
  7249     01C1  0847               	movf	(_integralErrorScaled+3)^(0+128),w
  7250     01C2  1D03               	btfss	3,2
  7251     01C3  29D3               	goto	u2990
  7252     01C4  0846               	movf	(_integralErrorScaled+2)^(0+128),w
  7253     01C5  1D03               	btfss	3,2
  7254     01C6  29D3               	goto	u2990
  7255     01C7  3004               	movlw	4
  7256     01C8  0245               	subwf	(_integralErrorScaled+1)^(0+128),w
  7257     01C9  1D03               	skipz
  7258     01CA  29CF               	goto	u2993
  7259     01CB  3001               	movlw	1
  7260     01CC  0244               	subwf	_integralErrorScaled^(0+128),w
  7261     01CD  1D03               	skipz
  7262     01CE  29CF               	goto	u2993
  7263     01CF                     u2993:
  7264     01CF  1C03               	btfss	3,0
  7265     01D0  29D2               	goto	u2991
  7266     01D1  29D3               	goto	u2990
  7267     01D2                     u2991:
  7268     01D2  29DE               	goto	l2632
  7269     01D3                     u2990:
  7270     01D3                     l2630:
  7271                           
  7272                           ;pid.c: 60:       integralErrorScaled = 1024;
  7273     01D3  3000               	movlw	0
  7274     01D4  1683               	bsf	3,5	;RP0=1, select bank1
  7275     01D5  1303               	bcf	3,6	;RP1=0, select bank1
  7276     01D6  00C7               	movwf	(_integralErrorScaled+3)^(0+128)
  7277     01D7  3000               	movlw	0
  7278     01D8  00C6               	movwf	(_integralErrorScaled+2)^(0+128)
  7279     01D9  3004               	movlw	4
  7280     01DA  00C5               	movwf	(_integralErrorScaled+1)^(0+128)
  7281     01DB  3000               	movlw	0
  7282     01DC  00C4               	movwf	_integralErrorScaled^(0+128)
  7283                           
  7284                           ;pid.c: 61:   }
  7285     01DD  2A00               	goto	l2636
  7286     01DE                     l2632:
  7287     01DE  1683               	bsf	3,5	;RP0=1, select bank1
  7288     01DF  1303               	bcf	3,6	;RP1=0, select bank1
  7289     01E0  1FC7               	btfss	(_integralErrorScaled+3)^(0+128),7
  7290     01E1  29F5               	goto	u3001
  7291     01E2  30FF               	movlw	255
  7292     01E3  0247               	subwf	(_integralErrorScaled+3)^(0+128),w
  7293     01E4  1D03               	skipz
  7294     01E5  29F2               	goto	u3003
  7295     01E6  30FF               	movlw	255
  7296     01E7  0246               	subwf	(_integralErrorScaled+2)^(0+128),w
  7297     01E8  1D03               	skipz
  7298     01E9  29F2               	goto	u3003
  7299     01EA  30FC               	movlw	252
  7300     01EB  0245               	subwf	(_integralErrorScaled+1)^(0+128),w
  7301     01EC  1D03               	skipz
  7302     01ED  29F2               	goto	u3003
  7303     01EE  3000               	movlw	0
  7304     01EF  0244               	subwf	_integralErrorScaled^(0+128),w
  7305     01F0  1D03               	skipz
  7306     01F1  29F2               	goto	u3003
  7307     01F2                     u3003:
  7308     01F2  1803               	btfsc	3,0
  7309     01F3  29F5               	goto	u3001
  7310     01F4  29F6               	goto	u3000
  7311     01F5                     u3001:
  7312     01F5  2A00               	goto	l2636
  7313     01F6                     u3000:
  7314     01F6                     l2634:
  7315                           
  7316                           ;pid.c: 64:       integralErrorScaled = -1024;
  7317     01F6  30FF               	movlw	255
  7318     01F7  1683               	bsf	3,5	;RP0=1, select bank1
  7319     01F8  1303               	bcf	3,6	;RP1=0, select bank1
  7320     01F9  00C7               	movwf	(_integralErrorScaled+3)^(0+128)
  7321     01FA  30FF               	movlw	255
  7322     01FB  00C6               	movwf	(_integralErrorScaled+2)^(0+128)
  7323     01FC  30FC               	movlw	252
  7324     01FD  00C5               	movwf	(_integralErrorScaled+1)^(0+128)
  7325     01FE  3000               	movlw	0
  7326     01FF  00C4               	movwf	_integralErrorScaled^(0+128)
  7327     0200                     l2636:
  7328                           
  7329                           ;pid.c: 66:   activation = (kProportional * error) + (kDerivative *1000 * ((- currentPos
      +                          ition + previousPosition) / PID_PERIOD )) + integralErrorScaled;
  7330     0200  3000               	movlw	0
  7331     0201  1283               	bcf	3,5	;RP0=0, select bank0
  7332     0202  1303               	bcf	3,6	;RP1=0, select bank0
  7333     0203  00A7               	movwf	___aldiv@divisor+3
  7334     0204  3000               	movlw	0
  7335     0205  00A6               	movwf	___aldiv@divisor+2
  7336     0206  3000               	movlw	0
  7337     0207  00A5               	movwf	___aldiv@divisor+1
  7338     0208  3006               	movlw	6
  7339     0209  00A4               	movwf	___aldiv@divisor
  7340     020A  1683               	bsf	3,5	;RP0=1, select bank1
  7341     020B  1303               	bcf	3,6	;RP1=0, select bank1
  7342     020C  082C               	movf	_previousPosition^(0+128),w
  7343     020D  1283               	bcf	3,5	;RP0=0, select bank0
  7344     020E  1303               	bcf	3,6	;RP1=0, select bank0
  7345     020F  00C0               	movwf	??_pid_pid
  7346     0210  1683               	bsf	3,5	;RP0=1, select bank1
  7347     0211  1303               	bcf	3,6	;RP1=0, select bank1
  7348     0212  082D               	movf	(_previousPosition+1)^(0+128),w
  7349     0213  1283               	bcf	3,5	;RP0=0, select bank0
  7350     0214  1303               	bcf	3,6	;RP1=0, select bank0
  7351     0215  00C1               	movwf	??_pid_pid+1
  7352     0216  1683               	bsf	3,5	;RP0=1, select bank1
  7353     0217  1303               	bcf	3,6	;RP1=0, select bank1
  7354     0218  082E               	movf	(_previousPosition+2)^(0+128),w
  7355     0219  1283               	bcf	3,5	;RP0=0, select bank0
  7356     021A  1303               	bcf	3,6	;RP1=0, select bank0
  7357     021B  00C2               	movwf	??_pid_pid+2
  7358     021C  1683               	bsf	3,5	;RP0=1, select bank1
  7359     021D  1303               	bcf	3,6	;RP1=0, select bank1
  7360     021E  082F               	movf	(_previousPosition+3)^(0+128),w
  7361     021F  1283               	bcf	3,5	;RP0=0, select bank0
  7362     0220  1303               	bcf	3,6	;RP1=0, select bank0
  7363     0221  00C3               	movwf	??_pid_pid+3
  7364     0222  1683               	bsf	3,5	;RP0=1, select bank1
  7365     0223  1303               	bcf	3,6	;RP1=0, select bank1
  7366     0224  084C               	movf	_currentPosition^(0+128),w
  7367     0225  1283               	bcf	3,5	;RP0=0, select bank0
  7368     0226  1303               	bcf	3,6	;RP1=0, select bank0
  7369     0227  02C0               	subwf	??_pid_pid,f
  7370     0228  1683               	bsf	3,5	;RP0=1, select bank1
  7371     0229  1303               	bcf	3,6	;RP1=0, select bank1
  7372     022A  084D               	movf	(_currentPosition+1)^(0+128),w
  7373     022B  1C03               	skipc
  7374     022C  0F4D               	incfsz	(_currentPosition+1)^(0+128),w
  7375     022D  2A2F               	goto	u3011
  7376     022E  2A32               	goto	u3012
  7377     022F                     u3011:
  7378     022F  1283               	bcf	3,5	;RP0=0, select bank0
  7379     0230  1303               	bcf	3,6	;RP1=0, select bank0
  7380     0231  02C1               	subwf	??_pid_pid+1,f
  7381     0232                     u3012:
  7382     0232  1683               	bsf	3,5	;RP0=1, select bank1
  7383     0233  1303               	bcf	3,6	;RP1=0, select bank1
  7384     0234  084E               	movf	(_currentPosition+2)^(0+128),w
  7385     0235  1C03               	skipc
  7386     0236  0F4E               	incfsz	(_currentPosition+2)^(0+128),w
  7387     0237  2A39               	goto	u3013
  7388     0238  2A3C               	goto	u3014
  7389     0239                     u3013:
  7390     0239  1283               	bcf	3,5	;RP0=0, select bank0
  7391     023A  1303               	bcf	3,6	;RP1=0, select bank0
  7392     023B  02C2               	subwf	??_pid_pid+2,f
  7393     023C                     u3014:
  7394     023C  1683               	bsf	3,5	;RP0=1, select bank1
  7395     023D  1303               	bcf	3,6	;RP1=0, select bank1
  7396     023E  084F               	movf	(_currentPosition+3)^(0+128),w
  7397     023F  1C03               	skipc
  7398     0240  0F4F               	incfsz	(_currentPosition+3)^(0+128),w
  7399     0241  2A43               	goto	u3015
  7400     0242  2A46               	goto	u3016
  7401     0243                     u3015:
  7402     0243  1283               	bcf	3,5	;RP0=0, select bank0
  7403     0244  1303               	bcf	3,6	;RP1=0, select bank0
  7404     0245  02C3               	subwf	??_pid_pid+3,f
  7405     0246                     u3016:
  7406     0246  1683               	bsf	3,5	;RP0=1, select bank1
  7407     0247  1303               	bcf	3,6	;RP1=0, select bank1
  7408     0248  1283               	bcf	3,5	;RP0=0, select bank0
  7409     0249  1303               	bcf	3,6	;RP1=0, select bank0
  7410     024A  0843               	movf	??_pid_pid+3,w
  7411     024B  00AB               	movwf	___aldiv@dividend+3
  7412     024C  0842               	movf	??_pid_pid+2,w
  7413     024D  00AA               	movwf	___aldiv@dividend+2
  7414     024E  0841               	movf	??_pid_pid+1,w
  7415     024F  00A9               	movwf	___aldiv@dividend+1
  7416     0250  0840               	movf	??_pid_pid,w
  7417     0251  00A8               	movwf	___aldiv@dividend
  7418     0252  120A  158A  24E7  120A  118A  	fcall	___aldiv
  7419     0257  1283               	bcf	3,5	;RP0=0, select bank0
  7420     0258  1303               	bcf	3,6	;RP1=0, select bank0
  7421     0259  0827               	movf	?___aldiv+3,w
  7422     025A  00B6               	movwf	___lmul@multiplier+3
  7423     025B  0826               	movf	?___aldiv+2,w
  7424     025C  00B5               	movwf	___lmul@multiplier+2
  7425     025D  0825               	movf	?___aldiv+1,w
  7426     025E  00B4               	movwf	___lmul@multiplier+1
  7427     025F  0824               	movf	?___aldiv,w
  7428     0260  00B3               	movwf	___lmul@multiplier
  7429     0261  1683               	bsf	3,5	;RP0=1, select bank1
  7430     0262  1303               	bcf	3,6	;RP1=0, select bank1
  7431     0263  083B               	movf	(_kDerivative+3)^(0+128),w
  7432     0264  1283               	bcf	3,5	;RP0=0, select bank0
  7433     0265  1303               	bcf	3,6	;RP1=0, select bank0
  7434     0266  00BA               	movwf	___lmul@multiplicand+3
  7435     0267  1683               	bsf	3,5	;RP0=1, select bank1
  7436     0268  1303               	bcf	3,6	;RP1=0, select bank1
  7437     0269  083A               	movf	(_kDerivative+2)^(0+128),w
  7438     026A  1283               	bcf	3,5	;RP0=0, select bank0
  7439     026B  1303               	bcf	3,6	;RP1=0, select bank0
  7440     026C  00B9               	movwf	___lmul@multiplicand+2
  7441     026D  1683               	bsf	3,5	;RP0=1, select bank1
  7442     026E  1303               	bcf	3,6	;RP1=0, select bank1
  7443     026F  0839               	movf	(_kDerivative+1)^(0+128),w
  7444     0270  1283               	bcf	3,5	;RP0=0, select bank0
  7445     0271  1303               	bcf	3,6	;RP1=0, select bank0
  7446     0272  00B8               	movwf	___lmul@multiplicand+1
  7447     0273  1683               	bsf	3,5	;RP0=1, select bank1
  7448     0274  1303               	bcf	3,6	;RP1=0, select bank1
  7449     0275  0838               	movf	_kDerivative^(0+128),w
  7450     0276  1283               	bcf	3,5	;RP0=0, select bank0
  7451     0277  1303               	bcf	3,6	;RP1=0, select bank0
  7452     0278  00B7               	movwf	___lmul@multiplicand
  7453     0279  120A  158A  21C6  120A  118A  	fcall	___lmul
  7454     027E  1283               	bcf	3,5	;RP0=0, select bank0
  7455     027F  1303               	bcf	3,6	;RP1=0, select bank0
  7456     0280  0836               	movf	?___lmul+3,w
  7457     0281  00CB               	movwf	_pid_pid$1134+3
  7458     0282  0835               	movf	?___lmul+2,w
  7459     0283  00CA               	movwf	_pid_pid$1134+2
  7460     0284  0834               	movf	?___lmul+1,w
  7461     0285  00C9               	movwf	_pid_pid$1134+1
  7462     0286  0833               	movf	?___lmul,w
  7463     0287  00C8               	movwf	_pid_pid$1134
  7464     0288                     l2638:
  7465                           
  7466                           ;pid.c: 66:   activation = (kProportional * error) + (kDerivative *1000 * ((- currentPos
      +                          ition + previousPosition) / PID_PERIOD )) + integralErrorScaled;
  7467     0288  1683               	bsf	3,5	;RP0=1, select bank1
  7468     0289  1303               	bcf	3,6	;RP1=0, select bank1
  7469     028A  0844               	movf	_integralErrorScaled^(0+128),w
  7470     028B  1283               	bcf	3,5	;RP0=0, select bank0
  7471     028C  1303               	bcf	3,6	;RP1=0, select bank0
  7472     028D  00C0               	movwf	??_pid_pid
  7473     028E  1683               	bsf	3,5	;RP0=1, select bank1
  7474     028F  1303               	bcf	3,6	;RP1=0, select bank1
  7475     0290  0845               	movf	(_integralErrorScaled+1)^(0+128),w
  7476     0291  1283               	bcf	3,5	;RP0=0, select bank0
  7477     0292  1303               	bcf	3,6	;RP1=0, select bank0
  7478     0293  00C1               	movwf	??_pid_pid+1
  7479     0294  1683               	bsf	3,5	;RP0=1, select bank1
  7480     0295  1303               	bcf	3,6	;RP1=0, select bank1
  7481     0296  0846               	movf	(_integralErrorScaled+2)^(0+128),w
  7482     0297  1283               	bcf	3,5	;RP0=0, select bank0
  7483     0298  1303               	bcf	3,6	;RP1=0, select bank0
  7484     0299  00C2               	movwf	??_pid_pid+2
  7485     029A  1683               	bsf	3,5	;RP0=1, select bank1
  7486     029B  1303               	bcf	3,6	;RP1=0, select bank1
  7487     029C  0847               	movf	(_integralErrorScaled+3)^(0+128),w
  7488     029D  1283               	bcf	3,5	;RP0=0, select bank0
  7489     029E  1303               	bcf	3,6	;RP1=0, select bank0
  7490     029F  00C3               	movwf	??_pid_pid+3
  7491     02A0  1683               	bsf	3,5	;RP0=1, select bank3
  7492     02A1  1703               	bsf	3,6	;RP1=1, select bank3
  7493     02A2  0852               	movf	(_kProportional+3)^(0+384),w
  7494     02A3  1283               	bcf	3,5	;RP0=0, select bank0
  7495     02A4  1303               	bcf	3,6	;RP1=0, select bank0
  7496     02A5  00B6               	movwf	___lmul@multiplier+3
  7497     02A6  1683               	bsf	3,5	;RP0=1, select bank3
  7498     02A7  1703               	bsf	3,6	;RP1=1, select bank3
  7499     02A8  0851               	movf	(_kProportional+2)^(0+384),w
  7500     02A9  1283               	bcf	3,5	;RP0=0, select bank0
  7501     02AA  1303               	bcf	3,6	;RP1=0, select bank0
  7502     02AB  00B5               	movwf	___lmul@multiplier+2
  7503     02AC  1683               	bsf	3,5	;RP0=1, select bank3
  7504     02AD  1703               	bsf	3,6	;RP1=1, select bank3
  7505     02AE  0850               	movf	(_kProportional+1)^(0+384),w
  7506     02AF  1283               	bcf	3,5	;RP0=0, select bank0
  7507     02B0  1303               	bcf	3,6	;RP1=0, select bank0
  7508     02B1  00B4               	movwf	___lmul@multiplier+1
  7509     02B2  1683               	bsf	3,5	;RP0=1, select bank3
  7510     02B3  1703               	bsf	3,6	;RP1=1, select bank3
  7511     02B4  084F               	movf	_kProportional^(0+384),w
  7512     02B5  1283               	bcf	3,5	;RP0=0, select bank0
  7513     02B6  1303               	bcf	3,6	;RP1=0, select bank0
  7514     02B7  00B3               	movwf	___lmul@multiplier
  7515     02B8  1683               	bsf	3,5	;RP0=1, select bank1
  7516     02B9  1303               	bcf	3,6	;RP1=0, select bank1
  7517     02BA  0833               	movf	(_error+3)^(0+128),w
  7518     02BB  1283               	bcf	3,5	;RP0=0, select bank0
  7519     02BC  1303               	bcf	3,6	;RP1=0, select bank0
  7520     02BD  00BA               	movwf	___lmul@multiplicand+3
  7521     02BE  1683               	bsf	3,5	;RP0=1, select bank1
  7522     02BF  1303               	bcf	3,6	;RP1=0, select bank1
  7523     02C0  0832               	movf	(_error+2)^(0+128),w
  7524     02C1  1283               	bcf	3,5	;RP0=0, select bank0
  7525     02C2  1303               	bcf	3,6	;RP1=0, select bank0
  7526     02C3  00B9               	movwf	___lmul@multiplicand+2
  7527     02C4  1683               	bsf	3,5	;RP0=1, select bank1
  7528     02C5  1303               	bcf	3,6	;RP1=0, select bank1
  7529     02C6  0831               	movf	(_error+1)^(0+128),w
  7530     02C7  1283               	bcf	3,5	;RP0=0, select bank0
  7531     02C8  1303               	bcf	3,6	;RP1=0, select bank0
  7532     02C9  00B8               	movwf	___lmul@multiplicand+1
  7533     02CA  1683               	bsf	3,5	;RP0=1, select bank1
  7534     02CB  1303               	bcf	3,6	;RP1=0, select bank1
  7535     02CC  0830               	movf	_error^(0+128),w
  7536     02CD  1283               	bcf	3,5	;RP0=0, select bank0
  7537     02CE  1303               	bcf	3,6	;RP1=0, select bank0
  7538     02CF  00B7               	movwf	___lmul@multiplicand
  7539     02D0  120A  158A  21C6  120A  118A  	fcall	___lmul
  7540     02D5  1283               	bcf	3,5	;RP0=0, select bank0
  7541     02D6  1303               	bcf	3,6	;RP1=0, select bank0
  7542     02D7  0833               	movf	?___lmul,w
  7543     02D8  00C4               	movwf	??_pid_pid+4
  7544     02D9  0834               	movf	?___lmul+1,w
  7545     02DA  00C5               	movwf	??_pid_pid+5
  7546     02DB  0835               	movf	?___lmul+2,w
  7547     02DC  00C6               	movwf	??_pid_pid+6
  7548     02DD  0836               	movf	?___lmul+3,w
  7549     02DE  00C7               	movwf	??_pid_pid+7
  7550     02DF  084B               	movf	_pid_pid$1134+3,w
  7551     02E0  00B6               	movwf	___lmul@multiplier+3
  7552     02E1  084A               	movf	_pid_pid$1134+2,w
  7553     02E2  00B5               	movwf	___lmul@multiplier+2
  7554     02E3  0849               	movf	_pid_pid$1134+1,w
  7555     02E4  00B4               	movwf	___lmul@multiplier+1
  7556     02E5  0848               	movf	_pid_pid$1134,w
  7557     02E6  00B3               	movwf	___lmul@multiplier
  7558     02E7  3000               	movlw	0
  7559     02E8  00BA               	movwf	___lmul@multiplicand+3
  7560     02E9  3000               	movlw	0
  7561     02EA  00B9               	movwf	___lmul@multiplicand+2
  7562     02EB  3003               	movlw	3
  7563     02EC  00B8               	movwf	___lmul@multiplicand+1
  7564     02ED  30E8               	movlw	232
  7565     02EE  00B7               	movwf	___lmul@multiplicand
  7566     02EF  120A  158A  21C6  120A  118A  	fcall	___lmul
  7567     02F4  1283               	bcf	3,5	;RP0=0, select bank0
  7568     02F5  1303               	bcf	3,6	;RP1=0, select bank0
  7569     02F6  0833               	movf	?___lmul,w
  7570     02F7  07C4               	addwf	??_pid_pid+4,f
  7571     02F8  0834               	movf	?___lmul+1,w
  7572     02F9  1803               	skipnc
  7573     02FA  0F34               	incfsz	?___lmul+1,w
  7574     02FB  2AFD               	goto	u3020
  7575     02FC  2AFE               	goto	u3021
  7576     02FD                     u3020:
  7577     02FD  07C5               	addwf	??_pid_pid+5,f
  7578     02FE                     u3021:
  7579     02FE  0835               	movf	?___lmul+2,w
  7580     02FF  1803               	skipnc
  7581     0300  0F35               	incfsz	?___lmul+2,w
  7582     0301  2B03               	goto	u3022
  7583     0302  2B04               	goto	u3023
  7584     0303                     u3022:
  7585     0303  07C6               	addwf	??_pid_pid+6,f
  7586     0304                     u3023:
  7587     0304  0836               	movf	?___lmul+3,w
  7588     0305  1803               	skipnc
  7589     0306  0A36               	incf	?___lmul+3,w
  7590     0307  07C7               	addwf	??_pid_pid+7,f
  7591     0308  0844               	movf	??_pid_pid+4,w
  7592     0309  07C0               	addwf	??_pid_pid,f
  7593     030A  0845               	movf	??_pid_pid+5,w
  7594     030B  1803               	skipnc
  7595     030C  0F45               	incfsz	??_pid_pid+5,w
  7596     030D  2B0F               	goto	u3030
  7597     030E  2B10               	goto	u3031
  7598     030F                     u3030:
  7599     030F  07C1               	addwf	??_pid_pid+1,f
  7600     0310                     u3031:
  7601     0310  0846               	movf	??_pid_pid+6,w
  7602     0311  1803               	skipnc
  7603     0312  0F46               	incfsz	??_pid_pid+6,w
  7604     0313  2B15               	goto	u3032
  7605     0314  2B16               	goto	u3033
  7606     0315                     u3032:
  7607     0315  07C2               	addwf	??_pid_pid+2,f
  7608     0316                     u3033:
  7609     0316  0847               	movf	??_pid_pid+7,w
  7610     0317  1803               	skipnc
  7611     0318  0A47               	incf	??_pid_pid+7,w
  7612     0319  07C3               	addwf	??_pid_pid+3,f
  7613     031A  0843               	movf	??_pid_pid+3,w
  7614     031B  1683               	bsf	3,5	;RP0=1, select bank1
  7615     031C  1303               	bcf	3,6	;RP1=0, select bank1
  7616     031D  00B7               	movwf	(_activation+3)^(0+128)
  7617     031E  1283               	bcf	3,5	;RP0=0, select bank0
  7618     031F  1303               	bcf	3,6	;RP1=0, select bank0
  7619     0320  0842               	movf	??_pid_pid+2,w
  7620     0321  1683               	bsf	3,5	;RP0=1, select bank1
  7621     0322  1303               	bcf	3,6	;RP1=0, select bank1
  7622     0323  00B6               	movwf	(_activation+2)^(0+128)
  7623     0324  1283               	bcf	3,5	;RP0=0, select bank0
  7624     0325  1303               	bcf	3,6	;RP1=0, select bank0
  7625     0326  0841               	movf	??_pid_pid+1,w
  7626     0327  1683               	bsf	3,5	;RP0=1, select bank1
  7627     0328  1303               	bcf	3,6	;RP1=0, select bank1
  7628     0329  00B5               	movwf	(_activation+1)^(0+128)
  7629     032A  1283               	bcf	3,5	;RP0=0, select bank0
  7630     032B  1303               	bcf	3,6	;RP1=0, select bank0
  7631     032C  0840               	movf	??_pid_pid,w
  7632     032D  1683               	bsf	3,5	;RP0=1, select bank1
  7633     032E  1303               	bcf	3,6	;RP1=0, select bank1
  7634     032F  00B4               	movwf	_activation^(0+128)
  7635     0330                     l2640:
  7636                           
  7637                           ;pid.c: 67:   excitation = pid_scaleExcitation(activation);
  7638     0330  0837               	movf	(_activation+3)^(0+128),w
  7639     0331  1283               	bcf	3,5	;RP0=0, select bank0
  7640     0332  1303               	bcf	3,6	;RP1=0, select bank0
  7641     0333  00A7               	movwf	pid_scaleExcitation@activation+3
  7642     0334  1683               	bsf	3,5	;RP0=1, select bank1
  7643     0335  1303               	bcf	3,6	;RP1=0, select bank1
  7644     0336  0836               	movf	(_activation+2)^(0+128),w
  7645     0337  1283               	bcf	3,5	;RP0=0, select bank0
  7646     0338  1303               	bcf	3,6	;RP1=0, select bank0
  7647     0339  00A6               	movwf	pid_scaleExcitation@activation+2
  7648     033A  1683               	bsf	3,5	;RP0=1, select bank1
  7649     033B  1303               	bcf	3,6	;RP1=0, select bank1
  7650     033C  0835               	movf	(_activation+1)^(0+128),w
  7651     033D  1283               	bcf	3,5	;RP0=0, select bank0
  7652     033E  1303               	bcf	3,6	;RP1=0, select bank0
  7653     033F  00A5               	movwf	pid_scaleExcitation@activation+1
  7654     0340  1683               	bsf	3,5	;RP0=1, select bank1
  7655     0341  1303               	bcf	3,6	;RP1=0, select bank1
  7656     0342  0834               	movf	_activation^(0+128),w
  7657     0343  1283               	bcf	3,5	;RP0=0, select bank0
  7658     0344  1303               	bcf	3,6	;RP1=0, select bank0
  7659     0345  00A4               	movwf	pid_scaleExcitation@activation
  7660     0346  120A  158A  230B  120A  118A  	fcall	_pid_scaleExcitation
  7661     034B  1283               	bcf	3,5	;RP0=0, select bank0
  7662     034C  1303               	bcf	3,6	;RP1=0, select bank0
  7663     034D  0825               	movf	?_pid_scaleExcitation+1,w
  7664     034E  00E5               	movwf	_excitation+1
  7665     034F  0824               	movf	?_pid_scaleExcitation,w
  7666     0350  00E4               	movwf	_excitation
  7667     0351                     l2642:
  7668                           
  7669                           ;pid.c: 68:   (INTCONbits.GIE = 0);
  7670     0351  138B               	bcf	11,7	;volatile
  7671     0352                     l2644:
  7672                           
  7673                           ;pid.c: 69:   mot_setExcitation(excitation);
  7674     0352  0865               	movf	_excitation+1,w
  7675     0353  00A5               	movwf	mot_setExcitation@excitation+1
  7676     0354  0864               	movf	_excitation,w
  7677     0355  00A4               	movwf	mot_setExcitation@excitation
  7678     0356  120A  158A  2366  120A  118A  	fcall	_mot_setExcitation
  7679     035B                     l2646:
  7680                           
  7681                           ;pid.c: 70:   (INTCONbits.GIE = 1);
  7682     035B  178B               	bsf	11,7	;volatile
  7683                           
  7684                           ;pid.c: 76:   previousError = error;
  7685     035C  1683               	bsf	3,5	;RP0=1, select bank1
  7686     035D  1303               	bcf	3,6	;RP1=0, select bank1
  7687     035E  0833               	movf	(_error+3)^(0+128),w
  7688     035F  00BF               	movwf	(_previousError+3)^(0+128)
  7689     0360  0832               	movf	(_error+2)^(0+128),w
  7690     0361  00BE               	movwf	(_previousError+2)^(0+128)
  7691     0362  0831               	movf	(_error+1)^(0+128),w
  7692     0363  00BD               	movwf	(_previousError+1)^(0+128)
  7693     0364  0830               	movf	_error^(0+128),w
  7694     0365  00BC               	movwf	_previousError^(0+128)
  7695                           
  7696                           ;pid.c: 77:   previousPosition = currentPosition;
  7697     0366  084F               	movf	(_currentPosition+3)^(0+128),w
  7698     0367  00AF               	movwf	(_previousPosition+3)^(0+128)
  7699     0368  084E               	movf	(_currentPosition+2)^(0+128),w
  7700     0369  00AE               	movwf	(_previousPosition+2)^(0+128)
  7701     036A  084D               	movf	(_currentPosition+1)^(0+128),w
  7702     036B  00AD               	movwf	(_previousPosition+1)^(0+128)
  7703     036C  084C               	movf	_currentPosition^(0+128),w
  7704     036D  00AC               	movwf	_previousPosition^(0+128)
  7705     036E                     l2648:
  7706                           
  7707                           ;pid.c: 79:   RA4 = 0;
  7708     036E  1283               	bcf	3,5	;RP0=0, select bank0
  7709     036F  1303               	bcf	3,6	;RP1=0, select bank0
  7710     0370  1205               	bcf	5,4	;volatile
  7711     0371                     l90:
  7712     0371  0008               	return
  7713     0372                     __end_of_pid_pid:
  7714                           
  7715                           	psect	text38
  7716     1751                     __ptext38:	
  7717 ;; *************** function _pos_getCurrentPosition *****************
  7718 ;; Defined at:
  7719 ;;		line 52 in file "/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c"
  7720 ;; Parameters:    Size  Location     Type
  7721 ;;		None
  7722 ;; Auto vars:     Size  Location     Type
  7723 ;;		None
  7724 ;; Return value:  Size  Location     Type
  7725 ;;                  4    4[BANK0 ] long 
  7726 ;; Registers used:
  7727 ;;		wreg
  7728 ;; Tracked objects:
  7729 ;;		On entry : 0/0
  7730 ;;		On exit  : 0/0
  7731 ;;		Unchanged: 0/0
  7732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7733 ;;      Params:         0       4       0       0       0
  7734 ;;      Locals:         0       0       0       0       0
  7735 ;;      Temps:          0       0       0       0       0
  7736 ;;      Totals:         0       4       0       0       0
  7737 ;;Total ram usage:        4 bytes
  7738 ;; Hardware stack levels used: 1
  7739 ;; Hardware stack levels required when called: 4
  7740 ;; This function calls:
  7741 ;;		Nothing
  7742 ;; This function is called by:
  7743 ;;		_pid_pid
  7744 ;; This function uses a non-reentrant model
  7745 ;;
  7746                           
  7747     1751                     _pos_getCurrentPosition:	
  7748                           ;psect for function _pos_getCurrentPosition
  7749                           
  7750     1751                     l2176:	
  7751                           ;incstack = 0
  7752                           ; Regs used in _pos_getCurrentPosition: [wreg]
  7753                           
  7754                           
  7755                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 53:   return
      +                           pos_currentPosition;
  7756     1751  1683               	bsf	3,5	;RP0=1, select bank1
  7757     1752  1303               	bcf	3,6	;RP1=0, select bank1
  7758     1753  0823               	movf	(_pos_currentPosition+3)^(0+128),w	;volatile
  7759     1754  1283               	bcf	3,5	;RP0=0, select bank0
  7760     1755  1303               	bcf	3,6	;RP1=0, select bank0
  7761     1756  00A7               	movwf	?_pos_getCurrentPosition+3
  7762     1757  1683               	bsf	3,5	;RP0=1, select bank1
  7763     1758  1303               	bcf	3,6	;RP1=0, select bank1
  7764     1759  0822               	movf	(_pos_currentPosition+2)^(0+128),w	;volatile
  7765     175A  1283               	bcf	3,5	;RP0=0, select bank0
  7766     175B  1303               	bcf	3,6	;RP1=0, select bank0
  7767     175C  00A6               	movwf	?_pos_getCurrentPosition+2
  7768     175D  1683               	bsf	3,5	;RP0=1, select bank1
  7769     175E  1303               	bcf	3,6	;RP1=0, select bank1
  7770     175F  0821               	movf	(_pos_currentPosition+1)^(0+128),w	;volatile
  7771     1760  1283               	bcf	3,5	;RP0=0, select bank0
  7772     1761  1303               	bcf	3,6	;RP1=0, select bank0
  7773     1762  00A5               	movwf	?_pos_getCurrentPosition+1
  7774     1763  1683               	bsf	3,5	;RP0=1, select bank1
  7775     1764  1303               	bcf	3,6	;RP1=0, select bank1
  7776     1765  0820               	movf	_pos_currentPosition^(0+128),w	;volatile
  7777     1766  1283               	bcf	3,5	;RP0=0, select bank0
  7778     1767  1303               	bcf	3,6	;RP1=0, select bank0
  7779     1768  00A4               	movwf	?_pos_getCurrentPosition
  7780     1769                     l562:
  7781     1769  0008               	return
  7782     176A                     __end_of_pos_getCurrentPosition:
  7783                           
  7784                           	psect	text39
  7785     0B0B                     __ptext39:	
  7786 ;; *************** function _pid_scaleExcitation *****************
  7787 ;; Defined at:
  7788 ;;		line 23 in file "pid.c"
  7789 ;; Parameters:    Size  Location     Type
  7790 ;;  activation      4    4[BANK0 ] long 
  7791 ;; Auto vars:     Size  Location     Type
  7792 ;;		None
  7793 ;; Return value:  Size  Location     Type
  7794 ;;                  2    4[BANK0 ] int 
  7795 ;; Registers used:
  7796 ;;		wreg, status,2, status,0, btemp+1
  7797 ;; Tracked objects:
  7798 ;;		On entry : 0/0
  7799 ;;		On exit  : 0/0
  7800 ;;		Unchanged: 0/0
  7801 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7802 ;;      Params:         0       4       0       0       0
  7803 ;;      Locals:         0       0       0       0       0
  7804 ;;      Temps:          0       0       0       0       0
  7805 ;;      Totals:         0       4       0       0       0
  7806 ;;Total ram usage:        4 bytes
  7807 ;; Hardware stack levels used: 1
  7808 ;; Hardware stack levels required when called: 4
  7809 ;; This function calls:
  7810 ;;		Nothing
  7811 ;; This function is called by:
  7812 ;;		_pid_pid
  7813 ;; This function uses a non-reentrant model
  7814 ;;
  7815                           
  7816     0B0B                     _pid_scaleExcitation:	
  7817                           ;psect for function _pid_scaleExcitation
  7818                           
  7819     0B0B                     l2158:	
  7820                           ;incstack = 0
  7821                           ; Regs used in _pid_scaleExcitation: [wreg+status,2+status,0+btemp+1]
  7822                           
  7823                           
  7824                           ;pid.c: 25:    excitation = ( int ) activation;
  7825     0B0B  1283               	bcf	3,5	;RP0=0, select bank0
  7826     0B0C  1303               	bcf	3,6	;RP1=0, select bank0
  7827     0B0D  0825               	movf	pid_scaleExcitation@activation+1,w
  7828     0B0E  00E5               	movwf	_excitation+1
  7829     0B0F  0824               	movf	pid_scaleExcitation@activation,w
  7830     0B10  00E4               	movwf	_excitation
  7831     0B11                     l2160:
  7832                           
  7833                           ;pid.c: 26:    if (excitation > 0)
  7834     0B11  0865               	movf	_excitation+1,w
  7835     0B12  3A80               	xorlw	128
  7836     0B13  00FF               	movwf	btemp+1
  7837     0B14  3080               	movlw	128
  7838     0B15  027F               	subwf	btemp+1,w
  7839     0B16  1D03               	skipz
  7840     0B17  2B1A               	goto	u1955
  7841     0B18  3001               	movlw	1
  7842     0B19  0264               	subwf	_excitation,w
  7843     0B1A                     u1955:
  7844     0B1A  1C03               	skipc
  7845     0B1B  2B1D               	goto	u1951
  7846     0B1C  2B1E               	goto	u1950
  7847     0B1D                     u1951:
  7848     0B1D  2B29               	goto	l67
  7849     0B1E                     u1950:
  7850     0B1E                     l2162:
  7851                           
  7852                           ;pid.c: 27:      excitation = 150 + excitation;
  7853     0B1E  1283               	bcf	3,5	;RP0=0, select bank0
  7854     0B1F  1303               	bcf	3,6	;RP1=0, select bank0
  7855     0B20  0864               	movf	_excitation,w
  7856     0B21  3E96               	addlw	150
  7857     0B22  00E4               	movwf	_excitation
  7858     0B23  0865               	movf	_excitation+1,w
  7859     0B24  1803               	skipnc
  7860     0B25  3E01               	addlw	1
  7861     0B26  3E00               	addlw	0
  7862     0B27  00E5               	movwf	_excitation+1
  7863     0B28  2B37               	goto	l2166
  7864     0B29                     l67:	
  7865                           ;pid.c: 28:    else if (excitation < 0)
  7866                           
  7867     0B29  1283               	bcf	3,5	;RP0=0, select bank0
  7868     0B2A  1303               	bcf	3,6	;RP1=0, select bank0
  7869     0B2B  1FE5               	btfss	_excitation+1,7
  7870     0B2C  2B2E               	goto	u1961
  7871     0B2D  2B2F               	goto	u1960
  7872     0B2E                     u1961:
  7873     0B2E  2B37               	goto	l2166
  7874     0B2F                     u1960:
  7875     0B2F                     l2164:
  7876                           
  7877                           ;pid.c: 29:      excitation = -150 + excitation;
  7878     0B2F  0864               	movf	_excitation,w
  7879     0B30  3E6A               	addlw	106
  7880     0B31  00E4               	movwf	_excitation
  7881     0B32  0865               	movf	_excitation+1,w
  7882     0B33  1803               	skipnc
  7883     0B34  3E01               	addlw	1
  7884     0B35  3EFF               	addlw	255
  7885     0B36  00E5               	movwf	_excitation+1
  7886     0B37                     l2166:
  7887                           
  7888                           ;pid.c: 30:    if (excitation > 1000)
  7889     0B37  0865               	movf	_excitation+1,w
  7890     0B38  3A80               	xorlw	128
  7891     0B39  00FF               	movwf	btemp+1
  7892     0B3A  3083               	movlw	131
  7893     0B3B  027F               	subwf	btemp+1,w
  7894     0B3C  1D03               	skipz
  7895     0B3D  2B40               	goto	u1975
  7896     0B3E  30E9               	movlw	233
  7897     0B3F  0264               	subwf	_excitation,w
  7898     0B40                     u1975:
  7899     0B40  1C03               	skipc
  7900     0B41  2B43               	goto	u1971
  7901     0B42  2B44               	goto	u1970
  7902     0B43                     u1971:
  7903     0B43  2B4A               	goto	l2170
  7904     0B44                     u1970:
  7905     0B44                     l2168:
  7906                           
  7907                           ;pid.c: 31:      excitation = 1000;
  7908     0B44  30E8               	movlw	232
  7909     0B45  1283               	bcf	3,5	;RP0=0, select bank0
  7910     0B46  1303               	bcf	3,6	;RP1=0, select bank0
  7911     0B47  00E4               	movwf	_excitation
  7912     0B48  3003               	movlw	3
  7913     0B49  00E5               	movwf	_excitation+1
  7914     0B4A                     l2170:
  7915                           
  7916                           ;pid.c: 32:    if (excitation < -1000)
  7917     0B4A  1283               	bcf	3,5	;RP0=0, select bank0
  7918     0B4B  1303               	bcf	3,6	;RP1=0, select bank0
  7919     0B4C  0865               	movf	_excitation+1,w
  7920     0B4D  3A80               	xorlw	128
  7921     0B4E  00FF               	movwf	btemp+1
  7922     0B4F  307C               	movlw	124
  7923     0B50  027F               	subwf	btemp+1,w
  7924     0B51  1D03               	skipz
  7925     0B52  2B55               	goto	u1985
  7926     0B53  3018               	movlw	24
  7927     0B54  0264               	subwf	_excitation,w
  7928     0B55                     u1985:
  7929     0B55  1803               	skipnc
  7930     0B56  2B58               	goto	u1981
  7931     0B57  2B59               	goto	u1980
  7932     0B58                     u1981:
  7933     0B58  2B5F               	goto	l71
  7934     0B59                     u1980:
  7935     0B59                     l2172:
  7936                           
  7937                           ;pid.c: 33:      excitation = -1000;
  7938     0B59  3018               	movlw	24
  7939     0B5A  1283               	bcf	3,5	;RP0=0, select bank0
  7940     0B5B  1303               	bcf	3,6	;RP1=0, select bank0
  7941     0B5C  00E4               	movwf	_excitation
  7942     0B5D  30FC               	movlw	252
  7943     0B5E  00E5               	movwf	_excitation+1
  7944     0B5F                     l71:
  7945                           
  7946                           ;pid.c: 34:    return excitation;
  7947     0B5F  1283               	bcf	3,5	;RP0=0, select bank0
  7948     0B60  1303               	bcf	3,6	;RP1=0, select bank0
  7949     0B61  0865               	movf	_excitation+1,w
  7950     0B62  00A5               	movwf	?_pid_scaleExcitation+1
  7951     0B63  0864               	movf	_excitation,w
  7952     0B64  00A4               	movwf	?_pid_scaleExcitation
  7953     0B65                     l72:
  7954     0B65  0008               	return
  7955     0B66                     __end_of_pid_scaleExcitation:
  7956                           
  7957                           	psect	text40
  7958     0B66                     __ptext40:	
  7959 ;; *************** function _mot_setExcitation *****************
  7960 ;; Defined at:
  7961 ;;		line 7 in file "motor.c"
  7962 ;; Parameters:    Size  Location     Type
  7963 ;;  excitation      2    4[BANK0 ] int 
  7964 ;; Auto vars:     Size  Location     Type
  7965 ;;  value           2    8[BANK0 ] int 
  7966 ;; Return value:  Size  Location     Type
  7967 ;;                  1    wreg      void 
  7968 ;; Registers used:
  7969 ;;		wreg, status,2, status,0
  7970 ;; Tracked objects:
  7971 ;;		On entry : 0/0
  7972 ;;		On exit  : 0/0
  7973 ;;		Unchanged: 0/0
  7974 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7975 ;;      Params:         0       2       0       0       0
  7976 ;;      Locals:         0       2       0       0       0
  7977 ;;      Temps:          0       2       0       0       0
  7978 ;;      Totals:         0       6       0       0       0
  7979 ;;Total ram usage:        6 bytes
  7980 ;; Hardware stack levels used: 1
  7981 ;; Hardware stack levels required when called: 4
  7982 ;; This function calls:
  7983 ;;		Nothing
  7984 ;; This function is called by:
  7985 ;;		_pid_pid
  7986 ;; This function uses a non-reentrant model
  7987 ;;
  7988                           
  7989     0B66                     _mot_setExcitation:	
  7990                           ;psect for function _mot_setExcitation
  7991                           
  7992     0B66                     l2180:	
  7993                           ;incstack = 0
  7994                           ; Regs used in _mot_setExcitation: [wreg+status,2+status,0]
  7995                           
  7996                           
  7997                           ;motor.c: 8:   int value;;motor.c: 9:   if (excitation >= 0) {
  7998     0B66  1283               	bcf	3,5	;RP0=0, select bank0
  7999     0B67  1303               	bcf	3,6	;RP1=0, select bank0
  8000     0B68  1BA5               	btfsc	mot_setExcitation@excitation+1,7
  8001     0B69  2B6B               	goto	u1991
  8002     0B6A  2B6C               	goto	u1990
  8003     0B6B                     u1991:
  8004     0B6B  2BA3               	goto	l2192
  8005     0B6C                     u1990:
  8006     0B6C                     l2182:
  8007                           
  8008                           ;motor.c: 10:      value = excitation & 0x3FC;
  8009     0B6C  30FC               	movlw	252
  8010     0B6D  0524               	andwf	mot_setExcitation@excitation,w
  8011     0B6E  00A8               	movwf	mot_setExcitation@value
  8012     0B6F  3003               	movlw	3
  8013     0B70  0525               	andwf	mot_setExcitation@excitation+1,w
  8014     0B71  00A9               	movwf	mot_setExcitation@value+1
  8015                           
  8016                           ;motor.c: 11:      CCPR1L = (unsigned char)(value >> 2);
  8017     0B72  0829               	movf	mot_setExcitation@value+1,w
  8018     0B73  00A7               	movwf	??_mot_setExcitation+1
  8019     0B74  0828               	movf	mot_setExcitation@value,w
  8020     0B75  00A6               	movwf	??_mot_setExcitation
  8021     0B76  0D27               	rlf	??_mot_setExcitation+1,w
  8022     0B77  0CA7               	rrf	??_mot_setExcitation+1,f
  8023     0B78  0CA6               	rrf	??_mot_setExcitation,f
  8024     0B79  0D27               	rlf	??_mot_setExcitation+1,w
  8025     0B7A  0CA7               	rrf	??_mot_setExcitation+1,f
  8026     0B7B  0CA6               	rrf	??_mot_setExcitation,f
  8027     0B7C  0826               	movf	??_mot_setExcitation,w
  8028     0B7D  0095               	movwf	21	;volatile
  8029                           
  8030                           ;motor.c: 12:      value = excitation & 0x0003;
  8031     0B7E  3003               	movlw	3
  8032     0B7F  0524               	andwf	mot_setExcitation@excitation,w
  8033     0B80  00A8               	movwf	mot_setExcitation@value
  8034     0B81  3000               	movlw	0
  8035     0B82  0525               	andwf	mot_setExcitation@excitation+1,w
  8036     0B83  00A9               	movwf	mot_setExcitation@value+1
  8037     0B84                     l2184:
  8038                           
  8039                           ;motor.c: 13:      DC1B0 = value & 0x1;
  8040     0B84  1828               	btfsc	mot_setExcitation@value,0
  8041     0B85  2B87               	goto	u2001
  8042     0B86  2B8B               	goto	u2000
  8043     0B87                     u2001:
  8044     0B87  1283               	bcf	3,5	;RP0=0, select bank0
  8045     0B88  1303               	bcf	3,6	;RP1=0, select bank0
  8046     0B89  1617               	bsf	23,4	;volatile
  8047     0B8A  2B8E               	goto	u2014
  8048     0B8B                     u2000:
  8049     0B8B  1283               	bcf	3,5	;RP0=0, select bank0
  8050     0B8C  1303               	bcf	3,6	;RP1=0, select bank0
  8051     0B8D  1217               	bcf	23,4	;volatile
  8052     0B8E                     u2014:
  8053                           
  8054                           ;motor.c: 14:      DC1B1 = (value >> 1) & 0x1;
  8055     0B8E  0829               	movf	mot_setExcitation@value+1,w
  8056     0B8F  00A7               	movwf	??_mot_setExcitation+1
  8057     0B90  0828               	movf	mot_setExcitation@value,w
  8058     0B91  00A6               	movwf	??_mot_setExcitation
  8059     0B92  0D27               	rlf	??_mot_setExcitation+1,w
  8060     0B93  0CA7               	rrf	??_mot_setExcitation+1,f
  8061     0B94  0CA6               	rrf	??_mot_setExcitation,f
  8062     0B95  1826               	btfsc	??_mot_setExcitation,0
  8063     0B96  2B98               	goto	u2021
  8064     0B97  2B9C               	goto	u2020
  8065     0B98                     u2021:
  8066     0B98  1283               	bcf	3,5	;RP0=0, select bank0
  8067     0B99  1303               	bcf	3,6	;RP1=0, select bank0
  8068     0B9A  1697               	bsf	23,5	;volatile
  8069     0B9B  2B9F               	goto	u2034
  8070     0B9C                     u2020:
  8071     0B9C  1283               	bcf	3,5	;RP0=0, select bank0
  8072     0B9D  1303               	bcf	3,6	;RP1=0, select bank0
  8073     0B9E  1297               	bcf	23,5	;volatile
  8074     0B9F                     u2034:
  8075     0B9F                     l2186:
  8076                           
  8077                           ;motor.c: 18:      CCPR2L = 0;
  8078     0B9F  019B               	clrf	27	;volatile
  8079     0BA0                     l2188:
  8080                           
  8081                           ;motor.c: 19:      CCP2Y = 0;
  8082     0BA0  121D               	bcf	29,4	;volatile
  8083     0BA1                     l2190:
  8084                           
  8085                           ;motor.c: 20:      CCP2X = 0;
  8086     0BA1  129D               	bcf	29,5	;volatile
  8087                           
  8088                           ;motor.c: 21:   } else {
  8089     0BA2  2BE0               	goto	l603
  8090     0BA3                     l2192:
  8091                           
  8092                           ;motor.c: 22:      value = (-excitation) & 0x3FC;
  8093     0BA3  0924               	comf	mot_setExcitation@excitation,w
  8094     0BA4  00A6               	movwf	??_mot_setExcitation
  8095     0BA5  0925               	comf	mot_setExcitation@excitation+1,w
  8096     0BA6  00A7               	movwf	??_mot_setExcitation+1
  8097     0BA7  0AA6               	incf	??_mot_setExcitation,f
  8098     0BA8  1903               	skipnz
  8099     0BA9  0AA7               	incf	??_mot_setExcitation+1,f
  8100     0BAA  30FC               	movlw	252
  8101     0BAB  0526               	andwf	??_mot_setExcitation,w
  8102     0BAC  00A8               	movwf	mot_setExcitation@value
  8103     0BAD  3003               	movlw	3
  8104     0BAE  0527               	andwf	??_mot_setExcitation+1,w
  8105     0BAF  00A9               	movwf	mot_setExcitation@value+1
  8106     0BB0                     l2194:
  8107                           
  8108                           ;motor.c: 23:      CCPR2L = (unsigned char)(value >> 2);
  8109     0BB0  0829               	movf	mot_setExcitation@value+1,w
  8110     0BB1  00A7               	movwf	??_mot_setExcitation+1
  8111     0BB2  0828               	movf	mot_setExcitation@value,w
  8112     0BB3  00A6               	movwf	??_mot_setExcitation
  8113     0BB4  0D27               	rlf	??_mot_setExcitation+1,w
  8114     0BB5  0CA7               	rrf	??_mot_setExcitation+1,f
  8115     0BB6  0CA6               	rrf	??_mot_setExcitation,f
  8116     0BB7  0D27               	rlf	??_mot_setExcitation+1,w
  8117     0BB8  0CA7               	rrf	??_mot_setExcitation+1,f
  8118     0BB9  0CA6               	rrf	??_mot_setExcitation,f
  8119     0BBA  0826               	movf	??_mot_setExcitation,w
  8120     0BBB  009B               	movwf	27	;volatile
  8121     0BBC                     l2196:
  8122                           
  8123                           ;motor.c: 24:      value = excitation & 0x0003;
  8124     0BBC  3003               	movlw	3
  8125     0BBD  0524               	andwf	mot_setExcitation@excitation,w
  8126     0BBE  00A8               	movwf	mot_setExcitation@value
  8127     0BBF  3000               	movlw	0
  8128     0BC0  0525               	andwf	mot_setExcitation@excitation+1,w
  8129     0BC1  00A9               	movwf	mot_setExcitation@value+1
  8130     0BC2                     l2198:
  8131                           
  8132                           ;motor.c: 25:      DC2B0 = value & 0x1;
  8133     0BC2  1828               	btfsc	mot_setExcitation@value,0
  8134     0BC3  2BC5               	goto	u2041
  8135     0BC4  2BC9               	goto	u2040
  8136     0BC5                     u2041:
  8137     0BC5  1283               	bcf	3,5	;RP0=0, select bank0
  8138     0BC6  1303               	bcf	3,6	;RP1=0, select bank0
  8139     0BC7  161D               	bsf	29,4	;volatile
  8140     0BC8  2BCC               	goto	u2054
  8141     0BC9                     u2040:
  8142     0BC9  1283               	bcf	3,5	;RP0=0, select bank0
  8143     0BCA  1303               	bcf	3,6	;RP1=0, select bank0
  8144     0BCB  121D               	bcf	29,4	;volatile
  8145     0BCC                     u2054:
  8146     0BCC                     l2200:
  8147                           
  8148                           ;motor.c: 26:      DC2B1 = (value >> 1) & 0x1;
  8149     0BCC  0829               	movf	mot_setExcitation@value+1,w
  8150     0BCD  00A7               	movwf	??_mot_setExcitation+1
  8151     0BCE  0828               	movf	mot_setExcitation@value,w
  8152     0BCF  00A6               	movwf	??_mot_setExcitation
  8153     0BD0  0D27               	rlf	??_mot_setExcitation+1,w
  8154     0BD1  0CA7               	rrf	??_mot_setExcitation+1,f
  8155     0BD2  0CA6               	rrf	??_mot_setExcitation,f
  8156     0BD3  1826               	btfsc	??_mot_setExcitation,0
  8157     0BD4  2BD6               	goto	u2061
  8158     0BD5  2BDA               	goto	u2060
  8159     0BD6                     u2061:
  8160     0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  8161     0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  8162     0BD8  169D               	bsf	29,5	;volatile
  8163     0BD9  2BDD               	goto	u2074
  8164     0BDA                     u2060:
  8165     0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  8166     0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  8167     0BDC  129D               	bcf	29,5	;volatile
  8168     0BDD                     u2074:
  8169     0BDD                     l2202:
  8170                           
  8171                           ;motor.c: 30:      CCPR1L = 0;
  8172     0BDD  0195               	clrf	21	;volatile
  8173     0BDE                     l2204:
  8174                           
  8175                           ;motor.c: 31:      CCP1Y = 0;
  8176     0BDE  1217               	bcf	23,4	;volatile
  8177     0BDF                     l2206:
  8178                           
  8179                           ;motor.c: 32:      CCP1X = 0;
  8180     0BDF  1297               	bcf	23,5	;volatile
  8181     0BE0                     l603:
  8182     0BE0  0008               	return
  8183     0BE1                     __end_of_mot_setExcitation:
  8184                           
  8185                           	psect	text41
  8186     09C6                     __ptext41:	
  8187 ;; *************** function ___lmul *****************
  8188 ;; Defined at:
  8189 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul32.c"
  8190 ;; Parameters:    Size  Location     Type
  8191 ;;  multiplier      4   19[BANK0 ] unsigned long 
  8192 ;;  multiplicand    4   23[BANK0 ] unsigned long 
  8193 ;; Auto vars:     Size  Location     Type
  8194 ;;  product         4   28[BANK0 ] unsigned long 
  8195 ;; Return value:  Size  Location     Type
  8196 ;;                  4   19[BANK0 ] unsigned long 
  8197 ;; Registers used:
  8198 ;;		wreg, status,2, status,0
  8199 ;; Tracked objects:
  8200 ;;		On entry : 0/0
  8201 ;;		On exit  : 0/0
  8202 ;;		Unchanged: 0/0
  8203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8204 ;;      Params:         0       8       0       0       0
  8205 ;;      Locals:         0       4       0       0       0
  8206 ;;      Temps:          0       1       0       0       0
  8207 ;;      Totals:         0      13       0       0       0
  8208 ;;Total ram usage:       13 bytes
  8209 ;; Hardware stack levels used: 1
  8210 ;; Hardware stack levels required when called: 4
  8211 ;; This function calls:
  8212 ;;		Nothing
  8213 ;; This function is called by:
  8214 ;;		_pid_pid
  8215 ;;		_convertToReal
  8216 ;;		_printReal
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220     09C6                     ___lmul:	
  8221                           ;psect for function ___lmul
  8222                           
  8223     09C6                     l2352:	
  8224                           ;incstack = 0
  8225                           ; Regs used in ___lmul: [wreg+status,2+status,0]
  8226                           
  8227     09C6  3000               	movlw	0
  8228     09C7  1283               	bcf	3,5	;RP0=0, select bank0
  8229     09C8  1303               	bcf	3,6	;RP1=0, select bank0
  8230     09C9  00BF               	movwf	___lmul@product+3
  8231     09CA  3000               	movlw	0
  8232     09CB  00BE               	movwf	___lmul@product+2
  8233     09CC  3000               	movlw	0
  8234     09CD  00BD               	movwf	___lmul@product+1
  8235     09CE  3000               	movlw	0
  8236     09CF  00BC               	movwf	___lmul@product
  8237     09D0                     l2354:
  8238     09D0  1C33               	btfss	___lmul@multiplier,0
  8239     09D1  29D3               	goto	u2291
  8240     09D2  29D4               	goto	u2290
  8241     09D3                     u2291:
  8242     09D3  29EB               	goto	l2358
  8243     09D4                     u2290:
  8244     09D4                     l2356:
  8245     09D4  0837               	movf	___lmul@multiplicand,w
  8246     09D5  07BC               	addwf	___lmul@product,f
  8247     09D6  0838               	movf	___lmul@multiplicand+1,w
  8248     09D7  1103               	clrz
  8249     09D8  1803               	skipnc
  8250     09D9  3E01               	addlw	1
  8251     09DA  1903               	skipnz
  8252     09DB  29DD               	goto	u2301
  8253     09DC  07BD               	addwf	___lmul@product+1,f
  8254     09DD                     u2301:
  8255     09DD  0839               	movf	___lmul@multiplicand+2,w
  8256     09DE  1103               	clrz
  8257     09DF  1803               	skipnc
  8258     09E0  3E01               	addlw	1
  8259     09E1  1903               	skipnz
  8260     09E2  29E4               	goto	u2302
  8261     09E3  07BE               	addwf	___lmul@product+2,f
  8262     09E4                     u2302:
  8263     09E4  083A               	movf	___lmul@multiplicand+3,w
  8264     09E5  1103               	clrz
  8265     09E6  1803               	skipnc
  8266     09E7  3E01               	addlw	1
  8267     09E8  1903               	skipnz
  8268     09E9  29EB               	goto	u2303
  8269     09EA  07BF               	addwf	___lmul@product+3,f
  8270     09EB                     u2303:
  8271     09EB                     l2358:
  8272     09EB  3001               	movlw	1
  8273     09EC  00BB               	movwf	??___lmul
  8274     09ED                     u2315:
  8275     09ED  1003               	clrc
  8276     09EE  0DB7               	rlf	___lmul@multiplicand,f
  8277     09EF  0DB8               	rlf	___lmul@multiplicand+1,f
  8278     09F0  0DB9               	rlf	___lmul@multiplicand+2,f
  8279     09F1  0DBA               	rlf	___lmul@multiplicand+3,f
  8280     09F2  0BBB               	decfsz	??___lmul,f
  8281     09F3  29ED               	goto	u2315
  8282     09F4                     l2360:
  8283     09F4  3001               	movlw	1
  8284     09F5                     u2325:
  8285     09F5  1003               	clrc
  8286     09F6  0CB6               	rrf	___lmul@multiplier+3,f
  8287     09F7  0CB5               	rrf	___lmul@multiplier+2,f
  8288     09F8  0CB4               	rrf	___lmul@multiplier+1,f
  8289     09F9  0CB3               	rrf	___lmul@multiplier,f
  8290     09FA  3EFF               	addlw	-1
  8291     09FB  1D03               	skipz
  8292     09FC  29F5               	goto	u2325
  8293     09FD  0836               	movf	___lmul@multiplier+3,w
  8294     09FE  0435               	iorwf	___lmul@multiplier+2,w
  8295     09FF  0434               	iorwf	___lmul@multiplier+1,w
  8296     0A00  0433               	iorwf	___lmul@multiplier,w
  8297     0A01  1D03               	skipz
  8298     0A02  2A04               	goto	u2331
  8299     0A03  2A05               	goto	u2330
  8300     0A04                     u2331:
  8301     0A04  29D0               	goto	l2354
  8302     0A05                     u2330:
  8303     0A05                     l2362:
  8304     0A05  083F               	movf	___lmul@product+3,w
  8305     0A06  00B6               	movwf	?___lmul+3
  8306     0A07  083E               	movf	___lmul@product+2,w
  8307     0A08  00B5               	movwf	?___lmul+2
  8308     0A09  083D               	movf	___lmul@product+1,w
  8309     0A0A  00B4               	movwf	?___lmul+1
  8310     0A0B  083C               	movf	___lmul@product,w
  8311     0A0C  00B3               	movwf	?___lmul
  8312     0A0D                     l632:
  8313     0A0D  0008               	return
  8314     0A0E                     __end_of___lmul:
  8315                           
  8316                           	psect	text42
  8317     0CE7                     __ptext42:	
  8318 ;; *************** function ___aldiv *****************
  8319 ;; Defined at:
  8320 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\aldiv.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  divisor         4    4[BANK0 ] long 
  8323 ;;  dividend        4    8[BANK0 ] long 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;  quotient        4   15[BANK0 ] long 
  8326 ;;  sign            1   14[BANK0 ] unsigned char 
  8327 ;;  counter         1   13[BANK0 ] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  4    4[BANK0 ] long 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, btemp+1
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8337 ;;      Params:         0       8       0       0       0
  8338 ;;      Locals:         0       6       0       0       0
  8339 ;;      Temps:          0       1       0       0       0
  8340 ;;      Totals:         0      15       0       0       0
  8341 ;;Total ram usage:       15 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 4
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_pid_pid
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351     0CE7                     ___aldiv:	
  8352                           ;psect for function ___aldiv
  8353                           
  8354     0CE7                     l2382:	
  8355                           ;incstack = 0
  8356                           ; Regs used in ___aldiv: [wreg+status,2+status,0+btemp+1]
  8357                           
  8358     0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  8359     0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  8360     0CE9  01AE               	clrf	___aldiv@sign
  8361     0CEA                     l2384:
  8362     0CEA  1FA7               	btfss	___aldiv@divisor+3,7
  8363     0CEB  2CED               	goto	u2361
  8364     0CEC  2CEE               	goto	u2360
  8365     0CED                     u2361:
  8366     0CED  2CFB               	goto	l689
  8367     0CEE                     u2360:
  8368     0CEE                     l2386:
  8369     0CEE  09A4               	comf	___aldiv@divisor,f
  8370     0CEF  09A5               	comf	___aldiv@divisor+1,f
  8371     0CF0  09A6               	comf	___aldiv@divisor+2,f
  8372     0CF1  09A7               	comf	___aldiv@divisor+3,f
  8373     0CF2  0AA4               	incf	___aldiv@divisor,f
  8374     0CF3  1903               	skipnz
  8375     0CF4  0AA5               	incf	___aldiv@divisor+1,f
  8376     0CF5  1903               	skipnz
  8377     0CF6  0AA6               	incf	___aldiv@divisor+2,f
  8378     0CF7  1903               	skipnz
  8379     0CF8  0AA7               	incf	___aldiv@divisor+3,f
  8380     0CF9  01AE               	clrf	___aldiv@sign
  8381     0CFA  0AAE               	incf	___aldiv@sign,f
  8382     0CFB                     l689:
  8383     0CFB  1FAB               	btfss	___aldiv@dividend+3,7
  8384     0CFC  2CFE               	goto	u2371
  8385     0CFD  2CFF               	goto	u2370
  8386     0CFE                     u2371:
  8387     0CFE  2D0E               	goto	l2392
  8388     0CFF                     u2370:
  8389     0CFF                     l2388:
  8390     0CFF  09A8               	comf	___aldiv@dividend,f
  8391     0D00  09A9               	comf	___aldiv@dividend+1,f
  8392     0D01  09AA               	comf	___aldiv@dividend+2,f
  8393     0D02  09AB               	comf	___aldiv@dividend+3,f
  8394     0D03  0AA8               	incf	___aldiv@dividend,f
  8395     0D04  1903               	skipnz
  8396     0D05  0AA9               	incf	___aldiv@dividend+1,f
  8397     0D06  1903               	skipnz
  8398     0D07  0AAA               	incf	___aldiv@dividend+2,f
  8399     0D08  1903               	skipnz
  8400     0D09  0AAB               	incf	___aldiv@dividend+3,f
  8401     0D0A                     l2390:
  8402     0D0A  3001               	movlw	1
  8403     0D0B  00FF               	movwf	btemp+1
  8404     0D0C  087F               	movf	btemp+1,w
  8405     0D0D  06AE               	xorwf	___aldiv@sign,f
  8406     0D0E                     l2392:
  8407     0D0E  3000               	movlw	0
  8408     0D0F  00B2               	movwf	___aldiv@quotient+3
  8409     0D10  3000               	movlw	0
  8410     0D11  00B1               	movwf	___aldiv@quotient+2
  8411     0D12  3000               	movlw	0
  8412     0D13  00B0               	movwf	___aldiv@quotient+1
  8413     0D14  3000               	movlw	0
  8414     0D15  00AF               	movwf	___aldiv@quotient
  8415     0D16                     l2394:
  8416     0D16  0827               	movf	___aldiv@divisor+3,w
  8417     0D17  0426               	iorwf	___aldiv@divisor+2,w
  8418     0D18  0425               	iorwf	___aldiv@divisor+1,w
  8419     0D19  0424               	iorwf	___aldiv@divisor,w
  8420     0D1A  1903               	skipnz
  8421     0D1B  2D1D               	goto	u2381
  8422     0D1C  2D1E               	goto	u2380
  8423     0D1D                     u2381:
  8424     0D1D  2D6B               	goto	l2416
  8425     0D1E                     u2380:
  8426     0D1E                     l2396:
  8427     0D1E  01AD               	clrf	___aldiv@counter
  8428     0D1F  0AAD               	incf	___aldiv@counter,f
  8429     0D20  2D2E               	goto	l2402
  8430     0D21                     l2398:
  8431     0D21  3001               	movlw	1
  8432     0D22  00AC               	movwf	??___aldiv
  8433     0D23                     u2395:
  8434     0D23  1003               	clrc
  8435     0D24  0DA4               	rlf	___aldiv@divisor,f
  8436     0D25  0DA5               	rlf	___aldiv@divisor+1,f
  8437     0D26  0DA6               	rlf	___aldiv@divisor+2,f
  8438     0D27  0DA7               	rlf	___aldiv@divisor+3,f
  8439     0D28  0BAC               	decfsz	??___aldiv,f
  8440     0D29  2D23               	goto	u2395
  8441     0D2A                     l2400:
  8442     0D2A  3001               	movlw	1
  8443     0D2B  00FF               	movwf	btemp+1
  8444     0D2C  087F               	movf	btemp+1,w
  8445     0D2D  07AD               	addwf	___aldiv@counter,f
  8446     0D2E                     l2402:
  8447     0D2E  1FA7               	btfss	___aldiv@divisor+3,7
  8448     0D2F  2D31               	goto	u2401
  8449     0D30  2D32               	goto	u2400
  8450     0D31                     u2401:
  8451     0D31  2D21               	goto	l2398
  8452     0D32                     u2400:
  8453     0D32                     l2404:
  8454     0D32  3001               	movlw	1
  8455     0D33  00AC               	movwf	??___aldiv
  8456     0D34                     u2415:
  8457     0D34  1003               	clrc
  8458     0D35  0DAF               	rlf	___aldiv@quotient,f
  8459     0D36  0DB0               	rlf	___aldiv@quotient+1,f
  8460     0D37  0DB1               	rlf	___aldiv@quotient+2,f
  8461     0D38  0DB2               	rlf	___aldiv@quotient+3,f
  8462     0D39  0BAC               	decfsz	??___aldiv,f
  8463     0D3A  2D34               	goto	u2415
  8464     0D3B                     l2406:
  8465     0D3B  0827               	movf	___aldiv@divisor+3,w
  8466     0D3C  022B               	subwf	___aldiv@dividend+3,w
  8467     0D3D  1D03               	skipz
  8468     0D3E  2D49               	goto	u2425
  8469     0D3F  0826               	movf	___aldiv@divisor+2,w
  8470     0D40  022A               	subwf	___aldiv@dividend+2,w
  8471     0D41  1D03               	skipz
  8472     0D42  2D49               	goto	u2425
  8473     0D43  0825               	movf	___aldiv@divisor+1,w
  8474     0D44  0229               	subwf	___aldiv@dividend+1,w
  8475     0D45  1D03               	skipz
  8476     0D46  2D49               	goto	u2425
  8477     0D47  0824               	movf	___aldiv@divisor,w
  8478     0D48  0228               	subwf	___aldiv@dividend,w
  8479     0D49                     u2425:
  8480     0D49  1C03               	skipc
  8481     0D4A  2D4C               	goto	u2421
  8482     0D4B  2D4D               	goto	u2420
  8483     0D4C                     u2421:
  8484     0D4C  2D5C               	goto	l2412
  8485     0D4D                     u2420:
  8486     0D4D                     l2408:
  8487     0D4D  0824               	movf	___aldiv@divisor,w
  8488     0D4E  02A8               	subwf	___aldiv@dividend,f
  8489     0D4F  0825               	movf	___aldiv@divisor+1,w
  8490     0D50  1C03               	skipc
  8491     0D51  0F25               	incfsz	___aldiv@divisor+1,w
  8492     0D52  02A9               	subwf	___aldiv@dividend+1,f
  8493     0D53  0826               	movf	___aldiv@divisor+2,w
  8494     0D54  1C03               	skipc
  8495     0D55  0F26               	incfsz	___aldiv@divisor+2,w
  8496     0D56  02AA               	subwf	___aldiv@dividend+2,f
  8497     0D57  0827               	movf	___aldiv@divisor+3,w
  8498     0D58  1C03               	skipc
  8499     0D59  0F27               	incfsz	___aldiv@divisor+3,w
  8500     0D5A  02AB               	subwf	___aldiv@dividend+3,f
  8501     0D5B                     l2410:
  8502     0D5B  142F               	bsf	___aldiv@quotient,0
  8503     0D5C                     l2412:
  8504     0D5C  3001               	movlw	1
  8505     0D5D                     u2435:
  8506     0D5D  1003               	clrc
  8507     0D5E  0CA7               	rrf	___aldiv@divisor+3,f
  8508     0D5F  0CA6               	rrf	___aldiv@divisor+2,f
  8509     0D60  0CA5               	rrf	___aldiv@divisor+1,f
  8510     0D61  0CA4               	rrf	___aldiv@divisor,f
  8511     0D62  3EFF               	addlw	-1
  8512     0D63  1D03               	skipz
  8513     0D64  2D5D               	goto	u2435
  8514     0D65                     l2414:
  8515     0D65  3001               	movlw	1
  8516     0D66  02AD               	subwf	___aldiv@counter,f
  8517     0D67  1D03               	btfss	3,2
  8518     0D68  2D6A               	goto	u2441
  8519     0D69  2D6B               	goto	u2440
  8520     0D6A                     u2441:
  8521     0D6A  2D32               	goto	l2404
  8522     0D6B                     u2440:
  8523     0D6B                     l2416:
  8524     0D6B  082E               	movf	___aldiv@sign,w
  8525     0D6C  1903               	btfsc	3,2
  8526     0D6D  2D6F               	goto	u2451
  8527     0D6E  2D70               	goto	u2450
  8528     0D6F                     u2451:
  8529     0D6F  2D7B               	goto	l2420
  8530     0D70                     u2450:
  8531     0D70                     l2418:
  8532     0D70  09AF               	comf	___aldiv@quotient,f
  8533     0D71  09B0               	comf	___aldiv@quotient+1,f
  8534     0D72  09B1               	comf	___aldiv@quotient+2,f
  8535     0D73  09B2               	comf	___aldiv@quotient+3,f
  8536     0D74  0AAF               	incf	___aldiv@quotient,f
  8537     0D75  1903               	skipnz
  8538     0D76  0AB0               	incf	___aldiv@quotient+1,f
  8539     0D77  1903               	skipnz
  8540     0D78  0AB1               	incf	___aldiv@quotient+2,f
  8541     0D79  1903               	skipnz
  8542     0D7A  0AB2               	incf	___aldiv@quotient+3,f
  8543     0D7B                     l2420:
  8544     0D7B  0832               	movf	___aldiv@quotient+3,w
  8545     0D7C  00A7               	movwf	?___aldiv+3
  8546     0D7D  0831               	movf	___aldiv@quotient+2,w
  8547     0D7E  00A6               	movwf	?___aldiv+2
  8548     0D7F  0830               	movf	___aldiv@quotient+1,w
  8549     0D80  00A5               	movwf	?___aldiv+1
  8550     0D81  082F               	movf	___aldiv@quotient,w
  8551     0D82  00A4               	movwf	?___aldiv
  8552     0D83                     l699:
  8553     0D83  0008               	return
  8554     0D84                     __end_of___aldiv:
  8555                           
  8556                           	psect	text43
  8557     173A                     __ptext43:	
  8558 ;; *************** function ___bmul *****************
  8559 ;; Defined at:
  8560 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\Umul8.c"
  8561 ;; Parameters:    Size  Location     Type
  8562 ;;  multiplier      1    wreg     unsigned char 
  8563 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;  multiplier      1    6[BANK0 ] unsigned char 
  8566 ;;  product         1    5[BANK0 ] unsigned char 
  8567 ;; Return value:  Size  Location     Type
  8568 ;;                  1    wreg      unsigned char 
  8569 ;; Registers used:
  8570 ;;		wreg, status,2, status,0, btemp+1
  8571 ;; Tracked objects:
  8572 ;;		On entry : 0/0
  8573 ;;		On exit  : 0/0
  8574 ;;		Unchanged: 0/0
  8575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8576 ;;      Params:         0       1       0       0       0
  8577 ;;      Locals:         0       2       0       0       0
  8578 ;;      Temps:          0       0       0       0       0
  8579 ;;      Totals:         0       3       0       0       0
  8580 ;;Total ram usage:        3 bytes
  8581 ;; Hardware stack levels used: 1
  8582 ;; Hardware stack levels required when called: 4
  8583 ;; This function calls:
  8584 ;;		Nothing
  8585 ;; This function is called by:
  8586 ;;		_createTask
  8587 ;;		_executeTasks
  8588 ;;		_putchdec
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           
  8592     173A                     ___bmul:	
  8593                           ;psect for function ___bmul
  8594                           
  8595                           
  8596                           ;incstack = 0
  8597                           ; Regs used in ___bmul: [wreg+status,2+status,0+btemp+1]
  8598                           ;___bmul@multiplier stored from wreg
  8599     173A  1283               	bcf	3,5	;RP0=0, select bank0
  8600     173B  1303               	bcf	3,6	;RP1=0, select bank0
  8601     173C  00A6               	movwf	___bmul@multiplier
  8602     173D                     l2366:
  8603     173D  01A5               	clrf	___bmul@product
  8604     173E                     l2368:
  8605     173E  1C26               	btfss	___bmul@multiplier,0
  8606     173F  2F41               	goto	u2341
  8607     1740  2F42               	goto	u2340
  8608     1741                     u2341:
  8609     1741  2F46               	goto	l2372
  8610     1742                     u2340:
  8611     1742                     l2370:
  8612     1742  0824               	movf	___bmul@multiplicand,w
  8613     1743  00FF               	movwf	btemp+1
  8614     1744  087F               	movf	btemp+1,w
  8615     1745  07A5               	addwf	___bmul@product,f
  8616     1746                     l2372:
  8617     1746  1003               	clrc
  8618     1747  0DA4               	rlf	___bmul@multiplicand,f
  8619     1748                     l2374:
  8620     1748  1003               	clrc
  8621     1749  0CA6               	rrf	___bmul@multiplier,f
  8622     174A                     l2376:
  8623     174A  0826               	movf	___bmul@multiplier,w
  8624     174B  1D03               	btfss	3,2
  8625     174C  2F4E               	goto	u2351
  8626     174D  2F4F               	goto	u2350
  8627     174E                     u2351:
  8628     174E  2F3E               	goto	l2368
  8629     174F                     u2350:
  8630     174F                     l2378:
  8631     174F  0825               	movf	___bmul@product,w
  8632     1750                     l644:
  8633     1750  0008               	return
  8634     1751                     __end_of___bmul:
  8635                           
  8636                           	psect	text44
  8637     0AB3                     __ptext44:	
  8638 ;; *************** function _isr *****************
  8639 ;; Defined at:
  8640 ;;		line 83 in file "position_controller_main.c"
  8641 ;; Parameters:    Size  Location     Type
  8642 ;;		None
  8643 ;; Auto vars:     Size  Location     Type
  8644 ;;  portB           1   12[COMMON] unsigned char 
  8645 ;; Return value:  Size  Location     Type
  8646 ;;                  1    wreg      void 
  8647 ;; Registers used:
  8648 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8649 ;; Tracked objects:
  8650 ;;		On entry : 0/0
  8651 ;;		On exit  : 0/0
  8652 ;;		Unchanged: 0/0
  8653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8654 ;;      Params:         0       0       0       0       0
  8655 ;;      Locals:         1       0       0       0       0
  8656 ;;      Temps:          0       4       0       0       0
  8657 ;;      Totals:         1       4       0       0       0
  8658 ;;Total ram usage:        5 bytes
  8659 ;; Hardware stack levels used: 1
  8660 ;; Hardware stack levels required when called: 3
  8661 ;; This function calls:
  8662 ;;		_pos_UpdatePosition
  8663 ;; This function is called by:
  8664 ;;		Interrupt level 1
  8665 ;; This function uses a non-reentrant model
  8666 ;;
  8667                           
  8668     0AB3                     _isr:	
  8669                           ;psect for function _isr
  8670                           
  8671     0AB3                     i1l2982:
  8672                           
  8673                           ;position_controller_main.c: 85:   static int interruptCounter = 0;;position_controller_
      +                          main.c: 87:   if (T0IE && T0IF) {
  8674     0AB3  1E8B               	btfss	11,5	;volatile
  8675     0AB4  2AB6               	goto	u343_21
  8676     0AB5  2AB7               	goto	u343_20
  8677     0AB6                     u343_21:
  8678     0AB6  2AE9               	goto	i1l2998
  8679     0AB7                     u343_20:
  8680     0AB7                     i1l2984:
  8681     0AB7  1D0B               	btfss	11,2	;volatile
  8682     0AB8  2ABA               	goto	u344_21
  8683     0AB9  2ABB               	goto	u344_20
  8684     0ABA                     u344_21:
  8685     0ABA  2AE9               	goto	i1l2998
  8686     0ABB                     u344_20:
  8687     0ABB                     i1l2986:
  8688                           
  8689                           ;position_controller_main.c: 88:     interruptCounter++;
  8690     0ABB  3001               	movlw	1
  8691     0ABC  1683               	bsf	3,5	;RP0=1, select bank1
  8692     0ABD  1303               	bcf	3,6	;RP1=0, select bank1
  8693     0ABE  07D0               	addwf	isr@interruptCounter^(0+128),f
  8694     0ABF  1803               	skipnc
  8695     0AC0  0AD1               	incf	(isr@interruptCounter+1)^(0+128),f
  8696     0AC1  3000               	movlw	0
  8697     0AC2  07D1               	addwf	(isr@interruptCounter+1)^(0+128),f
  8698     0AC3                     i1l2988:
  8699                           
  8700                           ;position_controller_main.c: 89:     if (interruptCounter > 500) {
  8701     0AC3  0851               	movf	(isr@interruptCounter+1)^(0+128),w
  8702     0AC4  3A80               	xorlw	128
  8703     0AC5  00FF               	movwf	btemp+1
  8704     0AC6  3081               	movlw	129
  8705     0AC7  027F               	subwf	btemp+1,w
  8706     0AC8  1D03               	skipz
  8707     0AC9  2ACC               	goto	u345_25
  8708     0ACA  30F5               	movlw	245
  8709     0ACB  0250               	subwf	isr@interruptCounter^(0+128),w
  8710     0ACC                     u345_25:
  8711     0ACC  1C03               	skipc
  8712     0ACD  2ACF               	goto	u345_21
  8713     0ACE  2AD0               	goto	u345_20
  8714     0ACF                     u345_21:
  8715     0ACF  2AD4               	goto	i1l2992
  8716     0AD0                     u345_20:
  8717     0AD0                     i1l2990:
  8718                           
  8719                           ;position_controller_main.c: 91:       interruptCounter = 0;
  8720     0AD0  1683               	bsf	3,5	;RP0=1, select bank1
  8721     0AD1  1303               	bcf	3,6	;RP1=0, select bank1
  8722     0AD2  01D0               	clrf	isr@interruptCounter^(0+128)
  8723     0AD3  01D1               	clrf	(isr@interruptCounter+1)^(0+128)
  8724     0AD4                     i1l2992:
  8725                           
  8726                           ;position_controller_main.c: 94:     tsk_timeStamp++;
  8727     0AD4  3001               	movlw	1
  8728     0AD5  1683               	bsf	3,5	;RP0=1, select bank1
  8729     0AD6  1303               	bcf	3,6	;RP1=0, select bank1
  8730     0AD7  07A8               	addwf	_tsk_timeStamp^(0+128),f	;volatile
  8731     0AD8  3000               	movlw	0
  8732     0AD9  1803               	skipnc
  8733     0ADA  3001               	movlw	1
  8734     0ADB  07A9               	addwf	(_tsk_timeStamp+1)^(0+128),f	;volatile
  8735     0ADC  3000               	movlw	0
  8736     0ADD  1803               	skipnc
  8737     0ADE  3001               	movlw	1
  8738     0ADF  07AA               	addwf	(_tsk_timeStamp+2)^(0+128),f	;volatile
  8739     0AE0  3000               	movlw	0
  8740     0AE1  1803               	skipnc
  8741     0AE2  3001               	movlw	1
  8742     0AE3  07AB               	addwf	(_tsk_timeStamp+3)^(0+128),f	;volatile
  8743     0AE4                     i1l2994:
  8744                           
  8745                           ;position_controller_main.c: 95:     TMR0 = (0xff - 39);
  8746     0AE4  30D8               	movlw	216
  8747     0AE5  1283               	bcf	3,5	;RP0=0, select bank0
  8748     0AE6  1303               	bcf	3,6	;RP1=0, select bank0
  8749     0AE7  0081               	movwf	1	;volatile
  8750     0AE8                     i1l2996:
  8751                           
  8752                           ;position_controller_main.c: 96:     T0IF = 0;
  8753     0AE8  110B               	bcf	11,2	;volatile
  8754     0AE9                     i1l2998:
  8755                           
  8756                           ;position_controller_main.c: 99:   if (RBIE && RBIF) {
  8757     0AE9  1D8B               	btfss	11,3	;volatile
  8758     0AEA  2AEC               	goto	u346_21
  8759     0AEB  2AED               	goto	u346_20
  8760     0AEC                     u346_21:
  8761     0AEC  2AFE               	goto	i1l163
  8762     0AED                     u346_20:
  8763     0AED                     i1l3000:
  8764     0AED  1C0B               	btfss	11,0	;volatile
  8765     0AEE  2AF0               	goto	u347_21
  8766     0AEF  2AF1               	goto	u347_20
  8767     0AF0                     u347_21:
  8768     0AF0  2AFE               	goto	i1l163
  8769     0AF1                     u347_20:
  8770     0AF1                     i1l3002:
  8771                           
  8772                           ;position_controller_main.c: 100:     char portB = PORTB;
  8773     0AF1  0806               	movf	6,w	;volatile
  8774     0AF2  00FC               	movwf	isr@portB
  8775     0AF3                     i1l3004:
  8776                           
  8777                           ;position_controller_main.c: 101:     pos_UpdatePosition(portB, 3, 1);
  8778     0AF3  3003               	movlw	3
  8779     0AF4  00F4               	movwf	pos_UpdatePosition@init
  8780     0AF5  01F5               	clrf	pos_UpdatePosition@dir
  8781     0AF6  0AF5               	incf	pos_UpdatePosition@dir,f
  8782     0AF7  087C               	movf	isr@portB,w
  8783     0AF8  120A  158A  225B  120A  158A  	fcall	_pos_UpdatePosition
  8784     0AFD                     i1l3006:
  8785                           
  8786                           ;position_controller_main.c: 102:     RBIF = 0;
  8787     0AFD  100B               	bcf	11,0	;volatile
  8788     0AFE                     i1l163:
  8789     0AFE  1283               	bcf	3,5	;RP0=0, select bank0
  8790     0AFF  1303               	bcf	3,6	;RP1=0, select bank0
  8791     0B00  0823               	movf	??_isr+3,w
  8792     0B01  00FF               	movwf	btemp+1
  8793     0B02  0822               	movf	??_isr+2,w
  8794     0B03  008A               	movwf	10
  8795     0B04  0821               	movf	??_isr+1,w
  8796     0B05  0084               	movwf	4
  8797     0B06  0E20               	swapf	??_isr,w
  8798     0B07  0083               	movwf	3
  8799     0B08  0EFE               	swapf	btemp,f
  8800     0B09  0E7E               	swapf	btemp,w
  8801     0B0A  0009               	retfie
  8802     0B0B                     __end_of_isr:
  8803                           
  8804                           	psect	intentry
  8805     0004                     __pintentry:	
  8806                           ;incstack = 0
  8807 ;; hardware stack exceeded
  8808                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8809                           
  8810     0004                     interrupt_function:
  8811     007E                     saved_w	set	btemp
  8812     0004  00FE               	movwf	btemp
  8813     0005  0E03               	swapf	3,w
  8814     0006  1283               	bcf	3,5	;RP0=0, select bank0
  8815     0007  1303               	bcf	3,6	;RP1=0, select bank0
  8816     0008  00A0               	movwf	??_isr
  8817     0009  0804               	movf	4,w
  8818     000A  00A1               	movwf	??_isr+1
  8819     000B  080A               	movf	10,w
  8820     000C  00A2               	movwf	??_isr+2
  8821     000D  087F               	movf	btemp+1,w
  8822     000E  00A3               	movwf	??_isr+3
  8823     000F  120A  158A  2AB3   	ljmp	_isr
  8824                           
  8825                           	psect	text45
  8826     0A5B                     __ptext45:	
  8827 ;; *************** function _pos_UpdatePosition *****************
  8828 ;; Defined at:
  8829 ;;		line 38 in file "/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  port            1    wreg     unsigned char 
  8832 ;;  init            1    4[COMMON] unsigned char 
  8833 ;;  dir             1    5[COMMON] unsigned char 
  8834 ;; Auto vars:     Size  Location     Type
  8835 ;;  port            1   10[COMMON] unsigned char 
  8836 ;;  curr_state      1   11[COMMON] unsigned char 
  8837 ;; Return value:  Size  Location     Type
  8838 ;;                  1    wreg      void 
  8839 ;; Registers used:
  8840 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8841 ;; Tracked objects:
  8842 ;;		On entry : 0/0
  8843 ;;		On exit  : 0/0
  8844 ;;		Unchanged: 0/0
  8845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8846 ;;      Params:         2       0       0       0       0
  8847 ;;      Locals:         2       0       0       0       0
  8848 ;;      Temps:          4       0       0       0       0
  8849 ;;      Totals:         8       0       0       0       0
  8850 ;;Total ram usage:        8 bytes
  8851 ;; Hardware stack levels used: 1
  8852 ;; Hardware stack levels required when called: 2
  8853 ;; This function calls:
  8854 ;;		_pos_encoderStatus
  8855 ;; This function is called by:
  8856 ;;		_isr
  8857 ;; This function uses a non-reentrant model
  8858 ;;
  8859                           
  8860     0A5B                     _pos_UpdatePosition:	
  8861                           ;psect for function _pos_UpdatePosition
  8862                           
  8863                           
  8864                           ;incstack = 0
  8865 ;; hardware stack exceeded
  8866                           ; Regs used in _pos_UpdatePosition: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8867                           ;pos_UpdatePosition@port stored from wreg
  8868     0A5B  00FA               	movwf	pos_UpdatePosition@port
  8869     0A5C                     i1l2902:
  8870                           
  8871                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 39:   static
      +                           char prev_state = 0;;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_s
      +                          ensor.c: 40:   char curr_state = (port >> init) & 3;
  8872     0A5C  087A               	movf	pos_UpdatePosition@port,w
  8873     0A5D  00F6               	movwf	??_pos_UpdatePosition
  8874     0A5E  0A74               	incf	pos_UpdatePosition@init,w
  8875     0A5F  2A62               	goto	u327_24
  8876     0A60                     u327_25:
  8877     0A60  1003               	clrc
  8878     0A61  0CF6               	rrf	??_pos_UpdatePosition,f
  8879     0A62                     u327_24:
  8880     0A62  3EFF               	addlw	-1
  8881     0A63  1D03               	skipz
  8882     0A64  2A60               	goto	u327_25
  8883     0A65  0876               	movf	??_pos_UpdatePosition,w
  8884     0A66  3903               	andlw	3
  8885     0A67  00FB               	movwf	pos_UpdatePosition@curr_state
  8886                           
  8887                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 41:   if (di
      +                          r == 0)
  8888     0A68  0875               	movf	pos_UpdatePosition@dir,w
  8889     0A69  1D03               	btfss	3,2
  8890     0A6A  2A6C               	goto	u328_21
  8891     0A6B  2A6D               	goto	u328_20
  8892     0A6C                     u328_21:
  8893     0A6C  2A8B               	goto	i1l2906
  8894     0A6D                     u328_20:
  8895     0A6D                     i1l2904:
  8896                           
  8897                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 42:     pos_
      +                          currentPosition += (long) pos_encoderStatus(prev_state, curr_state);
  8898     0A6D  087B               	movf	pos_UpdatePosition@curr_state,w
  8899     0A6E  00F0               	movwf	pos_encoderStatus@curr
  8900     0A6F  087D               	movf	pos_UpdatePosition@prev_state,w
  8901     0A70  160A  118A  2725  120A  158A  	fcall	_pos_encoderStatus
  8902     0A75  1683               	bsf	3,5	;RP0=1, select bank1
  8903     0A76  1303               	bcf	3,6	;RP1=0, select bank1
  8904     0A77  07A0               	addwf	_pos_currentPosition^(0+128),f	;volatile
  8905     0A78  01FF               	clrf	btemp+1
  8906     0A79  3980               	andlw	128
  8907     0A7A  1D03               	skipz
  8908     0A7B  03FF               	decf	btemp+1,f
  8909     0A7C  087F               	movf	btemp+1,w
  8910     0A7D  1803               	skipnc
  8911     0A7E  0A7F               	incf	btemp+1,w
  8912     0A7F  1D03               	skipz
  8913     0A80  07A1               	addwf	(_pos_currentPosition+1)^(0+128),f	;volatile
  8914     0A81  087F               	movf	btemp+1,w
  8915     0A82  1803               	skipnc
  8916     0A83  0A7F               	incf	btemp+1,w
  8917     0A84  1D03               	skipz
  8918     0A85  07A2               	addwf	(_pos_currentPosition+2)^(0+128),f	;volatile
  8919     0A86  087F               	movf	btemp+1,w
  8920     0A87  1803               	skipnc
  8921     0A88  0A7F               	incf	btemp+1,w
  8922     0A89  07A3               	addwf	(_pos_currentPosition+3)^(0+128),f	;volatile
  8923     0A8A  2AB0               	goto	i1l2908
  8924     0A8B                     i1l2906:
  8925                           
  8926                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 44:     pos_
      +                          currentPosition -= (long) pos_encoderStatus(prev_state, curr_state);
  8927     0A8B  087B               	movf	pos_UpdatePosition@curr_state,w
  8928     0A8C  00F0               	movwf	pos_encoderStatus@curr
  8929     0A8D  087D               	movf	pos_UpdatePosition@prev_state,w
  8930     0A8E  160A  118A  2725  120A  158A  	fcall	_pos_encoderStatus
  8931     0A93  00F6               	movwf	??_pos_UpdatePosition
  8932     0A94  3000               	movlw	0
  8933     0A95  1BF6               	btfsc	??_pos_UpdatePosition,7
  8934     0A96  30FF               	movlw	255
  8935     0A97  00F7               	movwf	??_pos_UpdatePosition+1
  8936     0A98  00F8               	movwf	??_pos_UpdatePosition+2
  8937     0A99  00F9               	movwf	??_pos_UpdatePosition+3
  8938     0A9A  0876               	movf	??_pos_UpdatePosition,w
  8939     0A9B  1683               	bsf	3,5	;RP0=1, select bank1
  8940     0A9C  1303               	bcf	3,6	;RP1=0, select bank1
  8941     0A9D  02A0               	subwf	_pos_currentPosition^(0+128),f	;volatile
  8942     0A9E  0877               	movf	??_pos_UpdatePosition+1,w
  8943     0A9F  1C03               	skipc
  8944     0AA0  0F77               	incfsz	??_pos_UpdatePosition+1,w
  8945     0AA1  2AA3               	goto	u329_25
  8946     0AA2  2AA4               	goto	u329_26
  8947     0AA3                     u329_25:
  8948     0AA3  02A1               	subwf	(_pos_currentPosition+1)^(0+128),f	;volatile
  8949     0AA4                     u329_26:
  8950     0AA4  0878               	movf	??_pos_UpdatePosition+2,w
  8951     0AA5  1C03               	skipc
  8952     0AA6  0F78               	incfsz	??_pos_UpdatePosition+2,w
  8953     0AA7  2AA9               	goto	u329_27
  8954     0AA8  2AAA               	goto	u329_28
  8955     0AA9                     u329_27:
  8956     0AA9  02A2               	subwf	(_pos_currentPosition+2)^(0+128),f	;volatile
  8957     0AAA                     u329_28:
  8958     0AAA  0879               	movf	??_pos_UpdatePosition+3,w
  8959     0AAB  1C03               	skipc
  8960     0AAC  0F79               	incfsz	??_pos_UpdatePosition+3,w
  8961     0AAD  2AAF               	goto	u329_29
  8962     0AAE  2AB0               	goto	u329_20
  8963     0AAF                     u329_29:
  8964     0AAF  02A3               	subwf	(_pos_currentPosition+3)^(0+128),f	;volatile
  8965     0AB0                     u329_20:
  8966     0AB0                     i1l2908:
  8967                           
  8968                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 45:   prev_s
      +                          tate = curr_state;
  8969     0AB0  087B               	movf	pos_UpdatePosition@curr_state,w
  8970     0AB1  00FD               	movwf	pos_UpdatePosition@prev_state
  8971     0AB2                     i1l556:
  8972     0AB2  0008               	return
  8973     0AB3                     __end_of_pos_UpdatePosition:
  8974                           
  8975                           	psect	text46
  8976     1725                     __ptext46:	
  8977 ;; *************** function _pos_encoderStatus *****************
  8978 ;; Defined at:
  8979 ;;		line 32 in file "/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  prev            1    wreg     unsigned char 
  8982 ;;  curr            1    0[COMMON] unsigned char 
  8983 ;; Auto vars:     Size  Location     Type
  8984 ;;  prev            1    3[COMMON] unsigned char 
  8985 ;; Return value:  Size  Location     Type
  8986 ;;                  1    wreg      char 
  8987 ;; Registers used:
  8988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  8989 ;; Tracked objects:
  8990 ;;		On entry : 0/0
  8991 ;;		On exit  : 0/0
  8992 ;;		Unchanged: 0/0
  8993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8994 ;;      Params:         1       0       0       0       0
  8995 ;;      Locals:         1       0       0       0       0
  8996 ;;      Temps:          2       0       0       0       0
  8997 ;;      Totals:         4       0       0       0       0
  8998 ;;Total ram usage:        4 bytes
  8999 ;; Hardware stack levels used: 2
  9000 ;; This function calls:
  9001 ;;		Nothing
  9002 ;; This function is called by:
  9003 ;;		_pos_UpdatePosition
  9004 ;; This function uses a non-reentrant model
  9005 ;;
  9006                           
  9007     1725                     _pos_encoderStatus:	
  9008                           ;psect for function _pos_encoderStatus
  9009                           
  9010                           
  9011                           ;incstack = 0
  9012 ;; hardware stack exceeded
  9013                           ; Regs used in _pos_encoderStatus: [wreg-fsr0h+status,2+status,0+pclath]
  9014                           ;pos_encoderStatus@prev stored from wreg
  9015     1725  00F3               	movwf	pos_encoderStatus@prev
  9016     1726                     i1l2892:
  9017                           
  9018                           ;/Users/jun/Documents/PMR3406/PI-7/PID/position_sensor.X/position_sensor.c: 34:   return
      +                           (signed char) enc_states[prev * 4 + curr];
  9019     1726  0873               	movf	pos_encoderStatus@prev,w
  9020     1727  00F1               	movwf	??_pos_encoderStatus
  9021     1728  3002               	movlw	2
  9022     1729                     u324_25:
  9023     1729  1003               	clrc
  9024     172A  0DF1               	rlf	??_pos_encoderStatus,f
  9025     172B  3EFF               	addlw	-1
  9026     172C  1D03               	skipz
  9027     172D  2F29               	goto	u324_25
  9028     172E  3001               	movlw	(low ((_enc_states-__stringbase)| (0+32768)))& (0+255)
  9029     172F  0771               	addwf	??_pos_encoderStatus,w
  9030     1730  00F2               	movwf	??_pos_encoderStatus+1
  9031     1731  0870               	movf	pos_encoderStatus@curr,w
  9032     1732  0772               	addwf	??_pos_encoderStatus+1,w
  9033     1733  0084               	movwf	4
  9034     1734  160A  118A  2000  160A  118A  	fcall	stringdir
  9035     1739                     i1l549:
  9036     1739  0008               	return
  9037     173A                     __end_of_pos_encoderStatus:
  9038     0007                     
  9039                           	psect	functab
  9040     0041                     __pfunctab:
  9041     0041                     __fptable:
  9042     0041                     fptable:
  9043     0041  00FF               	movwf	(btemp+1)& (0+127)
  9044     0042  3000               	movlw	high fptable
  9045     0043  008A               	movwf	10
  9046     0044  087F               	movf	(btemp+1)& (0+127),w
  9047     0045  0782               	addwf	2,f
  9048     0046                     fpbase:
  9049     0046  2846               	goto	fpbase	; Call via a null pointer and you will get stuck here.
  9050     0047                     fp__putch:
  9051     0047                     entry__putch:
  9052     0047  120A  158A  284B   	ljmp	_putch
  9053     004A                     fp__protocol_task:
  9054     004A  120A  118A  2EEB   	ljmp	_protocol_task
  9055     004D                     fp__pid_task:
  9056     004D  160A  118A  2E9B   	ljmp	_pid_task
  9057     0050                     fp__led_task:
  9058     0050  160A  118A  2E96   	ljmp	_led_task
  9059     0053                     __end_of__fptable:
  9060     007E                     btemp	set	126	;btemp
  9061     007E                     wtemp0	set	126
  9062                           
  9063                           	psect	idloc
  9064                           
  9065                           ;Config register IDLOC0 @ 0x2000
  9066                           ;	unspecified, using default values
  9067     2000                     	org	8192
  9068     2000  3FFF               	dw	16383
  9069                           
  9070                           ;Config register IDLOC1 @ 0x2001
  9071                           ;	unspecified, using default values
  9072     2001                     	org	8193
  9073     2001  3FFF               	dw	16383
  9074                           
  9075                           ;Config register IDLOC2 @ 0x2002
  9076                           ;	unspecified, using default values
  9077     2002                     	org	8194
  9078     2002  3FFF               	dw	16383
  9079                           
  9080                           ;Config register IDLOC3 @ 0x2003
  9081                           ;	unspecified, using default values
  9082     2003                     	org	8195
  9083     2003  3FFF               	dw	16383
  9084                           
  9085                           	psect	config
  9086                           
  9087                           ;Config register CONFIG1 @ 0x2007
  9088                           ;	Oscillator Selection bits
  9089                           ;	FOSC = EC, EC: I/O function on RA6/OSC2/CLKOUT pin, CLKIN on RA7/OSC1/CLKIN
  9090                           ;	Watchdog Timer Enable bit
  9091                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9092                           ;	Power-up Timer Enable bit
  9093                           ;	PWRTE = OFF, PWRT disabled
  9094                           ;	RE3/MCLR pin function select bit
  9095                           ;	MCLRE = ON, RE3/MCLR pin function is MCLR
  9096                           ;	Code Protection bit
  9097                           ;	CP = OFF, Program memory code protection is disabled
  9098                           ;	Data Code Protection bit
  9099                           ;	CPD = OFF, Data memory code protection is disabled
  9100                           ;	Brown Out Reset Selection bits
  9101                           ;	BOREN = OFF, BOR disabled
  9102                           ;	Internal External Switchover bit
  9103                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9104                           ;	Fail-Safe Clock Monitor Enabled bit
  9105                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9106                           ;	Low Voltage Programming Enable bit
  9107                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9108                           ;	In-Circuit Debugger Mode bit
  9109                           ;	DEBUG = OFF, In-Circuit Debugger disabled, RB6/ICSPCLK and RB7/ICSPDAT are general pur
      +                          pose I/O pins
  9110     2007                     	org	8199
  9111     2007  20F3               	dw	8435
  9112                           
  9113                           ;Config register CONFIG2 @ 0x2008
  9114                           ;	Brown-out Reset Selection bit
  9115                           ;	BOR4V = 0x1, unprogrammed default
  9116                           ;	Flash Program Memory Self Write Enable bits
  9117                           ;	WRT = OFF, Write protection off
  9118     2008                     	org	8200
  9119     2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    16
    Data        8
    BSS         118
    Persistent  8
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     68      76
    BANK1            80     23      73
    BANK3            96      8      83
    BANK2            96      0       0

Pointer List with Targets:

    _doprnt$2	PTR PTR void  size(1) Largest target is 1
		 -> printf@ap(COMMON[1]), 

    _doprnt$1	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    _doprnt$0	PTR struct __prbuf size(1) Largest target is 3
		 -> printf@pb(COMMON[2]), 

    S836__prbuf$func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    pb.func	PTR FTN(unsigned char ,)void  size(1) Largest target is 1
		 -> putch(), 

    S836__prbuf$ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    tsk_task	PTR FTN()void  size(1) Largest target is 1
		 -> NULL(), led_task(), protocol_task(), pid_task(), 

    S384$taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 

    tsk_tasks.taskFunction	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 

    createTask@t	PTR FTN()void  size(1) Largest target is 1
		 -> led_task(), protocol_task(), pid_task(), 

    convertToReal@chars	PTR unsigned char  size(1) Largest target is 11
		 -> message(BANK3[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_pos_UpdatePosition
    _pos_UpdatePosition->_pos_encoderStatus

Critical Paths under _main in BANK0

    _main->_executeTasks
    _initTasks->_createTask
    _pro_init->_cleanupBuffer
    _createTask->___bmul
    _protocol_task->_convertToReal
    _pro_getMessage->_isValid
    _pro_getMessage->_isValidCmd
    _framingError->_cleanupBuffer
    _convertToReal->___fttol
    ___fttol->___ftadd
    ___ftmul->___altoft
    ___ftadd->___ftmul
    ___altoft->___ftpack
    _pid_task->_pid_pid
    _pid_pid->___lmul
    ___lmul->___aldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _executeTasks->_protocol_task
    _protocol_task->_convertToReal

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    _main->_executeTasks

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   17199
                       _executeTasks
                           _sys_init
 ---------------------------------------------------------------------------------
 (1) _sys_init                                             0     0      0    1200
                          _initTasks
                           _pic_init
 ---------------------------------------------------------------------------------
 (2) _pic_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _initTasks                                            0     0      0    1200
                         _createTask
                           _mot_init
                           _pid_init
                           _pos_init
                           _pro_init
                        _pro_setMyId
 ---------------------------------------------------------------------------------
 (3) _pro_setMyId                                          1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _pro_init                                             0     0      0      90
                      _cleanupBuffer
                           _ser_init
 ---------------------------------------------------------------------------------
 (4) _ser_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pos_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _pid_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _mot_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _createTask                                           5     0      5    1088
                                              7 BANK0      5     0      5
                             ___bmul
 ---------------------------------------------------------------------------------
 (1) _executeTasks                                         9     9      0   15999
                                             67 BANK0      1     1      0
                                              0 BANK3      8     8      0
                                NULL *
                             ___bmul
                           _led_task *
                           _pid_task *
                      _protocol_task *
 ---------------------------------------------------------------------------------
 (2) _protocol_task                                        4     4      0   13291
                                             19 BANK1      4     4      0
                      _convertToReal
                     _pid_clearError
              _pid_setDerivativeGain
                _pid_setIntegralGain
                       _pid_setPoint
            _pid_setProportionalGain
             _pos_setCurrentPosition
                     _pro_getMessage
 ---------------------------------------------------------------------------------
 (3) _pro_getMessage                                      17     6     11    1479
                                              7 BANK0     17     6     11
                _addToIncomingBuffer
                             _chkchr
                      _cleanupBuffer
                 _clear_usart_errors
                       _framingError
                            _isValid
                         _isValidCmd
                              _putch
                          _toMsgType
 ---------------------------------------------------------------------------------
 (4) _toMsgType                                            1     1      0     110
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     658
                                              4 BANK0      1     0      1
 ---------------------------------------------------------------------------------
 (4) _isValidCmd                                           3     1      2     110
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _isValid                                              3     1      2      88
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (4) _framingError                                         0     0      0      90
                      _cleanupBuffer
 ---------------------------------------------------------------------------------
 (4) _cleanupBuffer                                        1     1      0      90
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _clear_usart_errors                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _chkchr                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _addToIncomingBuffer                                  1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _pos_setCurrentPosition                               4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setProportionalGain                              4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setPoint                                         4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setIntegralGain                                  4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_setDerivativeGain                                4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _pid_clearError                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _convertToReal                                       28    24      4   11382
                                             58 BANK0      9     5      4
                                              0 BANK1     19    19      0
                           ___altoft
                            ___ftadd
                            ___ftmul
                            ___fttol
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             13     9      4     508
                                             45 BANK0     13     9      4
                           ___altoft (ARG)
                            ___ftadd (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    3047
                                             18 BANK0     15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftadd                                             12     6      6    3407
                                             33 BANK0     12     6      6
                           ___altoft (ARG)
                            ___ftmul (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___altoft                                             6     2      4    2731
                                             12 BANK0      6     2      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    2337
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (2) _pid_task                                             0     0      0    2114
                            _pid_pid
 ---------------------------------------------------------------------------------
 (3) _pid_pid                                             12    12      0    2114
                                             32 BANK0     12    12      0
                            ___aldiv
                             ___lmul
                  _mot_setExcitation
                _pid_scaleExcitation
             _pos_getCurrentPosition
 ---------------------------------------------------------------------------------
 (4) _pos_getCurrentPosition                               4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _pid_scaleExcitation                                  4     0      4      86
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _mot_setExcitation                                    6     4      2     310
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              13     5      8    1116
                                             19 BANK0     13     5      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             15     7      8     556
                                              4 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (2) _led_task                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) ___bmul                                               3     2      1     402
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _isr                                                  5     5      0     456
                                             12 COMMON     1     1      0
                                              0 BANK0      4     4      0
                 _pos_UpdatePosition
 ---------------------------------------------------------------------------------
 (7) _pos_UpdatePosition                                   8     6      2     433
                                              4 COMMON     8     6      2
                  _pos_encoderStatus
 ---------------------------------------------------------------------------------
 (9) _pos_encoderStatus                                    4     3      1     172
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _executeTasks
     NULL(Fake) *
     ___bmul *
     _led_task *
     _pid_task *
       _pid_pid
         ___aldiv
         ___lmul
           ___aldiv (ARG)
         _mot_setExcitation
         _pid_scaleExcitation
         _pos_getCurrentPosition
     _protocol_task *
       _convertToReal
         ___altoft
           ___ftpack
         ___ftadd
           ___altoft (ARG)
           ___ftmul (ARG)
             ___altoft (ARG)
             ___ftpack (ARG)
           ___ftpack (ARG)
         ___ftmul
         ___fttol
           ___altoft (ARG)
           ___ftadd (ARG)
           ___ftmul (ARG)
         ___lmul
       _pid_clearError
       _pid_setDerivativeGain
       _pid_setIntegralGain
       _pid_setPoint
       _pid_setProportionalGain
       _pos_setCurrentPosition
       _pro_getMessage
         _addToIncomingBuffer
         _chkchr
         _cleanupBuffer
         _clear_usart_errors
         _framingError
           _cleanupBuffer
         _isValid
         _isValidCmd
         _putch
         _toMsgType
   _sys_init
     _initTasks
       _createTask
         ___bmul
       _mot_init
       _pid_init
       _pos_init
       _pro_init
         _cleanupBuffer
         _ser_init
       _pro_setMyId
     _pic_init

 _isr (ROOT)
   _pos_UpdatePosition
     _pos_encoderStatus

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      8      53       9       86.5%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     17      49       7       91.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     44      4C       5       95.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      D       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      F6      12        0.0%
ABS                  0      0      F6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Jul 05 07:52:26 2024

                   ___altoft@exp 0030                                pc 0002                   ___bmul@product 0025  
                    fp__pid_task 004D                    ___altoft@sign 0031                               l71 0B5F  
                             l72 0B65                               l90 0371                               l67 0B29  
                             l93 17B4                               l96 1782                               l99 179B  
                             fsr 0004                     ___ftadd@exp1 004C                     ___ftadd@exp2 004B  
                   ___ftadd@sign 004A                              l102 17CD                              l200 16BF  
                            l105 1711                              l108 0949                              l221 08B6  
                            l213 08E3                              l206 07FE                              l302 084C  
                            l303 0858                              l304 0862                              l209 16ED  
                            l153 0910                              l330 17F5                              l306 086B  
                            l227 0F24                              l171 0806                              l332 17FF  
                            l252 16FE                              l413 07D5              convertToReal@potDez 00DB  
                            l166 16DF                              l327 16C9                              l255 16A6  
                            l416 169A                              l249 0FFF                              l426 03A2  
                            l603 0BE0                              l435 05BE                              l451 0983  
                            l611 0883                              l419 0A5A                              l197 082C  
                            l614 088D                              l632 0A0D                              l296 084A  
                            l721 09C5                              l457 0E43                              l562 1769  
                            l546 16D4                              l644 1750                              l397 16A0  
                            l559 17E6                              l921 0CC9                              l826 0C5E  
                            l850 0606                              l914 0CE6                              l851 060E  
                            l852 0613                              l837 0C3A                              l861 0684  
                            l838 0C44                              l839 0C5E                              l847 06EA  
                            l689 0CFB                              l699 0D83                              l893 0F1A  
            convertToReal@signal 00D2                              _RA4 002C                              _RB5 0035  
                            _PR2 0092                              _RX9 00C6                              _TX9 04C6  
            _pid_scaleExcitation 0B0B             convertToReal@decimal 00D6                              _isr 0AB3  
                            fsr0 0004                              indf 0000              _pos_currentPosition 00A0  
              _mot_setExcitation 0B66               ?_mot_setExcitation 0024                             l2200 0BCC  
                           l2120 0825                             l2202 0BDD                             l2130 0BF6  
                           l2122 0BE1                             l2114 0812                             l2210 16BA  
                           l2204 0BDE                             l2140 0C17                             l2132 0BFA  
                           l2124 0BE8                             l2116 081B                             l2108 080F  
                           l2220 07F1                             l2212 07D9                             l2300 084B  
                           l2206 0BDF                             l2150 0C3E                             l2142 0C1F  
                           l2134 0C02                             l2126 0BEF                             l2230 16E3  
                           l2118 081F                             l2214 07DF                             l2222 07F7  
                           l2302 0850                             l2310 0863                             l2400 0D2A  
                           l2160 0B11                             l2152 0C46                             l2144 0C26  
                           l2136 0C09                             l2232 16E9                             l2320 17FB  
                           l2208 16B7                             l2216 07E5                             l2312 0869  
                           l2304 085C                             l2240 08C2                             l2410 0D5B  
                           l2402 0D2E                             l2170 0B4A                             l2162 0B1E  
                           l2154 0C58                             l2146 0C30                             l2138 0C0D  
                           l2322 17FE                             l2314 17E7                             l2226 07FC  
                           l2218 07EB                             l2306 085E                             l2242 08C8  
                           l2234 08BA                             l2330 0835                             l3130 0A13  
                           l2420 0D7B                             l2412 0D5C                             l2404 0D32  
                           l2180 0B66                             l2172 0B59                             l2164 0B2F  
                           l2156 0C5D                             l2148 0C34                             l2500 069C  
                           l2316 17ED                             l2308 0861                             l2260 08E0  
                           l2252 08D2                             l2236 08C0                             l2340 083E  
                           l2332 0838                             l2324 082D                             l3140 0A38  
                           l3132 0A18                             l2414 0D65                             l2406 0D3B  
                           l2190 0BA1                             l2182 0B6C                             l2166 0B37  
                           l2158 0B0B                             l2430 098D                             l2510 06D1  
                           l2502 06AC                             l2318 17F9                             l2270 0897  
                           l2254 08D8                             l2246 08CA                             l3150 0730  
                           l2350 0849                             l2342 0841                             l2334 0839  
                           l2326 0831                             l3142 0A49                             l3134 0A1D  
                           l2408 0D4D                             l2416 0D6B                             l2360 09F4  
                           l2352 09C6                             l2184 0B84                             l2192 0BA3  
                           l2168 0B44                             l2176 1751                             l2432 099B  
                           l2424 0984                             l2512 06D3                             l2504 06AD  
                           l2600 0CB7                             l2280 08AC                             l2264 08E2  
                           l2248 08D0                             l3152 074C                             l3144 06EB  
                           l2344 0842                             l2336 083C                             l2328 0832  
                           l3136 0A22                             l3128 0A0E                             l2370 1742  
                           l2418 0D70                             l2362 0A05                             l2354 09D0  
                           l2194 0BB0                             l2186 0B9F                             l2434 09A4  
                           l2426 0987                             l2506 06BD                             l2442 05BF  
                           l2530 0E77                             l2522 0E5C                             l2610 0CD3  
                           l2290 16C0                             l2282 08B2                             l2274 089A  
                           l2258 08DA                             l3242 07C1                             l3154 0761  
                           l3162 07B5                             l3146 070A                             l2346 0843  
                           l2338 083D                             l3138 0A28                             l3170 16D5  
                           l2372 1746                             l2356 09D4                             l2196 0BBC  
                           l2188 0BA0                             l2620 0073                             l2436 09A8  
                           l2428 0989                             l2508 06C1                             l2460 0609  
                           l2452 05F1                             l2444 05DA                             l2540 0E9F  
                           l2532 0E87                             l2524 0E6B                             l2516 0E44  
                           l2612 0CDE                             l2292 16C6                             l2276 08A0  
                           l2268 0891                             l3244 0FD4                             l3156 077D  
                           l3148 0711                             l3180 0D87                             l2348 0846  
                           l3172 16DA                             l2374 1748                             l2366 173D  
                           l2390 0D0A                             l2382 0CE7                             l2358 09EB  
                           l2198 0BC2                             l2630 01D3                             l2622 00E4  
                           l2438 09AE                             l2470 0627                             l2462 060D  
                           l2454 05F6                             l2446 05E0                             l2550 0EC1  
                           l2542 0EA5                             l2534 0E99                             l2518 0E55  
                           l2606 0CBE                             l2278 08A6                             l2710 0FAC  
                           l3158 0799                             l3182 0E06                             l3174 0D84  
                           l3190 0805                             l2376 174A                             l2368 173E  
                           l2392 0D0E                             l2384 0CEA                             l2640 0330  
                           l2632 01DE                             l2624 0113                             l2616 0053  
                           l2480 064C                             l2472 0631                             l2464 0612  
                           l2456 05FC                             l2448 05EA                             l2560 0EDD  
                           l2552 0EC9                             l2544 0EAB                             l2536 0E9D  
                           l2528 0E72                             l2608 0CCE                             l2296 16C8  
                           l2712 0FB2                             l2704 0F91                             l3184 0E37  
                           l2800 0878                             l2378 174F                             l2394 0D16  
                           l2386 0CEE                             l2642 0351                             l2634 01F6  
                           l2626 018A                             l2618 0056                             l2490 0672  
                           l2474 0637                             l2482 0653                             l2466 0614  
                           l2458 0607                             l2562 0EED                             l2554 0ED1  
                           l2546 0EAD                             l2538 0E9E                             l2650 179C  
                           l2706 0F9C                             l2714 0FB5                             l2722 0FCA  
                           l3186 0E3D                             l2810 087E                             l2802 087A  
                           l2396 0D1E                             l2388 0CFF                             l2644 0352  
                           l2636 0200                             l2628 01BF                             l2492 067A  
                           l2484 0659                             l2476 0640                             l2468 061A  
                           l2564 0EF5                             l2556 0ED7                             l2548 0EB1  
                           l2580 0C89                             l2572 0C5F                             l2652 176A  
                           l2716 0FC3                             l2708 0FA6                             l2724 0FE2  
                           l2812 087F                             l2804 087B                             l2660 0911  
                           l2820 16CA                             l2740 16A4                             l3188 0800  
                           l2398 0D21                             l2646 035B                             l2638 0288  
                           l2494 067E                             l2486 0663                             l2478 0648  
                           l2566 0EFD                             l2558 0ED9                             l2590 0C9D  
                           l2582 0C8A                             l2574 0C70                             l2750 0398  
                           l2742 0375                             l2654 1783                             l2726 0FE7  
                           l2670 0F34                             l2662 0F1B                             l2822 094A  
                           l2814 0880                             l2806 087C                             l2734 16EE  
                           l2830 08FB                             l2648 036E                             l2496 0688  
                           l2488 0669                             l2568 0F03                             l2584 0C90  
                           l2760 03B7                             l2752 03A0                             l2744 038D  
                           l2656 17B5                             l2680 0F51                             l2672 0F3C  
                           l2664 0F23                             l2816 0881                             l2808 087D  
                           l2736 16F4                             l2840 0909                             l2832 08FE  
                           l2824 08E4                             l2498 0698                             l2586 0C97  
                           l2578 0C79                             l2770 03F4                             l2762 03C6  
                           l2746 038E                             l2658 16FF                             l2690 0F6F  
                           l2682 0F56                             l2674 0F42                             l2666 0F27  
                           l2818 0887                             l2738 16F9                             l2842 090D  
                           l2834 0902                             l2826 08F6                             l2596 0CA5  
                           l2588 0C99                             l2780 04B1                             l2772 03FE  
                           l2764 03D5                             l2756 03A9                             l2748 038F  
                           l2676 0F45                             l2668 0F2F                             l2844 090F  
                           l2836 0903                             l2828 08F7                             l2598 0CAE  
                           l2782 0527                             l2774 0401                             l2694 0F74  
                           l2686 0F5B                             l2678 0F4B                             l2862 169B  
                           l2838 0905                             l2776 0426                             l2784 057A  
                           l2768 03E5                             l2792 17CE                             l2696 0F7A  
                           l2688 0F69                             l2778 042B                             l2698 0F8E  
                           l2890 1696                             l2794 086C                             l2788 057F  
                           l2796 0872                             l2798 0874                             ?_isr 0070  
                           STR_1 1016                             _BRGH 04C2                             _T0IE 005D  
                           _T0IF 005A                             _CREN 00C4                             _FERR 00C2  
                           u2000 0B8B                             u2001 0B87                             u2020 0B9C  
                           u2100 07EB                             u2021 0B98                             u2101 07EA  
                           u2014 0B8E                             u2110 07F1                             u2111 07F0  
                           u2040 0BC9                             u3000 01F6                             u2200 08A6  
                           u2120 07F7                             u2041 0BC5                             u3001 01F5  
                           u2201 08A5                             u2121 07F6                             u2034 0B9F  
                           u2210 08AC                             u2130 08C0                             u3011 022F  
                           u3003 01F2                             u2211 08AB                             u2131 08BF  
                           u2060 0BDA                             u3020 02FD                             u3012 0232  
                           u2220 08B2                             u2140 08C8                             u3100 0FB2  
                           _IOCB 0096                             u2301 09DD                             u2061 0BD6  
                           u3021 02FE                             u3013 0239                             u2221 08B1  
                           u2141 08C7                             u3101 0FB1                             u2302 09E4  
                           u2054 0BCC                             u3030 030F                             u3022 0303  
                           u3014 023C                             u2230 16C6                             u2150 08D0  
                           u3110 0FC3                             u2303 09EB                             u3031 0310  
                           u3023 0304                             u3015 0243                             u2231 16C5  
                           u2151 08CF                             u3111 0FC2                             u2400 0D32  
                           u3032 0315                             u3016 0246                             u3200 042B  
                           u2080 07DF                             u2240 0850                             u2160 08D8  
                           u3120 0FF1                             u3040 0F23                             u2401 0D31  
                           u3033 0316                             u3201 042A                             u2081 07DE  
                           u2241 084F                             u2161 08D7                             u3041 0F22  
                           u2330 0A05                             u2074 0BDD                             u3130 0398  
                           u2090 07E5                             u2250 085C                             u2170 08E0  
                           u3050 0F34                             u3210 0887                             u2331 0A04  
                           u2315 09ED                             u3131 0397                             u2091 07E4  
                           u2251 085B                             u2171 08DF                             u3051 0F33  
                           u3211 0886                             u2340 1742                             u2420 0D4D  
                           u2500 05E0                             u3140 03A8                             u2180 0897  
                           u2260 0869                             u3060 0F42                             u2341 1741  
                           u2421 0D4C                             u2325 09F5                             u2501 05DF  
                           u3141 03A7                             u2181 0896                             u2261 0868  
                           u3061 0F41                             u2350 174F                             u2510 05EA  
                           u3150 03B6                             u2270 17ED                             u2190 08A0  
                           u3070 0F51                             u2351 174E                             u2415 0D34  
                           u2511 05E9                             u3151 03B5                             u2271 17EC  
                           u2191 089F                             u3071 0F50                             u2440 0D6B  
                           u2360 0CEE                             u2600 063F                             u2520 05F6  
                           u3160 03C6                             u2280 17F9                             u3080 0F69  
                           u2441 0D6A                             u2425 0D49                             u2361 0CED  
                           u2601 063E                             u2521 05F5                             u3161 03C5  
                           u2281 17F8                             u3081 0F68                             u2450 0D70  
                           u2370 0CFF                             u2290 09D4                             u2530 05FC  
                           u3170 03D5                             u3090 0F7A                             u2451 0D6F  
                           u2435 0D5D                             u2371 0CFE                             u2291 09D3  
                           u2531 05FB                             u3171 03D4                             u3091 0F79  
                           u2380 0D1E                             u1900 0C34                             u2460 098D  
                           u2700 069C                             u2620 0652                             u2540 0606  
                           u3180 03E4                             u1820 0825                             u2381 0D1D  
                           u1901 0C33                             u2461 098C                             u2701 069B  
                           u2621 0651                             u2541 0605                             u3181 03E3  
                           u1821 0824                             u1910 0C3A                             u1830 0BE8  
                           u2630 0659                             u2550 060D                             u3190 03F4  
                           u1911 0C39                             u1831 0BE7                             u2711 06B6  
                           u2631 0658                             u2615 0641                             u2551 060C  
                           u3191 03F3                             u1920 0C3E                             u1840 0BEF  
                           u2480 09AE                             u2720 06C1                             u2712 06BD  
                           u2560 0612                             u3600 0711                             u1921 0C3D  
                           u1841 0BEE                             u2481 09AD                             u2721 06C0  
                           u2561 0611                             u3601 0710                             u1930 0C4F  
                           u2650 0669                             u2570 0627                             u2490 05DA  
                           u2810 0ED7                             u2730 0E55                             u2395 0D23  
                           u2475 099C                             u2651 0668                             u2571 0626  
                           u2491 05D9                             u2811 0ED6                             u2731 0E54  
                           u3611 0DBE                             u1940 0C5D                             u1860 0C08  
                           u2660 0671                             u2820 0EDD                             u2740 0E6B  
                           u2900 0CA4                             u3620 0E06                             u3612 0DBF  
                           u1941 0C5C                             u1861 0C07                             u2661 0670  
                           u2645 065A                             u2821 0EDC                             u2805 0ECA  
                           u2741 0E6A                             u2901 0CA3                             u3621 0E05  
                           u3613 0DC4                             u1950 0B1E                             u2590 0637  
                           u2750 0E82                             u3630 0E43                             u3614 0DC5  
                           u1951 0B1D                             u1935 0C4B                             u1855 0BFB  
                           u2591 0636                             u2831 0EE6                             u3631 0E42  
                           u3623 0E02                             u3615 0DCA                             u1960 0B2F  
                           u1880 0C25                             u2680 0684                             u2832 0EED  
                           u2760 0E92                             u2920 0CB6                             u3616 0DCB  
                           u1961 0B2E                             u1881 0C24                             u2681 0683  
                           u2585 0628                             u2921 0CB5                             u1970 0B44  
                           u2690 0688                             u2770 0EB1                             u2930 0CBD  
                           u1971 0B43                             u1955 0B1A                             u1875 0C18  
                           u2691 0687                             u2675 0673                             u2771 0EB0  
                           u2755 0E7E                             u2931 0CBC                             u2915 0CA6  
                           u1980 0B59                             u2860 0F03                             u1981 0B58  
                           u2861 0F02                             u2845 0EEE                             u2781 0EBA  
                           u2765 0E8E                             u1990 0B6C                             u2782 0EC1  
                           u2950 0CCE                             u2870 0C70                             u3590 06FC  
                           u1991 0B6B                             u1975 0B40                             u1895 0C29  
                           u2855 0EF6                             u2951 0CCD                             u2871 0C6F  
                           _RBIE 005B                             u2960 0CD3                             u2880 0C84  
                           _RBIF 0058                             u1985 0B55                             u2961 0CD2  
                           u2945 0CC0                             u2890 0C9D                             u2971 0170  
                           u2795 0EC2                             u2891 0C9C                             _RCIE 0465  
                           u2980 01A7                             u2972 017B                             _RCIF 0065  
                           u2973 0186                             u2885 0C80                             u2990 01D3  
                           u2991 01D2                             u2993 01CF                             u2985 01A2  
                           _OERR 00C1                             _TMR0 0001                             _SPEN 00C7  
                           _SREN 00C5                             _TXIE 0464                             _TXEN 04C5  
                           _TXIF 0064                             _SYNC 04C4                             _WPUB 0095  
                           _main 0800                     ___ftpack@arg 0024                     ___ftpack@exp 0027  
                           btemp 007E             ?_pid_scaleExcitation 0024      __end_of_addToIncomingBuffer 16EE  
            ??_mot_setExcitation 0026                  _completeMessage 01B1                             start 0012  
              ___bmul@multiplier 0026                     ___ftmul@cntr 003F                     ___ftmul@sign 0040  
                  ?_framingError 0070                     ___fttol@exp1 0059                    _convertToReal 0372  
                  _protocol_task 06EB                     ___fttol@lval 0055                            ??_isr 0020  
                          _DC1B0 00BC                            _DC1B1 00BD                            _DC2B0 00EC  
                          _DC2B1 00ED                  __end_of___aldiv 0D84                            ?_main 0070  
                          _CCP1X 00BD                            _CCP1Y 00BC                            _CCP2X 00ED  
                          _CCP2Y 00EC                  __end_of___ftadd 06EB                    pro_setMyId@id 0024  
                          _BRG16 0C3B                            _ANSEL 0188                  __end_of___ftmul 0F1B  
                __end_of___fttol 0CE7                            _T2CON 0012                            i1l163 0AFE  
                          i1l556 0AB2                            i1l549 1739                            _RCREG 001A  
      __end_of_mot_setExcitation 0BE1                            _SPBRG 0099                            _PORTA 0005  
                          _PORTB 0006                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TXREG 0019              ___lmul@multiplicand 0037  
               ??_pid_clearError 0024       createTask@scheduleInterval 002A                 ??_pro_getMessage 0032  
                __end_of_isValid 08B7                            _dummy 0067                            _error 00B0  
                __end_of_pid_pid 0372                    ___ftpack@sign 0028                            _value 00A4  
                          _putch 084B                            fpbase 0046                            pclath 000A  
                          status 0003            ??_pid_scaleExcitation 0028                            wtemp0 007E  
                 ??_framingError 0025                  __initialization 0015    pid_scaleExcitation@activation 0024  
                   __end_of_main 080F                   ?_convertToReal 005A                   ?_protocol_task 0070  
                   isValid@aChar 0026                           ??_main 0064                    ___fttol@sign1 0054  
                  _tsk_timeStamp 00A8                    ?_executeTasks 0070                 __end_of___altoft 09C6  
                         _CCPR1L 0015                           _CCPR2L 001B                           ?_putch 0024  
               __end_of___ftpack 0C5F                           _ANSELH 0189            pos_UpdatePosition@dir 0075  
                         i1l3000 0AED                           i1l3002 0AF1                           i1l3004 0AF3  
                         i1l3006 0AFD                           i1l2902 0A5C                           i1l2904 0A6D  
                         i1l2906 0A8B                           i1l2908 0AB0                           i1l2892 1726  
                         i1l2990 0AD0                           i1l2982 0AB3                           i1l2992 0AD4  
                         i1l2984 0AB7                           i1l2994 0AE4                           i1l2986 0ABB  
                         i1l2996 0AE8                           i1l2988 0AC3                           i1l2998 0AE9  
                         u324_25 1729                           u343_20 0AB7                           u343_21 0AB6  
                         u327_24 0A62                           u327_25 0A60                           u328_20 0A6D  
                         u344_20 0ABB                           u328_21 0A6C                           u344_21 0ABA  
                         u329_20 0AB0                           u345_20 0AD0                           u345_21 0ACF  
                         u329_25 0AA3                           u345_25 0ACC                           u329_26 0AA4  
                         u329_27 0AA9                           u329_28 0AAA                           u346_20 0AED  
                         u329_29 0AAF                           u346_21 0AEC                           u347_20 0AF1  
                         u347_21 0AF0                           _TMR2IF 0061                           _SPBRGH 009A  
               __end_of__fptable 0053                           ___bmul 173A                           ___lmul 09C6  
               __end_of_led_task 169B                        ??___aldiv 002C                        ??___ftadd 0047  
                         _chkchr 16C0                        ??___ftmul 0038                        ??___fttol 0051  
          __end_of_cleanupBuffer 082D                      entry__putch 0047                 __end_of_pic_init 0911  
               __end_of_pid_init 094A                 __end_of_pid_task 16A1                  isValidCmd@aChar 0026  
                      ??_isValid 0026            ___ftmul@f3_as_product 003C                           fptable 0041  
                 ??_executeTasks 01DB                 __end_of_mot_init 088E                 __end_of_ser_init 084B  
                         fptotal 0007                        ??_pid_pid 0040                 __end_of_pos_init 16D5  
                         saved_w 007E                 __end_of_pro_init 16FF                  _currentPosition 00CC  
                         putch@c 0024                    ?_pid_setPoint 0024                     ?_pro_setMyId 0070  
               __end_of_sys_init 16E0          __end_of__initialization 003D                       ___altoft@c 002C  
                     ___ftadd@f1 0041                       ___ftadd@f2 0044                   cleanupBuffer@i 0024  
            ___bmul@multiplicand 0024                  ??_convertToReal 005E                  ??_protocol_task 00E5  
                     ___ftmul@f1 0032                       ___ftmul@f2 0035                       ___fttol@f1 004D  
                 __pcstackCOMMON 0070                     __pidataBANK3 16AF       __end_of_pos_UpdatePosition 0AB3  
       addToIncomingBuffer@aChar 0024                    __end_of_putch 086C      __end_of_pid_setIntegralGain 179C  
           __end_of_framingError 16C0                   ??_pid_setPoint 0028            _pid_setDerivativeGain 176A  
                        ??_putch 0025                       __pbssBANK0 0064                       __pbssBANK1 00A0  
                     __pbssBANK3 0190                       _activation 00B4                       __pmaintext 0800  
                        ?___bmul 0024                          ?___lmul 0033                          ?_chkchr 0070  
                     __pintentry 0004                          _CCP1CON 0017                          _CCP2CON 001D  
                      ?___altoft 002C                   ___lmul@product 003C                        ?___ftpack 0024  
              _pos_encoderStatus 1725                       _enc_states 1006                       _createTask 094A  
         pos_UpdatePosition@init 0074           pos_UpdatePosition@port 007A               ?_pos_encoderStatus 0070  
            pro_getMessage@aChar 0037         ??_pos_getCurrentPosition 0028         ??_pos_setCurrentPosition 0028  
            ??_pos_encoderStatus 0071                       __stringtab 1000                       _isValidCmd 07D6  
                      ?_led_task 0070          _pid_setProportionalGain 17B5                        ?_pic_init 0070  
                      ?_pid_init 0070                        ?_pid_task 0070             __end_of_executeTasks 0E44  
                      ?_mot_init 0070                        ?_ser_init 0070                    _integralError 00C0  
                      ?_pos_init 0070                        ?_pro_init 0070                          ___aldiv 0CE7  
        pid_setIntegralGain@gain 0024                          ___ftadd 05BF                       _excitation 0064  
                        ___ftmul 0E44                          ___fttol 0C5F                  _tsk_elapsedTime 01BC  
      __end_of_pos_encoderStatus 173A                       ??___altoft 0030                       ??___ftpack 0029  
     __end_of_clear_usart_errors 1800                          __ptext1 16D5                          __ptext2 08E4  
                        __ptext3 0A0E                          __ptext4 16A1                          __ptext5 16EE  
                        __ptext6 082D                          __ptext7 16CA                          __ptext8 0911  
                        __ptext9 086C                        ?_sys_init 0070                          _isValid 088E  
          pos_encoderStatus@curr 0070                __end_of_initTasks 0A5B            pos_encoderStatus@prev 0073  
                        _pid_pid 0053                          _message 01C0                 ___aldiv@dividend 0028  
         ?_pid_setDerivativeGain 0024                          _pro_ptr 0068      __end_of_pid_scaleExcitation 0B66  
         mot_setExcitation@value 0028                          clrloop0 16A8             end_of_initialization 003D  
                     ??_led_task 0024                __end_of_toMsgType 08E4                 _previousPosition 00AC  
                _half_PID_PERIOD 01D7                       ??_pic_init 0024                       ??_pid_init 0024  
                     ??_pid_task 004C                       ??_mot_init 0024                       ??_ser_init 0024  
                     ??_pos_init 0024                 ___aldiv@quotient 002F                       ??_pro_init 0025  
           __end_of_pid_setPoint 17B5                        _PORTAbits 0005                       ??_sys_init 002C  
                    ?_createTask 0027                       _pro_status 0069                      _kDerivative 00B8  
      ??_pid_setProportionalGain 0028               convertToReal@chars 00E3                      ?_isValidCmd 0024  
             convertToReal@value 00DF        pos_setCurrentPosition@pos 0024                      ___ftmul@exp 003B  
                   _framingError 16B7                   __end_of___bmul 1751                   __end_of___lmul 0A0E  
    mot_setExcitation@excitation 0024                   __end_of_chkchr 16CA                 _delayus_variable 006B  
            start_initialization 0015               _pos_UpdatePosition 0A5B                      __end_of_isr 0B0B  
            ?_pos_UpdatePosition 0074  __end_of_pid_setProportionalGain 17CE                         ??___bmul 0025  
         _pos_getCurrentPosition 1751                         ??___lmul 003B           _pos_setCurrentPosition 17CE  
          __end_of_convertToReal 05BF            __end_of_protocol_task 07D6                       init_fetch0 1712  
                       ??_chkchr 0024                      __pdataBANK3 01D3             ??_pos_UpdatePosition 0076  
            isr@interruptCounter 00D0     pos_UpdatePosition@curr_state 007B                      __pbssCOMMON 007D  
                   _executeTasks 0D84                        ___latbits 0002                    __pcstackBANK0 0020  
                  __pcstackBANK1 00D2                    __pcstackBANK3 01DB                    _kProportional 01CF  
              __size_of__fptable 0012              _addToIncomingBuffer 16E0                        _kIntegral 01CB  
    pid_setProportionalGain@gain 0024                        __pnvBANK3 01CB                        __pfunctab 0041  
                       ?___aldiv 0024                         ?___ftadd 0041                     _pid_pid$1134 0048  
                       ?___ftmul 0032             ?_addToIncomingBuffer 0070                         ?___fttol 004D  
                  _cleanupBuffer 080F                        __pstrings 1000                         ?_isValid 0024  
        ??_pid_setDerivativeGain 0028        pid_setDerivativeGain@gain 0024                         ?_pid_pid 0070  
   pos_UpdatePosition@prev_state 007D                        _initTasks 0A0E               _clear_usart_errors 17E7  
                   _pid_setPoint 179C                  ___aldiv@divisor 0024              _integralErrorScaled 00C4  
              interrupt_function 0004                  ___aldiv@counter 002D                   _pid_clearError 16FF  
                 _pro_getMessage 0F1B                        clear_ram0 16A7                        _toMsgType 08B7  
            ?_clear_usart_errors 0070            ??_addToIncomingBuffer 0024                   ?_cleanupBuffer 0070  
                    __stringbase 1005                convertToReal@temp 00D7                     ??_createTask 002C  
           ??_clear_usart_errors 0024                        _tsk_tasks 0190                       ?_initTasks 0070  
              ___lmul@multiplier 0033                    ??_pro_setMyId 0024                     ??_isValidCmd 0026  
         __end_of_pid_clearError 1712           __end_of_pro_getMessage 1000                    executeTasks@i 0063  
                     ?_toMsgType 0070               __end_of_enc_states 1016               __end_of_createTask 0984  
           pid_setPoint@position 0024                         ___altoft 0984                         ___ftpack 0BE1  
             __end_of__stringtab 1006               __end_of_isValidCmd 07FF                         __fptable 0041  
                       __ptext10 094A                         __ptext11 0D84                         __ptext20 16B7  
                       __ptext12 1696                         __ptext21 080F                         __ptext13 169B  
                       __ptext30 16FF                         __ptext22 17E7                         __ptext14 06EB  
                       __ptext31 0372                         __ptext23 16C0                         __ptext15 0F1B  
                       __ptext40 0B66                         __ptext32 0C5F                         __ptext24 16E0  
                       __ptext16 08B7                         __ptext41 09C6                         __ptext33 0E44  
                       __ptext25 17CE                         __ptext17 084B                         __ptext42 0CE7  
                       __ptext34 05BF                         __ptext26 17B5                         __ptext18 07D6  
                       __ptext43 173A                         __ptext35 0984                         __ptext27 179C  
                       __ptext19 088E                         __ptext44 0AB3                         __ptext36 0BE1  
                       __ptext28 1783                         __ptext45 0A5B                         __ptext37 0053  
                       __ptext29 176A                         __ptext46 1725                         __ptext38 1751  
                       __ptext39 0B0B                   convertToReal@i 00E4                         _led_task 1696  
                ?_pid_clearError 0070                  ?_pro_getMessage 0027                         _pic_init 08E4  
                       _pid_init 0911                         _pid_task 169B          ?_pos_getCurrentPosition 0024  
            __end_of_pro_setMyId 16A7          ?_pos_setCurrentPosition 0024                         _setPoint 00C8  
                       _mot_init 086C                         _ser_init 082D                  ??_cleanupBuffer 0024  
            _pid_setIntegralGain 1783                         _pos_init 16CA                         _pro_init 16EE  
                       fp__putch 0047                         _tsk_task 0066                    _pro_myAddress 006A  
                       _sys_init 16D5         ?_pid_setProportionalGain 0024                       _INTCONbits 000B  
                       isr@portB 007C                         init_ram0 1716             ?_pid_setIntegralGain 0024  
                    ??_initTasks 002C                 createTask@taskID 0027                         intlevel1 0041  
 __end_of_pos_getCurrentPosition 176A                       _PID_PERIOD 01D3   __end_of_pos_setCurrentPosition 17E7  
                    ??_toMsgType 0024                    _previousError 00BC                        stringcode 1000  
                   _pro_incoming 01A5                   toMsgType@aChar 0024                       _OPTION_REG 0081  
                pro_getMessage@i 0036                         stringdir 1000                         stringtab 1000  
  __end_of_pid_setDerivativeGain 1783                     ___aldiv@sign 002E            ??_pid_setIntegralGain 0028  
                    _pro_setMyId 16A1                 fp__protocol_task 004A                      createTask@t 0029  
                    fp__led_task 0050  
